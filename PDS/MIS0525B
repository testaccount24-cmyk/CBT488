
       TITLE '  MIS0525B: submit commands for JES queue'.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MIS0525B.
      **********************************************************CX003B
      *@@@ C3 submit commands to alter jobs in the JES queue
      ****************************************************************
      *
      *  I am interested in knowing if/where these programs
      *  are in use.     Email:  jiannon@me.com
      *
      ****************************************************************
      * Date written: 08/19/97
      * Author      : Jim Iannone
      *               loop through a static parm which holds job names
      *               that operators are interested in managing.
      *               build the JES commands that will actually alter
      *               the jobs and submit to the internal reader
      *               for processing.
      *
      *  PURGE        /*$VS,'$POJOBQ,JM=PACRSAR,Q=X'
      *
      *  SELECT       /*$VS,'$TOJOBQ,JM=PACRSAR,DAYS=NN,HOURS=NN,
      *                      /W=WRITER-NAME,
      *                      ODISP=WRITE/HOLD,
      *  SEND                NDISP=WRITE/HOLD,
      *                      Q=X,C=FCB,P=PRTY,W=WRITER-NAME,D=DEST
      *
      *    NOTE:  this program calls delay program "NEWWAIT"
      *           which resides on CBT tape #270 and requires
      *           MACLIB from same tape number when compiling
      *
      ****************************************************************
      * Date changed: 05/18/2005
      * Programmer  : Jim Iannone
      *               FORMAT COMMANDS FOR Z/OS 1.4
      ****************************************************************
      * Date changed: 12/06/2006
      * Programmer  : Jim Iannone
      *               ALLOW SELECTION BY WRITER NAME
      *               ALLOW OUTPUT PRIORITY MODIFICATION
      ****************************************************************
      * Date changed: 12/06/2012
      * Programmer  : Jim Iannone
      *               CHANGES TO COMMAND SYNTAX
      ****************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           C01 IS PAGE-TOP.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT PARM01               ASSIGN TO PARM01
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT INTRDR               ASSIGN TO INTRDR
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.


       DATA DIVISION.
       FILE SECTION.

       FD  PARM01
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  PARM01-RECORD.
           05  PARM01-FLAG             PIC  X.
           05  PARM01-JOB              PIC  X(08).
           05  FILLER REDEFINES PARM01-JOB.
               10  PARM01-WAIT         PIC  X(05).
               10  PARM01-VAL          PIC  XXX.
           05  FILLER                  PIC  XX.
           05  PARM01-PURGE            PIC  X.
           05  FILLER                  PIC  XX.
           05  PARM01-DAYS             PIC  XX.
           05  FILLER                  PIC  XX.
           05  PARM01-HOURS            PIC  XX.
           05  FILLER                  PIC  XX.
           05  PARM01-SOURCE           PIC  X.
           05  FILLER                  PIC  XX.
           05  PARM01-ACTION           PIC  X.
           05  FILLER                  PIC  XX.
           05  PARM01-NEW-CLASS        PIC  X.
           05  FILLER                  PIC  X.
           05  PARM01-WRITER           PIC  X(08).
           05  FILLER                  PIC  X.
           05  PARM01-NEW-FCB          PIC  X(04).
           05  FILLER                  PIC  X.
           05  PARM01-NEW-PRTY         PIC  XXX.
           05  FILLER                  PIC  X.
           05  PARM01-NEW-WRITER       PIC  X(08).
           05  FILLER                  PIC  X.
           05  PARM01-DEST             PIC  X(08).
           05  FILLER                  PIC  X(07).
           05  FILLER                  PIC  X(08).

       FD  INTRDR
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  INTRDR-RECORD.
           05  INTRDR-LEADER           PIC  X(06).
           05  INTRDR-COMMAND          PIC  X(74).

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working storage MIS0525B start '.

       01  WS-WORK-FIELDS.
           05  WS-STAT                 PIC  99       VALUE ZERO.
           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.
           05  WS-WAIT-SECONDS         PIC  9(07)    VALUE ZERO.
           05  WS-WAIT-MINUTES         PIC  9(07)    VALUE ZERO.
           05  WS-WAIT-REMAIN          PIC  9(05)    VALUE ZERO.
           05  WS-DELAY                PIC  999      VALUE ZERO.
           05  WS-GEN-DELAY            PIC  999      VALUE ZERO.
           05  WS-TALLY                PIC  9(05)    VALUE ZERO.
           05  WS-JOB                  PIC  X(11)    VALUE SPACE.
           05  WS-ALL                  PIC  X(15)    VALUE SPACE.
           05  WS-HOLD1                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD2                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD3                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD4                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD5                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD6                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD7                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD8                PIC  X(15)    VALUE SPACE.
           05  WS-HOLD9                PIC  X(15)    VALUE SPACE.

       01  WS-COUNT-FIELDS             COMP-3.
           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-PURGE-RCD-CNT        PIC S9(07)    VALUE ZERO.
           05  WS-CHANGE-RCD-CNT       PIC S9(07)    VALUE ZERO.
           05  WS-WAIT-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-WRITE-RCD-CNT        PIC S9(07)    VALUE ZERO.

       01  WS-SWITCHES.
           05  WS-END-PARM01-SW        PIC  X        VALUE 'N'.
               88  END-OF-PARM01                     VALUE 'Y'.
               88  MORE-PARM01-RCDS                  VALUE 'N'.

       01  NEWWAIT-DATA.
           05  NEWWAIT-LEN             PIC S9999     VALUE +3 COMP.
           05  NEWWAIT-DELAY           PIC  999.
      *    05  NEWWAIT-LEN             PIC S9999     VALUE +5 COMP.
      *    05  NEWWAIT-DELAY           PIC  9(05).

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  MIS0525B END  '.

       LINKAGE SECTION.

       01  PARM-FIELD.
           05  PARM-LENGTH             PIC S9(04)    COMP.
           05  PARM-GEN-DELAY          PIC  XXX.
           05  FILLER                  PIC  X.
           05  PARM-DELAY              PIC  XXX.

      /
       PROCEDURE DIVISION USING PARM-FIELD.

       0100-PROGRAM-ENTRY.
           DISPLAY '      '.
           DISPLAY '**** MIS0525B alter jobs in JES queue '.
           PERFORM 0200-OPEN-FILES.

           IF PARM-DELAY NUMERIC
               MOVE PARM-DELAY                TO WS-DELAY.
           IF WS-DELAY < 2
               MOVE 2                         TO WS-DELAY.
           IF PARM-GEN-DELAY NUMERIC
               MOVE PARM-GEN-DELAY            TO WS-GEN-DELAY.
           IF WS-GEN-DELAY < 2
               MOVE 2                         TO WS-GEN-DELAY.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0400-PROCESS-PARM01.

           DIVIDE WS-WAIT-SECONDS BY 60 GIVING WS-WAIT-MINUTES
                  REMAINDER WS-WAIT-REMAIN.

           DISPLAY '**** Records in PARM01   ' WS-READ-RCD-CNT.
           DISPLAY '**** Change commands     ' WS-CHANGE-RCD-CNT.
           DISPLAY '**** Purge commands      ' WS-PURGE-RCD-CNT.
           DISPLAY '**** Wait commands       ' WS-WAIT-RCD-CNT.
           DISPLAY '**** Records written     ' WS-WRITE-RCD-CNT.
           DISPLAY '**** Ddelay interval     ' WS-DELAY.
           DISPLAY '**** Generic delay       ' WS-GEN-DELAY.
           DISPLAY '**** Delay min/sec       ' WS-WAIT-MINUTES
                                               ' ' WS-WAIT-REMAIN.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0300-CLOSE-FILES
           ELSE
               DISPLAY '**** MIS0525B cond code ' WS-RETURN-CODE
                       ' sent by program'
               MOVE WS-RETURN-CODE            TO RETURN-CODE.

           DISPLAY '**** MIS0525B EOJ encountered '.
           DISPLAY '      '.
           STOP RUN.

       0200-OPEN-FILES.
           OPEN INPUT  PARM01.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0525B open error on PARM01'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN OUTPUT INTRDR.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0525B open error on INTRDR'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0201                     TO WS-RETURN-CODE.

       0300-CLOSE-FILES.
           CLOSE INTRDR.
           CLOSE PARM01.

       0400-PROCESS-PARM01.
           IF WS-RETURN-CODE = ZERO
               PERFORM 0500-READ-PARM01 THRU
                       0500-READ-PARM01-EXIT
                       UNTIL END-OF-PARM01.

       0500-READ-PARM01.
           READ PARM01.
           IF WS-STAT = ZERO
               ADD 1                          TO WS-READ-RCD-CNT
               PERFORM 0600-SELECT THRU
                       0600-SELECT-EXIT
           ELSE
           IF WS-STAT = 10
               MOVE 'Y'                       TO WS-END-PARM01-SW
           ELSE
               DISPLAY '**** MIS0525B read error on PARM01 '
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0500                     TO WS-RETURN-CODE.

       0500-READ-PARM01-EXIT. EXIT.

       0600-SELECT.
           IF PARM01-FLAG = '*'
               GO TO 0600-SELECT-EXIT.
           IF PARM01-JOB = SPACE
               GO TO 0600-SELECT-EXIT.
           IF PARM01-WAIT = 'WAIT '
               PERFORM 0650-WAIT
               GO TO 0600-SELECT-EXIT.
           MOVE SPACE                         TO INTRDR-RECORD.
           MOVE SPACE                         TO WS-HOLD1 WS-HOLD2
                                                 WS-HOLD3 WS-HOLD4
                                                 WS-HOLD5 WS-HOLD6
                                                 WS-HOLD7 WS-HOLD8
                                                 WS-HOLD9 WS-ALL.
           IF PARM01-PURGE = SPACE
               PERFORM 0800-BUILD-CHANGE
           ELSE
               PERFORM 0700-BUILD-PURGE.

           PERFORM 0900-WRITE-INTRDR-FILE.

      *---------------------------------------
      *    call NEWWAIT: delay processing to avoid flooding
      *    the internal reader
      *+--------------------------------------
           MOVE ZERO                          TO WS-TALLY.
           INSPECT WS-JOB TALLYING WS-TALLY FOR ALL '?'.
           IF WS-TALLY = ZERO
               MOVE ZERO                      TO WS-TALLY
               INSPECT WS-JOB TALLYING WS-TALLY FOR ALL '*'
               IF WS-TALLY = ZERO
                   MOVE WS-DELAY              TO NEWWAIT-DELAY
               ELSE
                   MOVE WS-GEN-DELAY          TO NEWWAIT-DELAY
           ELSE
               MOVE WS-GEN-DELAY              TO NEWWAIT-DELAY.
           CALL 'NEWWAIT' USING NEWWAIT-DATA.
           ADD NEWWAIT-DELAY                  TO WS-WAIT-SECONDS.

       0600-SELECT-EXIT. EXIT.

       0650-WAIT.
           IF PARM01-VAL NUMERIC
               MOVE PARM01-VAL                TO NEWWAIT-DELAY
               CALL 'NEWWAIT' USING NEWWAIT-DATA
               ADD 1                          TO WS-WAIT-RCD-CNT
               ADD NEWWAIT-DELAY              TO WS-WAIT-SECONDS.

       0700-BUILD-PURGE.
           MOVE '/*$VS,'                      TO INTRDR-LEADER.
           MOVE PARM01-JOB                    TO WS-JOB.
           IF PARM01-HOURS = '00'
               CONTINUE
           ELSE
           IF PARM01-HOURS NUMERIC
               MOVE ',HOURS>'                 TO WS-HOLD1
               MOVE PARM01-HOURS              TO WS-HOLD1(8: 2).

           IF PARM01-DAYS = '00'
               CONTINUE
           ELSE
           IF PARM01-DAYS NUMERIC
               MOVE ',DAYS>'                  TO WS-HOLD1
               MOVE PARM01-DAYS               TO WS-HOLD1(7: 2).

           IF PARM01-SOURCE = 'H'
               MOVE ',HELD'                   TO WS-HOLD2.

           MOVE ',Q='                         TO WS-HOLD4.
           MOVE PARM01-PURGE                  TO WS-HOLD4(4: 1).

           IF PARM01-DEST NOT = SPACE
               MOVE ',D='                     TO WS-HOLD9
               MOVE PARM01-DEST               TO WS-HOLD9(4: 8).

           STRING QUOTE                       DELIMITED BY SIZE
                  '$POJOBQ,JM='               DELIMITED BY SIZE
                  WS-JOB                      DELIMITED BY SPACE
                  WS-ALL                      DELIMITED BY SPACE
                  WS-HOLD1                    DELIMITED BY SPACE
                  WS-HOLD2                    DELIMITED BY SPACE
                  WS-HOLD4                    DELIMITED BY SPACE
                  WS-HOLD9                    DELIMITED BY SPACE
                  QUOTE                       DELIMITED BY SIZE
                  INTO INTRDR-COMMAND.
           ADD 1                              TO WS-PURGE-RCD-CNT.

       0800-BUILD-CHANGE.
           MOVE '/*$VS,'                      TO INTRDR-LEADER.
           MOVE PARM01-JOB                    TO WS-JOB.
           MOVE ',ALL'                        TO WS-ALL.

           IF PARM01-HOURS = '00'
               CONTINUE
           ELSE
           IF PARM01-HOURS NUMERIC
               MOVE ',/HOURS>'                TO WS-HOLD1
               MOVE PARM01-HOURS              TO WS-HOLD1(9: 2).

           IF PARM01-DAYS = '00'
               CONTINUE
           ELSE
           IF PARM01-DAYS NUMERIC
               MOVE ',/DAYS>'                 TO WS-HOLD1
               MOVE PARM01-DAYS               TO WS-HOLD1(8: 2).

           IF PARM01-WRITER NOT = SPACE
               MOVE ',/W='                    TO WS-HOLD5
               MOVE PARM01-WRITER             TO WS-HOLD5(5: 8).

           IF PARM01-SOURCE = 'O'
               MOVE ',/OUTD=WRITE'            TO WS-HOLD2
           ELSE
           IF PARM01-SOURCE = 'H'
               MOVE ',/OUTD=HOLD'             TO WS-HOLD2.

           IF PARM01-NEW-CLASS NOT = SPACE
               MOVE ',Q='                     TO WS-HOLD4
               MOVE PARM01-NEW-CLASS          TO WS-HOLD4(4: 1).

           IF PARM01-ACTION = 'O'
               MOVE ',OUTD=WRITE'             TO WS-HOLD3
           ELSE
           IF PARM01-ACTION = 'H'
               MOVE ',OUTD=HOLD'              TO WS-HOLD3.

           IF PARM01-NEW-FCB NOT = SPACE
               MOVE ',C='                     TO WS-HOLD6
               MOVE PARM01-NEW-FCB            TO WS-HOLD6(4: 4).

           IF PARM01-NEW-PRTY NOT = SPACE
               MOVE ',P='                     TO WS-HOLD7
               MOVE PARM01-NEW-PRTY           TO WS-HOLD7(4: 3).

           IF PARM01-NEW-WRITER NOT = SPACE
               MOVE ',W='                     TO WS-HOLD8
               MOVE PARM01-NEW-WRITER         TO WS-HOLD8(4: 8).

           IF PARM01-DEST NOT = SPACE
               MOVE ',D='                     TO WS-HOLD9
               MOVE PARM01-DEST               TO WS-HOLD9(4: 8).

           STRING QUOTE                       DELIMITED BY SIZE
                  '$TOJOBQ,/JM='              DELIMITED BY SIZE
                  WS-JOB                      DELIMITED BY SPACE
                  WS-ALL                      DELIMITED BY SPACE
                  WS-HOLD1                    DELIMITED BY SPACE
                  WS-HOLD5                    DELIMITED BY SPACE
                  WS-HOLD2                    DELIMITED BY SPACE
                  WS-HOLD4                    DELIMITED BY SPACE
                  WS-HOLD3                    DELIMITED BY SPACE
                  WS-HOLD6                    DELIMITED BY SPACE
                  WS-HOLD7                    DELIMITED BY SPACE
                  WS-HOLD8                    DELIMITED BY SPACE
                  WS-HOLD9                    DELIMITED BY SPACE
                  QUOTE                       DELIMITED BY SIZE
                  INTO INTRDR-COMMAND.
           ADD 1                              TO WS-CHANGE-RCD-CNT.

       0900-WRITE-INTRDR-FILE.
           WRITE INTRDR-RECORD.
           MOVE '/*EOF '                      TO INTRDR-RECORD.
           WRITE INTRDR-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0525B write error on INTRDR'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0900                     TO WS-RETURN-CODE.
           ADD 1                              TO WS-WRITE-RCD-CNT.

      ************************************ END MIS0525B
