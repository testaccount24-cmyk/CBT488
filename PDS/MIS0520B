
       TITLE '  MIS0520B: tape dsn vol list for jcl '.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MIS0520B.
      ******************************************************************
      *@@@ II generate tape DSN volume list for JCL
      ******************************************************************
      *
      *  I am interested in knowing if/where these programs
      *  are in use.     Email:  jiannon@me.com
      *
      ******************************************************************
      * Date written: 06/06/2000
      * Author      : Jim Iannone
      *
      *               1.  RMM is queried for a dataset name:
      *                     RMM SD DSN('PDSMS.SMHM.DGA6HCT0.HMMASTER.*')
      *                     SINCE(2000/152) OWN(*) LIM(*) SEQ(*)
      *
      *                     output is not in volume sequence order
      *
      *               2.  volumes from previous query are placed into
      *                   an RMM query to obtain volume sequence:
      *                     RMM LV 000000 STAT
      *
      *               3.  this program sorts the volumes by volume
      *                   sequence and places the volume list into
      *                   a valid JCL DDN line.  that is then
      *                   concatenated into other valid JCL and
      *                   is used to catalog a previously
      *                   uncataloged dataset.
      *
      ****************************************************************
      * input:    READY
      *           RMM LV 308267 STAT
      *           Statistics:
      *           Number of data sets = 1
      *           Volume Usage(Kb)= 713522
      *           Date last read  = 2000/06/04
      *           Drive last used = 0691
      *           Volume sequence = 4
      *           Previous volume = 308277
      *
      * output:
      *
      *     //    VOL=SER=(308323,308286,308277,308267,308402,
      *     //             308809,308807)
      *
      ****************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SPECIAL-NAMES.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT RMMLVI               ASSIGN TO RMMLVI
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT GDGLVL               ASSIGN TO GDGLVL
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT RMMLVO               ASSIGN TO RMMLVO
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT SORT-RMMLVI          ASSIGN TO S-SORTWK01.

       DATA DIVISION.
       FILE SECTION.

       FD  RMMLVI
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  RMMLVI-RECORD.
           05  RMMLVI-RCD              PIC  X(80).
           05  FILLER REDEFINES RMMLVI-RCD.
               10  RMMLVI-1X15         PIC  X(15).
               10  FILLER              PIC  XXX.
               10  RMMLVI-19           PIC  X.
               10  RMMLVI-20           PIC  X.
               10  FILLER              PIC  X(60).

       FD  GDGLVL
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  GDGLVL-RECORD.
           05  GDGLVL-RCD              PIC  X(80).
           05  FILLER REDEFINES GDGLVL-RCD.
               10  FILLER              PIC  X(29).
               10  GDGLVL-30X37        PIC  X(08).
               10  FILLER REDEFINES GDGLVL-30X37.
                   15  FILLER          PIC  X.
                   15  GDGLVL-31X34    PIC  X(04).
                   15  FILLER          PIC  XXX.
               10  FILLER              PIC  X(43).

       FD  RMMLVO
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  RMMLVO-RECORD.
           05  RMMLVO-RCD              PIC  X(80).

       SD  SORT-RMMLVI.
       01  SORT-RECORD.
           05  SR-VOLSER               PIC  X(06).
           05  SR-VOLSEQ               PIC  99.
           05  FILLER REDEFINES SR-VOLSEQ.
               10  SR-VOLSEQ-1         PIC  X.
               10  SR-VOLSEQ-2         PIC  X.
           05  SR-FILLER               PIC  X(12).

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working storage MIS0520B start '.

       01  WS-WORK-FIELDS.
           05  WS-STAT                 PIC  99       VALUE ZERO.
           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.
           05  WS-MAX-PER-LN           PIC  999      VALUE ZERO.
           05  WS-GDG-HOLD             PIC  X(08)    VALUE SPACE.
           05  WS-APPEND-LINE-1        PIC  X(40)    VALUE
               '//*-------------------------------------'.
           05  WS-APPEND-LINE-2        PIC  X(40)    VALUE
               '//*   VOL=SER= generated by MIS0520B    '.
           05  WS-RMMLVO-RCD           PIC  X(80)    VALUE SPACE.
           05  FILLER REDEFINES WS-RMMLVO-RCD.
               10  WS-SLASH            PIC  XX.
               10  FILLER              PIC  X(04).
               10  WS-PREFIX           PIC  X(09).
               10  WS-VOLS             PIC  X(49).
               10  WS-VOL REDEFINES WS-VOLS
                                       PIC  X(07)
                                       OCCURS 7 TIMES.
               10  FILLER              PIC  XX.
               10  WS-GDG              PIC  X(05).
               10  FILLER              PIC  X(09).

       01  WS-COUNT-FIELDS             COMP-3.
           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-SORT-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-WRITE-RCD-CNT        PIC S9(07)    VALUE ZERO.

       01  WS-SUBSCRIPTS               COMP.
           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.
           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.

       01  WS-SWITCHES.
           05  WS-END-RMMLVI-SW        PIC  X        VALUE 'N'.
               88  END-OF-RMMLVI                     VALUE 'Y'.
               88  MORE-RMMLVI-RCDS                  VALUE 'N'.
           05  WS-END-GDGLVL-SW        PIC  X        VALUE 'N'.
               88  END-OF-GDGLVL                     VALUE 'Y'.
               88  MORE-GDGLVL-RCDS                  VALUE 'N'.
           05  WS-END-SORT-SW          PIC  X        VALUE 'N'.
               88  END-OF-SORT                       VALUE 'Y'.
               88  MORE-SORT-RCDS                    VALUE 'N'.
           05  WS-FIND-VOL-SW          PIC  X        VALUE 'Y'.

       01  WS-STV0400B-FIELDS.
           05  STV0400B-DATA           PIC  X(10)   VALUE SPACE.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-1X6        PIC  X(06).
               10  STV0400B-NBR        PIC  X(04).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-1X8        PIC  X(08).
               10  FILLER              PIC  XX.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAYS       PIC  X(05).
               10  FILLER              PIC  X(05).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAY        PIC  X(09).
               10  STV0400B-DAY-NBR    PIC  X.
           05  STV0400B-DATA2          PIC  X(10)   VALUE SPACE.
           05  STV0400B-IN             PIC  X(06)   VALUE SPACE.
           05  STV0400B-OUT            PIC  X(06)   VALUE SPACE.

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  MIS0520B END  '.

       LINKAGE SECTION.

       01  LS-FIELD.
           05  LS-LENGTH               PIC S9(04)    COMP.
           05  LS-GDG-SW               PIC  X.
           05  LS-APPEND-DOC-SW        PIC  X.
           05  LS-FILLER               PIC  X(06).

      /
       PROCEDURE DIVISION USING LS-FIELD.

       0100-PROGRAM-ENTRY.
           DISPLAY '      '.
           DISPLAY '**** MIS0520B tape DSN volume list '.
           PERFORM 0200-OPEN-FILES.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0400-PROCESS-RMMLVI.

           DISPLAY '**** Records in RMMLVI   ' WS-READ-RCD-CNT.
           DISPLAY '**** Records sorted      ' WS-SORT-RCD-CNT.
           DISPLAY '**** Records written     ' WS-WRITE-RCD-CNT.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0300-CLOSE-FILES
           ELSE
               DISPLAY '**** MIS0520B cond code ' WS-RETURN-CODE
                       ' sent by program'
               MOVE WS-RETURN-CODE            TO RETURN-CODE.

           DISPLAY '**** MIS0520B EOJ encountered '.
           DISPLAY '      '.

           STOP RUN.

       0200-OPEN-FILES.
           OPEN INPUT  RMMLVI.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0520B open error on RMMLVI'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN INPUT  GDGLVL.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0520B open error on GDGLVL'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0201                     TO WS-RETURN-CODE.
           OPEN OUTPUT RMMLVO.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0520B open error on RMMLVO'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0202                     TO WS-RETURN-CODE.

       0300-CLOSE-FILES.
           CLOSE RMMLVO.
           CLOSE GDGLVL.
           CLOSE RMMLVI.

       0400-PROCESS-RMMLVI.
           IF WS-RETURN-CODE = ZERO
               SORT SORT-RMMLVI
                   ON ASCENDING KEY SR-VOLSEQ
                   INPUT PROCEDURE IS 0500-SORT-IN
                   OUTPUT PROCEDURE IS 0900-SORT-OUT.

       0500-SORT-IN.
           IF LS-GDG-SW = 'Y'
               PERFORM 0600-READ-GDGLVL THRU
                       0600-READ-GDGLVL-EXIT
                       UNTIL END-OF-GDGLVL.
           PERFORM 0600-READ-RMMLVI THRU
                   0600-READ-RMMLVI-EXIT
                   UNTIL END-OF-RMMLVI.

       0600-READ-GDGLVL.
           READ GDGLVL.
           IF WS-STAT = ZERO
             IF GDGLVL-31X34 NUMERIC
                 MOVE GDGLVL-30X37            TO WS-GDG-HOLD
                 MOVE 'Y'                     TO WS-END-GDGLVL-SW
             ELSE
                 CONTINUE
           ELSE
           IF WS-STAT = 10
               MOVE 'Y'                       TO WS-END-GDGLVL-SW
           ELSE
               DISPLAY '**** MIS0520B read error on GDGLVL'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0600                     TO WS-RETURN-CODE.

       0600-READ-GDGLVL-EXIT. EXIT.

       0600-READ-RMMLVI.
           READ RMMLVI.
           IF WS-STAT = ZERO
               ADD 1                          TO WS-READ-RCD-CNT
               PERFORM 0700-SELECT THRU
                       0700-SELECT-EXIT
           ELSE
           IF WS-STAT = 10
               MOVE 'Y'                       TO WS-END-RMMLVI-SW
           ELSE
               DISPLAY '**** MIS0520B read error on RMMLVI'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0600                     TO WS-RETURN-CODE.

       0600-READ-RMMLVI-EXIT. EXIT.

       0700-SELECT.
           IF WS-FIND-VOL-SW = 'Y'
               PERFORM 0700-FIND-VOLUME
                   VARYING WS-SUB2 FROM 1 BY 1
                   UNTIL WS-SUB2 > 60.
           IF RMMLVI-1X15 = 'Volume sequence'
                MOVE 'Y'                      TO WS-FIND-VOL-SW
                IF RMMLVI-20 NUMERIC
                    MOVE RMMLVI-19            TO SR-VOLSEQ-1
                    MOVE RMMLVI-20            TO SR-VOLSEQ-2
                    PERFORM 0800-SEND-TO-SORT
                ELSE
                    MOVE ZERO                 TO SR-VOLSEQ-1
                    MOVE RMMLVI-19            TO SR-VOLSEQ-2
                    PERFORM 0800-SEND-TO-SORT.
           IF RMMLVI-1X15 = 'READY          '
                MOVE 'Y'                      TO WS-FIND-VOL-SW.

       0700-SELECT-EXIT. EXIT.

       0700-FIND-VOLUME.
           IF RMMLVI-RCD(WS-SUB2: 7) = 'RMM LV '
                MOVE RMMLVI-RCD(WS-SUB2 + 7: 6) TO SR-VOLSER
                MOVE 60                        TO WS-SUB2
                MOVE 'N'                       TO WS-FIND-VOL-SW.

       0800-SEND-TO-SORT.
           RELEASE SORT-RECORD.

      *-------------------------------------------------------
      *-------------------------------------------------------
      *-------------------------------------------------------

       0900-SORT-OUT.
           MOVE '//'                          TO WS-SLASH.
           MOVE 'VOL=SER=('                   TO WS-PREFIX.
           MOVE 7                             TO WS-MAX-PER-LN.
           MOVE 1                             TO WS-SUB1.
           PERFORM 1000-RETURN-RECORDS
               UNTIL END-OF-SORT.
           IF WS-SORT-RCD-CNT > ZERO
               SUBTRACT 1 FROM WS-SUB1
               MOVE ')'                       TO WS-VOL(WS-SUB1)(7:1)
               MOVE WS-GDG-HOLD               TO WS-GDG
               MOVE WS-RMMLVO-RCD             TO RMMLVO-RCD
               PERFORM 1500-WRITE-RMMLVO
               IF LS-APPEND-DOC-SW = 'Y'
                   PERFORM 1400-APPEND-DOCUMENTATION.

       1000-RETURN-RECORDS.
           PERFORM 1100-RETURN-SORT.
           IF MORE-SORT-RCDS
               ADD 1                          TO WS-SORT-RCD-CNT
               PERFORM 1200-BUILD-VOLSER-JCL.

       1100-RETURN-SORT.
           RETURN SORT-RMMLVI
               AT END
                   MOVE 'Y'                   TO WS-END-SORT-SW.

       1200-BUILD-VOLSER-JCL.
           IF WS-SUB1 > WS-MAX-PER-LN
               MOVE WS-RMMLVO-RCD             TO RMMLVO-RCD
               PERFORM 1500-WRITE-RMMLVO
               MOVE SPACE                     TO WS-PREFIX WS-VOLS
               MOVE 1                         TO WS-SUB1.

           PERFORM 1300-LOAD-JCL.

       1300-LOAD-JCL.
           MOVE SR-VOLSER                     TO WS-VOL(WS-SUB1).
           MOVE ','                           TO WS-VOL(WS-SUB1)(7:1).
           ADD 1                              TO WS-SUB1.

       1400-APPEND-DOCUMENTATION.
           MOVE WS-APPEND-LINE-1              TO RMMLVO-RCD.
           PERFORM 1500-WRITE-RMMLVO.
           MOVE WS-APPEND-LINE-2              TO RMMLVO-RCD.
           PERFORM 1500-WRITE-RMMLVO.
           MOVE WS-APPEND-LINE-1              TO RMMLVO-RCD.
           PERFORM 1500-WRITE-RMMLVO.

       1500-WRITE-RMMLVO.
           WRITE RMMLVO-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0520B write error on RMMLVO'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           ADD 1                              TO WS-WRITE-RCD-CNT.

      ************************************ END MIS0520B
