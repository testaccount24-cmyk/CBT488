
      *---------------------------------------
      *    right justify a number (without sign)
      *
      *    convert '  12345          '  to  '00000012345'
      *---------------------------------------
           05  WS-JR-NBR               PIC  X(11)    VALUE SPACE.
           05  WS-JR-STRING            PIC  X(50)    VALUE SPACE.

           MOVE NBR                           TO WS-JR-STRING.
           PERFORM 0000-RIGHT-JUSTIFY-NBR.

       0000-RIGHT-JUSTIFY-NBR.
           MOVE SPACE                         TO WS-JR-NBR.
           MOVE 11                            TO WS-STR2.
           PERFORM VARYING WS-STR1 FROM 50 BY -1
               UNTIL WS-STR1 < 1
               IF WS-STR2 > ZERO
                   IF WS-JR-STRING(WS-STR1: 1) NUMERIC
                       MOVE WS-JR-STRING(WS-STR1: 1)
                         TO WS-JR-NBR(WS-STR2: 1)
                       SUBTRACT 1 FROM WS-STR2
                   END-IF
               END-IF
           END-PERFORM.
           INSPECT WS-JR-NBR REPLACING LEADING SPACE BY ZERO.

      *---------------------------------------
      *    right justify a number (with sign)
      *
      *    convert ' -12345.00       '  to  '00001234500'
      *---------------------------------------
           NOTE: DO NOT MOVE '.' INTO WS-JR-NBR - IT IS IMPLIED
           05  WS-JR-STRING            PIC  X(50)    VALUE SPACE.
           05  WS-JR-SIGN              PIC  X        VALUE SPACE.
           05  WS-JR-NBR               PIC  X(11)    VALUE SPACE.
           05  WS-JR-NBR-N REDEFINES WS-JR-NBR
                                       PIC  9(09)V99.
           05  WS-JR-NBR-S             PIC S9(09)V99 VALUE ZERO.

           MOVE NBR                           TO WS-JR-STRING.
           PERFORM 0000-RIGHT-JUSTIFY-WITH-SIGN.

       0000-RIGHT-JUSTIFY-WITH-SIGN.
           MOVE SPACE                         TO WS-JR-SIGN.
           MOVE SPACE                         TO WS-JR-NBR.
           MOVE 11                            TO WS-STR2.
           PERFORM VARYING WS-STR1 FROM 50 BY -1
               UNTIL WS-STR1 < 1
               IF WS-STR2 > ZERO
                   IF WS-JR-STRING(WS-STR1: 1) NUMERIC
                       MOVE WS-JR-STRING(WS-STR1: 1)
                         TO WS-JR-NBR(WS-STR2: 1)
                       SUBTRACT 1 FROM WS-STR2
                   ELSE
                   IF WS-JR-STRING(WS-STR1: 1) = '-'
                       MOVE 'Y'               TO WS-JR-SIGN
                   END-IF
                   END-IF
               END-IF
           END-PERFORM.
           INSPECT WS-JR-NBR REPLACING LEADING SPACE BY ZERO.
           MOVE WS-JR-NBR-N                   TO WS-JR-NBR-S.
           IF WS-JR-SIGN = 'Y'
               COMPUTE WS-JR-NBR-S = WS-JR-NBR-S * -1.


      *---------------------------------------
      *    right justify a string without removing imbedded spaces
      *
      *    convert ' A  BCDEF  123   '  to  '    A  BCDEF  123'
      *---------------------------------------
           05  WS-JR-STRING            PIC  X(50)    VALUE SPACE.
           05  WS-JR-RIGHT             PIC  X(50)    VALUE SPACE.

           MOVE STRING                        TO WS-JR-STRING.
           PERFORM 0000-RIGHT-JUSTIFY-STRING.

       0000-RIGHT-JUSTIFY-STRING.
           MOVE SPACE                         TO WS-JR-RIGHT.
           MOVE 50                            TO WS-STR2.
           PERFORM VARYING WS-STR1 FROM 50 BY -1
               UNTIL WS-STR1 < 1
               IF (WS-JR-STRING(WS-STR1: 1) = SPACE OR LOW-VALUE)
                   AND (WS-STR2 = 50)
                   CONTINUE
               ELSE
                   MOVE WS-JR-STRING(WS-STR1: 1)
                     TO WS-JR-RIGHT(WS-STR2: 1)
                   SUBTRACT 1 FROM WS-STR2
               END-IF
           END-PERFORM.

      *=============================================

