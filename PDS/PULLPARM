**
**  '**  '  =  DOCUMENTATION LINE           input to PULLFILE
**
**  Loop through an input file and search for a specified string
**  in a specified position, or anywhere in the file.
**  When found, write that (full or partial) record, or a group of
**  records (including or not including the original search record)
**  to an output file.  Enter up to 100 strings.
**
**                      x
**           a          sbb mccc ddeee f.ggggg# h.iiiii#       j
**                      i-- ---- ----- -------- -------- ---------------
**
**  a      enter a search string in position 1, length 24
**         '#MAX#' = limit nbr times a record prints via eee
**         '#NBR#' = select numeric characters
**         '#SPACE#' = select spaces
**  xsi    'X'=exclude this record when string found
**             'X' parms must be at the top
**         'I'=include all records regardless of search string contents
**             string length is hardcoded to '01'
**         'S'=terminate previous lines selection
**          # =allows duplicates when eee > zero
**  bb     length of string
**  mccc   position of string.  0000=search for string in record.
**         or enter 'M###' to limit max nbr of duplicates to pull
**         from a single record. (ie: M002 limits to 2 duplicates).
**  -      hyphen: dd = begin pulling dd records before found string
**  dd     record to pull when string found. 00=same, 01=next, etc
**  eee    number of records to pull after string location
**         '999' = pull all records after string location
**
**  f      'P'=positional: (g) is a position to begin pulling output
**         '+'=relative: begin pulling output (g) bytes after string
**         '-'=relative: begin pulling output (g) bytes before string
**         ' '=start pulling from beginning of record
**         '#'=length of delimiter in (g) to find (1/2/3/4/5)
**
**  .      'E' = exclude the delimiter from output if (f) is 1-5
**         'H' = if (h) is '+' or '-': relative to (h) delimiter
**         ' ' = default of include
**
**  ggggg  if (f) is 'P': a position to begin pulling
**         if (f) is '+': a relative position (g) bytes after string
**         if (f) is '-': a relative position (g) bytes before string
**         if (f) is ' ': (g) is ignored
**         if (f) is '#': a physicial delimiter to begin pull
**
**  #      if (f) is a delimiter search: a '3' would mean select the
**            third occurrence of the delimiter for the beginning
**            pull position.
**
**  h      'P'=positional: (i) is a position to end pulling output
**         '+'=relative: end pulling output (i) bytes after string
**         '-'=relative: end pulling output (i) bytes before string
**         ' '=end pulling at end of record
**         '#'=length of delimiter in (i) to find (1/2/3/4/5)
**
**  .      'E' = exclude the delimiter from output if (h) is 1-5
**         'F' = if (f) is '+' or '-': relative to (f) delimiter
**         ' ' = default of include
**
**  iiiii  if (h) is 'P': a position to end pulling
**         if (h) is '+': a relative position (i) bytes after string
**         if (h) is '-': a relative position (i) bytes before string
**         if (h) is ' ': (i) is ignored
**         if (h) is '#': a physicial delimiter to end pull
**
**  #      if (h) is a delimiter search: a '3' would mean select the
**            third occurrence of the delimiter for the ending
**            pull position.
**
**  j      title to place in front of output record.
**         see PULLDOCU for further info
**
**  <-------------------x-- ---------- -------- -------- ---------------
**           a          sbb mccc-ddeee f.ggggg# h.iiiii#       j
**  <----+----+----+----i-- ---------- -------- -------- ---------------
S. U. T.                 08 0000 00000 - 00006  P 00050
S. U. T.                 08 0000 00000 - 00006  +F00003
LISTC                    05 0000 00000 + 00011  3E')     I23
SYSUT2                   06 0003 00000 3ESN=    1E,      File 01:
SYSUT2                   06 0000 00000 3 SN=    +F00044
SYSUT2                   06 0000 00000 3 SN=    + 00044  Cash file ->
SYSUT2                   06 0000 00000 -H00022  3 OAD    S05 Test
ABC                      03 0000 00000 3 DEF  3 +F00006
LINE 02                  07 0000 01009   00000    00000  I10 L00000000
                        I00 0000 00999   00000    00000  L00000000
STOP STRING             S00 0000 00000   00000    00000
