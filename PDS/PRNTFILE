
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    PRNTFILE.
       AUTHOR.        MERCY HEALTH PARTNERS.
      ******************************************************************
      *@@@ print formatted records from sequential or VSAM files
      ******************************************************************
      *
      *  I am interested in knowing if/where these programs
      *  are in use.     Email:  jiannon@me.com
      *
      ******************************************************************
      * Date written: 12/15/89
      * Programmer  : Jim Iannone
      *
      *               To print files, change the following:
      *               - change copybook: PRNTCPY1 PRNTCPY2
      *               - recompile
      *               - change parm
      *               - change proc filename
      *
      *               This program will print sequential or indexed
      *               files with records up to 5040 bytes long.
      *               The parm allows control of:
      *               - number of records to print
      *               - print starting location via 'key' search
      *               - number of bytes (in blocks of 120) to print
      *                 from start of record
      *               - display name of file
      *               - number of records to skip before printing
      *                 - starts from 1st record found, or from key
      *               - print only records with 'key' as specified above
      *
      ******************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SOURCE-COMPUTER. IBM-3081.
       OBJECT-COMPUTER. IBM-3081.
       SPECIAL-NAMES.
           C01 IS PAGE-TOP.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           COPY PRNTCPY1.

           SELECT PARM                 ASSIGN TO PARM
                                       FILE STATUS IS WS-PARM-STAT.

           SELECT PRINT-SUMMARY        ASSIGN TO PRINTER.

       DATA DIVISION.
       FILE SECTION.

       FD  PARM
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0.
       01  PARM-RECORD.
           05  FILLER                  PIC  XX.
           05  PARM-AMOUNT             PIC  X(04).
           05  FILLER                  PIC  XX.
           05  PARM-RANGE              PIC  XX.
           05  FILLER                  PIC  XX.
           05  PARM-KEY                PIC  X(14).
           05  FILLER                  PIC  XX.
           05  PARM-KEY-LENGTH         PIC  XX.
           05  FILLER                  PIC  XX.
           05  PARM-KEY-START          PIC  X(04).
           05  FILLER                  PIC  XX.
           05  PARM-FILE               PIC  X(08).
           05  FILLER                  PIC  XX.
           05  PARM-SKIP               PIC  X(04).
           05  FILLER                  PIC  XX.
           05  PARM-SELECT-ONLY        PIC  X.
           05  FILLER                  PIC  X(25).

       COPY PRNTCPY2.

       FD  PRINT-SUMMARY
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0.
       01  PRINT-AREA.
           05  FILLER                  PIC  X(132).

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working-storage PRNTFILE start '.

       01  WORK-FIELDS.
           05  WS-INFILE-STAT          PIC  99       VALUE ZERO.
           05  WS-PARM-STAT            PIC  99       VALUE ZERO.
           05  WS-LINE-COUNT           PIC S9(04)    VALUE ZERO.
           05  WS-READ-RCD-CNT         PIC  9(08)    VALUE ZERO.
           05  WS-WRITE-RCD-CNT        PIC  9(08)    VALUE ZERO.
           05  WS-PAGE-CNT             PIC  9(04)    VALUE ZERO.
           05  WS-HOLD-PLACE           PIC  9(04)    VALUE ZERO.
           05  WS-HOLD-POS             PIC  X(07)    VALUE SPACE.
           05  WS-PARM-AMOUNT          PIC  9(04)    VALUE ZERO.
           05  WS-PARM-KEY-START       PIC  9(04)    VALUE ZERO.
           05  WS-PARM-KEY-LENGTH      PIC  99       VALUE ZERO.
           05  WS-PARM-RANGE           PIC  99       VALUE ZERO.
           05  WS-PARM-SKIP            PIC  9(04)    VALUE ZERO.
           05  WS-SKIP-CNT             PIC  9(04)    VALUE ZERO.
           05  WS-PARM-FILE            PIC  X(10)    VALUE SPACE.
           05  WS-CALL-STV0270B        PIC  X(08)    VALUE 'STV0270B'.

       01  SUBSCRIPTS                  COMP.
           05  WS-SUB1                 PIC S99       VALUE ZERO.
           05  WS-SUB2                 PIC S99       VALUE +2.

       01  TABLES.
           05  WS-KEY-TABLE                          VALUE SPACE.
               10  WS-KEY              PIC  X
                                       OCCURS 14 TIMES
                                       INDEXED BY INDX1.
           05  WS-KEY2-TABLE                         VALUE SPACE.
               10  WS-KEY2             PIC  X
                                       OCCURS 14 TIMES
                                       INDEXED BY INDX2.
           05  WS-FULL-LINE-TABLE                    VALUE SPACE.
               10  WS-FULL-LINE        PIC  X
                                       OCCURS 5040 TIMES
                                       INDEXED BY FULL.
           05  WS-INFILE-TABLE                       VALUE SPACE.
               10  WS-INFILE           PIC  X(120)
                                       OCCURS 42 TIMES.

       01  WS-PRINT-CONTROL            COMP.
           05  WS-LINE-SUM             PIC S99       VALUE ZERO.
           05  WS-LINE-MAX1            PIC S99       VALUE +43.
           05  WS-LINE-MAX2            PIC S99       VALUE +43.
           05  WS-SPACE-CONTROL1       PIC S99       VALUE ZERO.
           05  WS-SPACE-CONTROL2       PIC S99       VALUE +2.

       01  SWITCHES.
           05  WS-END-FILE-SW          PIC  X        VALUE 'N'.
               88  END-OF-FILE                       VALUE 'Y'.
               88  MORE-RECORDS                      VALUE 'N'.
           05  WS-ERROR-SW             PIC  X        VALUE 'N'.
               88  ERROR-FND                         VALUE 'Y'.
           05  WS-LINE-DONE-SW         PIC  X        VALUE 'N'.
               88  LINE-DONE                         VALUE 'Y'.
           05  WS-RECORD-FND-SW        PIC  X        VALUE 'N'.
               88  RECORD-FOUND                      VALUE 'Y'.
               88  RECORD-NOT-FOUND                  VALUE 'N'.
           05  WS-FORMAT-EVEN-REC-SW   PIC  X        VALUE 'Y'.
               88  FORMAT-EVEN-REC                   VALUE 'Y'.
      *
      *  STANDARD MIS HEADINGS
      *
       01  HEADING-LINE-1.
           05  FILLER                  PIC  X(08)    VALUE 'PRNTFILE'.
           05  FILLER                  PIC  XX       VALUE SPACE.
           05  FILLER                  PIC  X(04)    VALUE 'Date'.
           05  FILLER                  PIC  XX       VALUE SPACE.
           05  HDG-DATE                PIC  X(08)    VALUE SPACE.
           05  FILLER                  PIC  X(29)    VALUE SPACE.
           05  FILLER                  PIC  X(26)    VALUE
               'CBT file 488 print utility'.
           05  FILLER                  PIC  X(53)    VALUE SPACE.

       01  HEADING-LINE-2.
           05  HDG-SECURITY-CODE       PIC  X(20)    VALUE SPACE.
           05  FILLER                  PIC  X(31)    VALUE SPACE.
           05  FILLER                  PIC  X(30)    VALUE
               '                              '.
           05  FILLER                  PIC  X(51)     VALUE SPACE.

       01  HEADING-LINE-3.
           05  FILLER                  PIC  X(46)    VALUE SPACE.
           05  HDG-3-FILE              PIC  X(40)    VALUE SPACE.
           05  FILLER                  PIC  X(46)    VALUE SPACE.

       01  HEADING-LINE-4.
           05  HDG-PAGE                PIC  X(05)    VALUE SPACE.
           05  FILLER                  PIC  X        VALUE SPACE.
           05  HDG-PAGE-CNT            PIC  X(04)    VALUE SPACE.
           05  FILLER                  PIC  X(23)    VALUE
               '  +       -1-       -2-'.
           05  FILLER                  PIC  X(33)    VALUE
               '       -3-       -4-       -5-   '.
           05  FILLER                  PIC  X(33)    VALUE
               '    -6-       -7-       -8-      '.
           05  FILLER                  PIC  X(33)    VALUE
               ' -9-       -0-       -1-       -2'.

       01  HEADING-LINE-5.
           05  HDG-5-FILE              PIC  X(10)    VALUE SPACE.
           05  FILLER                  PIC  X(23)    VALUE
               '  +........+....+....+.'.
           05  FILLER                  PIC  X(33)    VALUE
               '...+....+....+....+....+....+....'.
           05  FILLER                  PIC  X(33)    VALUE
               '+....+....+....+....+....+....+..'.
           05  FILLER                  PIC  X(33)    VALUE
               '..+....+....+....+....+....+....+'.

       01  DETAIL-LINE-1.
           05  D1-COUNT                PIC  X(04)    VALUE SPACE.
           05  FILLER                  PIC  XX       VALUE SPACE.
           05  D1-PLACE                PIC  X(04)    VALUE SPACE.
           05  FILLER                  PIC  XX       VALUE SPACE.
           05  D1-LINE                 PIC  X(120)   VALUE SPACE.

       01  WS-END.
           05  FILLER                  PIC  X(21)    VALUE
               '* END PRNTFILE HERE *'.

       PROCEDURE DIVISION.

       0000-PROGRAM-ENTRY.
           DISPLAY '     '.
           DISPLAY '**** PRNTFILE formatted file print utility'.
           PERFORM 0000-OPEN.
           IF NOT ERROR-FND
               PERFORM 0000-READ-PARM
               PERFORM 0000-EDIT-PARM.
           IF NOT ERROR-FND
               PERFORM 0000-PRINT-HEADING.

           PERFORM 0000-READ-AND-EDIT-INFILE THRU
                   0000-READ-EDIT-INFILE-EXIT
                   UNTIL END-OF-FILE
                   OR (WS-LINE-COUNT NOT < WS-PARM-AMOUNT)
                   OR ERROR-FND.

           PERFORM 0000-CLOSE.
           DISPLAY '**** PRNTFILE EOJ encountered'.
           DISPLAY '     '.
           STOP RUN.

       0000-OPEN.
           OPEN INPUT INFILE.
           IF WS-INFILE-STAT NOT = 00
               DISPLAY '**** PRNTFILE open error on INFILE'
               DISPLAY '**** File stat = ' WS-INFILE-STAT
               MOVE 'Y'                       TO WS-ERROR-SW.
           OPEN INPUT PARM.
           IF WS-PARM-STAT NOT = 00
               DISPLAY '**** PRNTFILE open error on PARM'
               DISPLAY '**** File stat = ' WS-PARM-STAT
               MOVE 'Y'                       TO WS-ERROR-SW.
           OPEN OUTPUT PRINT-SUMMARY.
           MOVE FUNCTION CURRENT-DATE(5: 2) TO HDG-DATE(1: 2).
           MOVE '/'                         TO HDG-DATE(3: 1).
           MOVE FUNCTION CURRENT-DATE(7: 2) TO HDG-DATE(4: 2).
           MOVE '/'                         TO HDG-DATE(6: 1).
           MOVE FUNCTION CURRENT-DATE(3: 2) TO HDG-DATE(7: 2).

       0000-CLOSE.
           IF WS-LINE-COUNT > 9997
               DISPLAY '**** Maximum record handling reached'.
           IF WS-KEY2-TABLE NOT = SPACE
               DISPLAY '**** Parm key                ' WS-KEY2-TABLE.
           IF WS-HOLD-POS NOT = SPACE
               DISPLAY '**** Key position and length ' WS-HOLD-POS.
           IF PARM-SELECT-ONLY = 'Y'
               DISPLAY '**** Print keys only: selected'.
           IF PARM-SKIP NOT = ZERO
               DISPLAY '**** Nbr of records skipped  ' PARM-SKIP.
           IF (WS-PARM-RANGE NOT = ZERO)
               AND (WS-PARM-RANGE NOT = 43)
               DISPLAY '**** Parm range              ' PARM-RANGE.
           CLOSE INFILE.
           CLOSE PARM.
           CLOSE PRINT-SUMMARY.
           DISPLAY '**** INFILE records read     ' WS-READ-RCD-CNT.
           DISPLAY '**** INFILE records written  ' WS-WRITE-RCD-CNT.

       0000-READ-PARM.
           READ PARM.
           IF WS-PARM-STAT NOT = 00
               DISPLAY '**** PRNTFILE read error on PARM'
               DISPLAY '**** File stat = ' WS-PARM-STAT
               MOVE 'Y'                       TO WS-ERROR-SW.

       0000-EDIT-PARM.
           IF PARM-AMOUNT NOT NUMERIC
               DISPLAY '**** PRNTFILE parm-amount not numeric'
               MOVE 'Y'                       TO WS-ERROR-SW
           ELSE
               MOVE PARM-AMOUNT               TO WS-PARM-AMOUNT.
           IF PARM-RANGE NOT NUMERIC
               DISPLAY '**** PRNTFILE parm-range not numeric'
               MOVE 'Y'                       TO WS-ERROR-SW
           ELSE
               MOVE PARM-RANGE                TO WS-PARM-RANGE.
           IF PARM-KEY-LENGTH NOT NUMERIC
               DISPLAY '**** PRNTFILE parm-key-length not numeric'
               MOVE 'Y'                       TO WS-ERROR-SW
           ELSE
               MOVE PARM-KEY-LENGTH           TO WS-PARM-KEY-LENGTH.
           IF PARM-KEY-START NOT NUMERIC
               DISPLAY '**** PRNTFILE parm-key-start not numeric'
               MOVE 'Y'                       TO WS-ERROR-SW
           ELSE
               MOVE PARM-KEY-START            TO WS-PARM-KEY-START.
           IF PARM-SKIP NOT NUMERIC
               DISPLAY '**** PRNTFILE parm-skip not numeric'
               MOVE 'Y'                       TO WS-ERROR-SW
           ELSE
               MOVE PARM-SKIP                 TO WS-PARM-SKIP
               IF WS-PARM-SKIP > 9997
                   DISPLAY '**** PRNTFILE skip amount too high'
                   MOVE 'Y'                   TO WS-ERROR-SW.
           IF NOT ERROR-FND
             IF WS-PARM-KEY-LENGTH > ZERO
                 MOVE SPACE                   TO WS-FULL-LINE-TABLE
               IF PARM-KEY = 'XXXXXXXXXXXXXX'
                   DISPLAY '**** PRNTFILE parm-key required when'
                   DISPLAY '**** key length > 0 '
                   MOVE ZERO                  TO WS-PARM-KEY-LENGTH
                                               WS-PARM-KEY-START
                   MOVE 'N'                   TO PARM-SELECT-ONLY
                   MOVE 1                     TO WS-PARM-AMOUNT
               ELSE
               IF WS-PARM-KEY-START = ZERO
                   DISPLAY '**** PRNTFILE: change parm-start'
                   DISPLAY '**** and parm-length'
                   MOVE ZERO                  TO WS-PARM-KEY-LENGTH
                   MOVE 'N'                   TO PARM-SELECT-ONLY
                   MOVE 1                     TO WS-PARM-AMOUNT
               ELSE
                   STRING PARM-KEY-START ' ' PARM-KEY-LENGTH
                       DELIMITED BY SIZE
                       INTO WS-HOLD-POS
                   PERFORM 0000-FIND-PARM-KEY.
           IF WS-PARM-KEY-LENGTH = ZERO
               MOVE 'Y'                       TO WS-RECORD-FND-SW
               MOVE 'N'                       TO PARM-SELECT-ONLY.
           IF WS-PARM-AMOUNT = ZERO
               MOVE 9998                      TO WS-PARM-AMOUNT.

      *    crude attempt at centering HDG-3-FILE
           IF PARM-FILE = 'XXXXXXXX' OR SPACE
               MOVE '####  ####'              TO WS-PARM-FILE
               MOVE SPACE                     TO HDG-3-FILE
           ELSE
               MOVE PARM-FILE                 TO WS-PARM-FILE
               MOVE SPACE                     TO HDG-3-FILE
               STRING WS-PARM-FILE            DELIMITED BY '  '
                   ' file listing'            DELIMITED BY SIZE
                   INTO HDG-3-FILE
               CALL WS-CALL-STV0270B USING HDG-3-FILE.

       0000-FIND-PARM-KEY.
           MOVE PARM-KEY                      TO WS-KEY-TABLE.
           PERFORM 0000-DISCOVER-KEY
               VARYING INDX1 FROM 1 BY 1
               UNTIL INDX1 > 14
               OR INDX1 > WS-PARM-KEY-LENGTH.

       0000-DISCOVER-KEY.
           MOVE WS-KEY(INDX1)                 TO WS-KEY2(INDX2).
           SET INDX2                          UP BY 1.

       0000-PRINT-HEADING.
           MOVE 2                             TO WS-SPACE-CONTROL1.
           MOVE HEADING-LINE-1                TO PRINT-AREA.
           PERFORM 0000-WRITE-PAGE-TOP.
           MOVE 1                             TO WS-SPACE-CONTROL1.
           MOVE HEADING-LINE-2                TO PRINT-AREA.
           PERFORM 0000-WRITE-LINE.
           MOVE 2                             TO WS-SPACE-CONTROL1.
           MOVE HEADING-LINE-3                TO PRINT-AREA.
           PERFORM 0000-WRITE-LINE.
           ADD 1                              TO WS-PAGE-CNT.
           MOVE 'PAGE:'                       TO HDG-PAGE.
           MOVE WS-PAGE-CNT                   TO HDG-PAGE-CNT.
           MOVE HEADING-LINE-4                TO PRINT-AREA.
           PERFORM 0000-WRITE-LINE.
           MOVE '####  ####'                  TO HDG-5-FILE.
           MOVE 1                             TO WS-SPACE-CONTROL1.
           MOVE HEADING-LINE-5                TO PRINT-AREA.
           PERFORM 0000-WRITE-LINE.
           MOVE 2                             TO WS-SPACE-CONTROL1.

      ****************************************
      *    after printing first page, determine record length using
      *    first record on second page. this allows for printing
      *    full records without splitting between pages.
      *    if string search specified, search here until found.
      ****************************************
       0000-READ-AND-EDIT-INFILE.
           IF WS-PAGE-CNT = 2
               AND FORMAT-EVEN-REC
               PERFORM 0000-FIND-AMOUNT-TO-SPACE.
           IF WS-LINE-SUM > WS-LINE-MAX1
               PERFORM 0000-PRINT-MARKER.

           PERFORM 0000-READ-INFILE.

           IF WS-PARM-SKIP > ZERO
               ADD 1                          TO WS-SKIP-CNT
               IF WS-SKIP-CNT NOT > WS-PARM-SKIP
                   GO TO 0000-READ-EDIT-INFILE-EXIT
               ELSE
                   MOVE ZERO                  TO WS-PARM-SKIP.

           IF PARM-SELECT-ONLY = 'Y'
               MOVE 'N'                       TO WS-RECORD-FND-SW.

           MOVE SPACE                         TO WS-FULL-LINE-TABLE
                                                 WS-INFILE-TABLE.
           IF MORE-RECORDS
               MOVE 'N'                       TO WS-LINE-DONE-SW
               ADD 1                          TO WS-READ-RCD-CNT
               IF RECORD-NOT-FOUND
                   MOVE SPACE                 TO WS-KEY-TABLE
                   MOVE INFILE-RCD            TO WS-FULL-LINE-TABLE
                   SET FULL                   TO WS-PARM-KEY-START
                   PERFORM 0000-LOAD-KEY
                       VARYING INDX1 FROM 1 BY 1
                       UNTIL INDX1 > WS-PARM-KEY-LENGTH
                       OR INDX1 > 14
                   IF WS-KEY-TABLE = WS-KEY2-TABLE
                       MOVE 'Y'               TO WS-RECORD-FND-SW
                   ELSE
                       GO TO 0000-READ-EDIT-INFILE-EXIT
               ELSE
                   NEXT SENTENCE
           ELSE
               GO TO 0000-READ-EDIT-INFILE-EXIT.
           IF WS-PARM-RANGE = ZERO
               MOVE 43                        TO WS-PARM-RANGE.
           MOVE ZERO                          TO WS-HOLD-PLACE.
           ADD 1                              TO WS-LINE-COUNT.
           ADD 1                              TO WS-WRITE-RCD-CNT.
           MOVE WS-LINE-COUNT                 TO D1-COUNT.
           MOVE INFILE-RCD                    TO WS-INFILE-TABLE.
           PERFORM 0000-GENERATE-INFILE-LINE
               VARYING WS-SUB1 FROM 1 BY 1
               UNTIL LINE-DONE
               OR WS-SUB1 > 42.

       0000-READ-EDIT-INFILE-EXIT. EXIT.

       0000-READ-INFILE.
           READ INFILE
               AT END
                   MOVE 'Y'                   TO WS-END-FILE-SW.
           IF WS-INFILE-STAT NOT = 00 AND 10
               DISPLAY '**** PRNTFILE read error on INFILE'
               DISPLAY '**** File stat = ' WS-INFILE-STAT
               MOVE 'Y'                       TO WS-ERROR-SW.

       0000-LOAD-KEY.
           MOVE WS-FULL-LINE(FULL)            TO WS-KEY(INDX1).
           SET FULL                           UP BY 1.

      ****************************************
      *    After reading next record, print until either parm range
      *    is met or table holds only spaces. ws-hold-place is simply a
      *    counter incremented by 120 to aid in viewing printout.
      *    if record is 1 or 2 lines only, space 1 else space 2.
      ****************************************
       0000-GENERATE-INFILE-LINE.
           MOVE SPACE                         TO D1-LINE.
           INSPECT WS-INFILE(WS-SUB1) REPLACING ALL LOW-VALUE BY '.'.
           MOVE WS-INFILE(WS-SUB1)            TO D1-LINE.
           IF WS-PARM-RANGE < 43
             IF WS-SUB1 > WS-PARM-RANGE
                 MOVE 'Y'                     TO WS-LINE-DONE-SW
             ELSE
                 NEXT SENTENCE
           ELSE
           IF WS-SUB1 > WS-PARM-RANGE
               OR WS-INFILE(WS-SUB1) = SPACE
               MOVE 'Y'                       TO WS-LINE-DONE-SW.
           IF NOT LINE-DONE
             IF WS-INFILE(WS-SUB2) = SPACE
                 OR WS-PARM-RANGE = '01'
                 MOVE SPACE                   TO D1-PLACE
             ELSE
                 MOVE WS-HOLD-PLACE           TO D1-PLACE.
           IF NOT LINE-DONE
               ADD 120 TO WS-HOLD-PLACE
               IF WS-LINE-SUM > WS-LINE-MAX2
                   PERFORM 0000-PRINT-MARKER
                   MOVE DETAIL-LINE-1         TO PRINT-AREA
                   PERFORM 0000-WRITE-LINE
               ELSE
                   MOVE DETAIL-LINE-1         TO PRINT-AREA
                   PERFORM 0000-WRITE-LINE.
           MOVE SPACE                         TO D1-COUNT.
           IF LINE-DONE
               AND WS-SUB1 > 3
               MOVE 2                         TO WS-SPACE-CONTROL1
           ELSE
               MOVE 1                         TO WS-SPACE-CONTROL1.

      ****************************************
      *    determine where to break to keep records from being split.
      ****************************************
       0000-FIND-AMOUNT-TO-SPACE.
           SUBTRACT WS-SUB1 FROM WS-LINE-MAX2
               GIVING WS-LINE-MAX1.
           ADD 2                              TO WS-LINE-MAX1.
           MOVE 'N'                           TO WS-FORMAT-EVEN-REC-SW.

      ****************************************
      *    print the markers at the end of the page and those at the
      *    beginning of the next page, except the very first marker.
      ****************************************
       0000-PRINT-MARKER.
           MOVE WS-PARM-FILE                  TO HDG-5-FILE
           MOVE SPACE                         TO HDG-PAGE
                                                 HDG-PAGE-CNT.
           MOVE WS-SPACE-CONTROL2             TO WS-SPACE-CONTROL1.
           MOVE HEADING-LINE-5                TO PRINT-AREA.
           PERFORM 0000-WRITE-LINE.
           MOVE 1                             TO WS-SPACE-CONTROL1.
           MOVE HEADING-LINE-4                TO PRINT-AREA.
           PERFORM 0000-WRITE-LINE.
           ADD 1                              TO WS-PAGE-CNT.
           MOVE 'PAGE:'                       TO HDG-PAGE.
           MOVE WS-PAGE-CNT                   TO HDG-PAGE-CNT.
           MOVE HEADING-LINE-4                TO PRINT-AREA.
           PERFORM 0000-WRITE-PAGE-TOP.
           MOVE '####  ####'                  TO HDG-5-FILE.
           MOVE 1 TO WS-SPACE-CONTROL1.
           MOVE HEADING-LINE-5                TO PRINT-AREA.
           PERFORM 0000-WRITE-LINE.
           MOVE 2 TO WS-SPACE-CONTROL1.

       0000-WRITE-LINE.
           WRITE PRINT-AREA
               AFTER ADVANCING WS-SPACE-CONTROL1 LINES.
           ADD WS-SPACE-CONTROL1              TO WS-LINE-SUM.

       0000-WRITE-PAGE-TOP.
           WRITE PRINT-AREA
               AFTER ADVANCING PAGE-TOP.
           MOVE 2                             TO WS-LINE-SUM.

      ************************************ END PRNTFILE
