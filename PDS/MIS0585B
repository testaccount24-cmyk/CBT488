
       TITLE '  MIS0585B: notification of file extents'.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MIS0585B.
      ******************************************************************
      *@@@ II notify systems of files with high extent counts
      ******************************************************************
      *
      *  I am interested in knowing if/where these programs
      *  are in use.     Email:  jiannon@me.com
      *
      ******************************************************************
      * Date written: 02/25/99
      * Author      : Jim Iannone
      *               Loop through a file built by IEHLIST
      *               and consolidate the extents for files if they
      *               are multivolume.  Then notify personnel via
      *               TSO.  Also check for new or possibly lost
      *               extents (signified by a different create date).
      *
      *               Note: datasets were previously sorted in
      *                     descending sequence.
      *
      ******************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SPECIAL-NAMES.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT INFILE               ASSIGN TO INFILE
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTNOT               ASSIGN TO OUTNOT
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT PARM01               ASSIGN TO PARM01
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.


       DATA DIVISION.
       FILE SECTION.

       FD  INFILE
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  INFILE-RECORD.
           05  FILLER                  PIC  XX.
           05  INFILE-VOLSER           PIC  X(06).
           05  FILLER                  PIC  X.
           05  INFILE-DSN              PIC  X(44).
           05  FILLER                  PIC  X.
           05  INFILE-TYPE             PIC  XX.
           05  FILLER                  PIC  X.
           05  INFILE-CREATE-CYMD      PIC  X(08).
           05  FILLER                  PIC  X.
           05  INFILE-EXTENT           PIC  XXX.
           05  FILLER                  PIC  X.
           05  INFILE-ATTR-1           PIC  X.
           05  INFILE-ATTR-2X12        PIC  X(11).
           05  FILLER                  PIC  X.
           05  INFILE-SEQ              PIC  X(05).
           05  FILLER                  PIC  X(33).

       FD  OUTNOT
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  OUTNOT-RECORD.
           05  OUTNOT-SE               PIC  XXX.
           05  OUTNOT-QUOTE1           PIC  X.
           05  OUTNOT-FILL1            PIC  X.
           05  OUTNOT-EXT-COUNT.
               10 OUTNOT-DSN           PIC  X(44).
               10 FILLER REDEFINES OUTNOT-DSN.
                   15 FILLER           PIC  X(41).
                   15 OUTNOT-DSN-42X44 PIC  XXX.
               10 OUTNOT-FILL2         PIC  X.
               10 OUTNOT-EXTENT-N      PIC  ZZ9.
               10 OUTNOT-EXTENT REDEFINES OUTNOT-EXTENT-N
                                       PIC  XXX.
           05  OUTNOT-NEW-EXT REDEFINES OUTNOT-EXT-COUNT.
               10 FILLER               PIC  X(40).
               10 OUTNOT-NEW           PIC  X(08).
           05  OUTNOT-FILL3            PIC  X.
           05  OUTNOT-QUOTE2           PIC  X.
           05  OUTNOT-REMAIN           PIC  X(25).

       FD  PARM01
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  PARM01-RECORD.
           05  PARM01-FLAG             PIC  X.
           05  PARM01-USER             PIC  X(09).
           05  PARM01-EXTENT           PIC  XXX.
           05  FILLER                  PIC  X.
           05  PARM01-ATTR             PIC  X.
           05  FILLER                  PIC  X.
           05  PARM01-TYPE             PIC  XX.
           05  FILLER                  PIC  X.
           05  PARM01-DAYS             PIC  X(07).
           05  FILLER                  PIC  X.
           05  PARM01-DSN              PIC  X(44).
           05  FILLER                  PIC  X(09).

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working storage MIS0585B start '.

       01  WS-WORK-FIELDS.
           05  WS-STAT                 PIC  99       VALUE ZERO.
           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.
           05  WS-TOT-EXTENT           PIC  9(05)    VALUE ZERO.
           05  WS-HOLD-MDY8            PIC  X(09)    VALUE SPACE.
           05  WS-HOLD-HM              PIC  X(05)    VALUE SPACE.
           05  WS-HOLD-DAY             PIC  X        VALUE SPACE.
           05  WS-HOLD-USER            PIC  X(10)    VALUE SPACE.
           05  WS-CALL-STV0400B        PIC  X(08)    VALUE 'STV0400B'.
           05  WS-CALL-MIS0540B        PIC  X(08)    VALUE 'MIS0540B'.
           05  WS-EXTENT               PIC  XXX      VALUE '000'.
           05  WS-EXTENT-N REDEFINES WS-EXTENT
                                       PIC  999.
           05  WS-CREATE               PIC  X(08)    VALUE SPACE.

       01  WS-COUNT-FIELDS             COMP-3.
           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-WARN-CNT             PIC S9(07)    VALUE ZERO.

       01  WS-TABLES.
           05  WS-PARM-TABLE.
               10  WS-LIST             OCCURS 40 TIMES.
                   15  WS-USER         PIC  X(10).
                   15  WS-TYPE         PIC  XX.
                   15  WS-EXT          PIC  999.
                   15  WS-ATTR         PIC  X.
                   15  WS-HEADER       PIC  X.
                   15  WS-DSN          PIC  X(44).
                   15  WS-DAYS         PIC  X(07).
                   15  FILLER REDEFINES WS-DAYS.
                       20  WS-DAY      PIC  X
                                       OCCURS 7 TIMES.
                   15  WS-CHECK1       PIC  X.
                   15  WS-CHECK2       PIC  X.
                   15  WS-CHECK3       PIC  X.

       01  WS-SWITCHES.
           05  WS-END-INFILE-SW        PIC  X        VALUE 'N'.
               88  END-OF-INFILE                     VALUE 'Y'.
               88  MORE-INFILE-RCDS                  VALUE 'N'.
           05  WS-NOTIFY-SW            PIC  X        VALUE 'Y'.
           05  WS-FIRST-SW             PIC  X        VALUE 'Y'.
           05  WS-CREATE-SW            PIC  X        VALUE SPACE.
           05  WS-CREATE-MSG-SW        PIC  X        VALUE SPACE.

       01  WS-SUBSCRIPTS               COMP.
           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.
           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.
           05  WS-PARM01-MAX           PIC S9(05)    VALUE ZERO.

       01  WS-STV0400B-FIELDS.
           05  STV0400B-DATA           PIC  X(10)   VALUE SPACE.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-ERROR      PIC  X(06).
               10  STV0400B-NBR        PIC  X(04).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-CYMD       PIC  X(08).
               10  FILLER              PIC  XX.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAYS       PIC  X(05).
               10  FILLER              PIC  X(05).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAY        PIC  X(09).
               10  STV0400B-DAY-NBR    PIC  X.
           05  STV0400B-DATA2          PIC  X(10)   VALUE SPACE.
           05  STV0400B-IN             PIC  X(06)   VALUE SPACE.
           05  STV0400B-OUT            PIC  X(06)   VALUE SPACE.

       01  WS-MIS0540B-FIELDS.
           05  MIS0540B-MASK           PIC  X(44).
           05  MIS0540B-DSN            PIC  X(44).
           05  MIS0540B-DISPLAY        PIC  X.
           05  MIS0540B-EDIT-NAMES     PIC  X.
           05  MIS0540B-MATCH          PIC  XXX.

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  MIS0585B END  '.

      /
       PROCEDURE DIVISION.

       0100-PROGRAM-ENTRY.
           DISPLAY '       '.
           DISPLAY '**** MIS0585B dsn high extent counts'.
           PERFORM 0200-OPEN-FILES.

           PERFORM VARYING WS-SUB1 FROM 1 BY 1
               UNTIL WS-SUB1 > 40
               MOVE SPACE                 TO WS-USER(WS-SUB1)
               MOVE SPACE                 TO WS-TYPE(WS-SUB1)
               MOVE SPACE                 TO WS-ATTR(WS-SUB1)
               MOVE ZERO                  TO WS-EXT(WS-SUB1)
               MOVE SPACE                 TO WS-HEADER(WS-SUB1)
               MOVE SPACE                 TO WS-DSN(WS-SUB1)
               MOVE SPACE                 TO WS-DAYS(WS-SUB1)
               MOVE SPACE                 TO WS-CHECK1(WS-SUB1)
               MOVE SPACE                 TO WS-CHECK2(WS-SUB1)
               MOVE SPACE                 TO WS-CHECK3(WS-SUB1)
           END-PERFORM.
           IF WS-RETURN-CODE = ZERO
               MOVE ZERO                  TO WS-SUB1
               PERFORM 0350-LOAD-PARM01 THRU
                       0350-LOAD-PARM01-EXIT.
           IF WS-RETURN-CODE = ZERO
               PERFORM 0400-PROCESS-INFILE.

           DISPLAY '**** Records in INFILE   ' WS-READ-RCD-CNT.
           DISPLAY '**** Warning records     ' WS-WARN-CNT.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0300-CLOSE-FILES
           ELSE
               DISPLAY '**** MIS0585B cond code ' WS-RETURN-CODE
                       ' sent by program'
               MOVE WS-RETURN-CODE            TO RETURN-CODE.

           DISPLAY '**** MIS0585B EOJ encountered '.
           DISPLAY '       '.
           STOP RUN.

       0200-OPEN-FILES.
           OPEN INPUT  INFILE.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0585B open error on INFILE'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN INPUT  PARM01.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0585B open error on PARM01'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTNOT.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0585B open error on OUTNOT'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.

       0300-CLOSE-FILES.
           CLOSE OUTNOT.
           CLOSE PARM01.
           CLOSE INFILE.

       0350-LOAD-PARM01.
           READ PARM01.
           IF WS-STAT = 10
               MOVE WS-SUB1                   TO WS-PARM01-MAX
               GO TO 0350-LOAD-PARM01-EXIT
           ELSE
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0585B read error on PARM01'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0350                     TO WS-RETURN-CODE
               GO TO 0350-LOAD-PARM01-EXIT.

           IF PARM01-FLAG = '*'
               GO TO 0350-LOAD-PARM01.
           IF PARM01-USER = 'ALL'
             IF PARM01-DAYS NOT = 'SKIP'
                 DISPLAY '**** USER=ALL requires DAYS=SKIP '
                 MOVE +0350                   TO WS-RETURN-CODE.

           IF WS-SUB1 < 40
               ADD 1                          TO WS-SUB1
               MOVE PARM01-USER               TO WS-USER(WS-SUB1)
               MOVE PARM01-DAYS               TO WS-DAYS(WS-SUB1)
               MOVE PARM01-TYPE               TO WS-TYPE(WS-SUB1)
               MOVE PARM01-ATTR               TO WS-ATTR(WS-SUB1)
               MOVE PARM01-DSN                TO WS-DSN(WS-SUB1)
               IF PARM01-EXTENT NUMERIC
                   MOVE PARM01-EXTENT         TO WS-EXT(WS-SUB1)
               ELSE
                   DISPLAY '**** Extent in parm not numeric'
                   MOVE +0350                 TO WS-RETURN-CODE.

           GO TO 0350-LOAD-PARM01.

       0350-LOAD-PARM01-EXIT. EXIT.

       0400-PROCESS-INFILE.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE 'DAY   '                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           MOVE STV0400B-DAY-NBR              TO WS-HOLD-DAY.
           MOVE 'M/D/Y '                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           MOVE STV0400B-DATA                 TO WS-HOLD-MDY8.
           MOVE 'H:M:SM'                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           MOVE STV0400B-DATA                 TO WS-HOLD-HM.
           IF WS-RETURN-CODE = ZERO
               PERFORM 0600-READ-INFILE
                   UNTIL END-OF-INFILE.

       0600-READ-INFILE.
           READ INFILE.
           IF WS-STAT = ZERO
               ADD 1                          TO WS-READ-RCD-CNT
               IF INFILE-SEQ NUMERIC
                   PERFORM 0700-SELECT
               ELSE
                   CONTINUE
           ELSE
           IF WS-STAT = 10
               MOVE 'Y'                       TO WS-END-INFILE-SW
           ELSE
               DISPLAY '**** MIS0585B read error on INFILE '
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0600                     TO WS-RETURN-CODE.

       0700-SELECT.
           IF INFILE-SEQ = '00001'
               MOVE INFILE-EXTENT             TO WS-EXTENT
               ADD WS-EXTENT-N                TO WS-TOT-EXTENT
               PERFORM 0800-RESET-NOTIFY
                   VARYING WS-SUB2 FROM 1 BY 1
                   UNTIL WS-SUB2 > WS-PARM01-MAX
               PERFORM 0750-TEST-CREATE
               PERFORM 0900-USER-LOOP
                   VARYING WS-SUB1 FROM 1 BY 1
                   UNTIL WS-SUB1 > WS-PARM01-MAX
               MOVE ZERO                      TO WS-TOT-EXTENT
               MOVE 'Y'                       TO WS-FIRST-SW
               MOVE 'N'                       TO WS-CREATE-SW
           ELSE
               MOVE INFILE-EXTENT             TO WS-EXTENT
               ADD WS-EXTENT-N                TO WS-TOT-EXTENT
               PERFORM 0750-TEST-CREATE.

       0750-TEST-CREATE.
           IF WS-FIRST-SW = 'Y'
               MOVE INFILE-CREATE-CYMD        TO WS-CREATE
               MOVE 'N'                       TO WS-FIRST-SW
           ELSE
           IF INFILE-SEQ = '00001'
               AND INFILE-CREATE-CYMD > WS-CREATE
               MOVE 'L'                       TO WS-CREATE-SW
           ELSE
           IF INFILE-CREATE-CYMD NOT = WS-CREATE
               MOVE 'Y'                       TO WS-CREATE-SW.

       0800-RESET-NOTIFY.
           MOVE SPACE                         TO WS-CHECK1(WS-SUB2).
           MOVE SPACE                         TO WS-CHECK2(WS-SUB2).
           MOVE SPACE                         TO WS-CHECK3(WS-SUB2).

       0900-USER-LOOP.
           MOVE 'Y'                           TO WS-NOTIFY-SW.
           MOVE 'N'                           TO WS-CREATE-MSG-SW.
           PERFORM 1100-TEST-PARMS THRU
                   1100-TEST-PARMS-EXIT.
           IF WS-NOTIFY-SW = 'Y'
               OR WS-CREATE-MSG-SW = 'Y' OR 'L'
               PERFORM 1500-NOTIFY.

      *---------------------------------------
      *    set the DFSMS/DSORG/dataset name attribute switches
      *    which are used in 1300-TEST-ALREADY-MATCHED.  these
      *    attributes determine whether a given dataset matches
      *    the parm criteria.  number of extents and days tests
      *    are considered seperate.
      *+--------------------------------------
       1100-TEST-PARMS.
           IF WS-TYPE(WS-SUB1) = SPACE
               MOVE 'Y'                       TO WS-CHECK1(WS-SUB1)
           ELSE
           IF INFILE-TYPE = WS-TYPE(WS-SUB1)
               MOVE 'Y'                       TO WS-CHECK1(WS-SUB1)
           ELSE
               MOVE 'N'                       TO WS-NOTIFY-SW
               GO TO 1100-TEST-PARMS-EXIT.

           IF WS-ATTR(WS-SUB1) = SPACE
               MOVE 'Y'                       TO WS-CHECK2(WS-SUB1)
           ELSE
           IF WS-ATTR(WS-SUB1) = 'S'
               AND INFILE-ATTR-1 = 'S'
               MOVE 'Y'                       TO WS-CHECK2(WS-SUB1)
           ELSE
           IF WS-ATTR(WS-SUB1) = 'N'
               AND INFILE-ATTR-1 = SPACE
               MOVE 'Y'                       TO WS-CHECK2(WS-SUB1)
           ELSE
               MOVE 'N'                       TO WS-NOTIFY-SW
               GO TO 1100-TEST-PARMS-EXIT.

           IF WS-DSN(WS-SUB1) = SPACE OR 'NEW'
               MOVE 'Y'                       TO WS-CHECK3(WS-SUB1)
           ELSE
           PERFORM 1400-TEST-MASK
           IF WS-NOTIFY-SW = 'Y'
               MOVE 'Y'                       TO WS-CHECK3(WS-SUB1)
           ELSE
               GO TO 1100-TEST-PARMS-EXIT.

           MOVE 'N'                           TO WS-NOTIFY-SW.
           IF WS-DAYS(WS-SUB1) = 'SKIP'
               GO TO 1100-TEST-PARMS-EXIT
           ELSE
               PERFORM 1200-TEST-DAYS
                   VARYING WS-SUB2 FROM 1 BY 1
                   UNTIL WS-SUB2 > 7.
           IF WS-NOTIFY-SW = 'N'
               GO TO 1100-TEST-PARMS-EXIT.

           IF WS-DSN(WS-SUB1) = 'NEW'
               MOVE 'N'                       TO WS-NOTIFY-SW
               IF WS-CREATE-SW = 'Y' OR 'L'
                   MOVE WS-CREATE-SW          TO WS-CREATE-MSG-SW
                   GO TO 1100-TEST-PARMS-EXIT
               ELSE
                   GO TO 1100-TEST-PARMS-EXIT.

           IF WS-TOT-EXTENT < WS-EXT(WS-SUB1)
               MOVE 'N'                       TO WS-NOTIFY-SW
               GO TO 1100-TEST-PARMS-EXIT.

           MOVE WS-USER(WS-SUB1)              TO WS-HOLD-USER.
           PERFORM 1300-TEST-ALREADY-MATCHED
               VARYING WS-SUB2 FROM 1 BY 1
               UNTIL WS-SUB2 > (WS-SUB1 - 1)
               OR    WS-NOTIFY-SW = 'N'.

       1100-TEST-PARMS-EXIT. EXIT.

       1200-TEST-DAYS.
           IF WS-DAY(WS-SUB1 WS-SUB2) = WS-HOLD-DAY
               MOVE 'Y'                       TO WS-NOTIFY-SW.

      *---------------------------------------
      *    for this dataset only, looping through the parm entries,
      *    if a previous and more specific match was made, avoid
      *    sending notification for this more generic match.
      *+--------------------------------------
       1300-TEST-ALREADY-MATCHED.
           IF WS-USER(WS-SUB2) = WS-HOLD-USER OR 'ALL'
             IF WS-DSN(WS-SUB2) NOT = 'NEW'
               IF WS-CHECK1(WS-SUB2) = 'Y'
                   AND WS-CHECK2(WS-SUB2) = 'Y'
                   AND WS-CHECK3(WS-SUB2) = 'Y'
                   MOVE 'N'                   TO WS-NOTIFY-SW.

       1400-TEST-MASK.
           MOVE WS-DSN(WS-SUB1)               TO MIS0540B-MASK.
           MOVE INFILE-DSN                    TO MIS0540B-DSN.
           MOVE SPACE                         TO MIS0540B-DISPLAY.
           MOVE SPACE                         TO MIS0540B-MATCH
                                                 MIS0540B-EDIT-NAMES.
           CALL WS-CALL-MIS0540B USING MIS0540B-MASK MIS0540B-DSN
                                 MIS0540B-DISPLAY MIS0540B-EDIT-NAMES
                                 MIS0540B-MATCH.
           IF MIS0540B-MATCH NUMERIC
               DISPLAY '**** MIS0545B call error to MIS0540B'
               DISPLAY '**** Code = ' MIS0540B-MATCH
               MOVE +1400                     TO WS-RETURN-CODE
           ELSE
           IF MIS0540B-MATCH NOT = 'YES'
               MOVE 'N'                       TO WS-NOTIFY-SW.

       1500-NOTIFY.
           IF WS-HEADER(WS-SUB1) NOT = 'Y'
               PERFORM 1600-BUILD-HEADER.
           IF WS-NOTIFY-SW = 'Y'
               PERFORM 1700-SEND-EXTENTS.
           IF WS-CREATE-MSG-SW = 'Y'
               PERFORM 1800-SEND-NEW-EXT.
           IF WS-CREATE-MSG-SW = 'L'
               PERFORM 1800-SEND-LOST-EXT.

       1600-BUILD-HEADER.
           MOVE WS-USER(WS-SUB1)              TO WS-HOLD-USER.
           PERFORM 1900-RESET-HEADER
               VARYING WS-SUB2 FROM 1 BY 1
               UNTIL WS-SUB2 > WS-PARM01-MAX.
           MOVE 'SE '                         TO OUTNOT-SE.
           MOVE QUOTE                         TO OUTNOT-QUOTE1.
           MOVE SPACE                         TO OUTNOT-FILL1.
           MOVE SPACE                         TO OUTNOT-DSN.
           STRING '----- Files with extents: ' DELIMITED BY SIZE
                  WS-HOLD-MDY8      WS-HOLD-HM  DELIMITED BY SIZE
                  ' ---'                        DELIMITED BY SIZE
                  INTO OUTNOT-DSN.
           MOVE SPACE                         TO OUTNOT-FILL2.
           MOVE '---'                         TO OUTNOT-EXTENT.
           MOVE SPACE                         TO OUTNOT-FILL3.
           MOVE QUOTE                         TO OUTNOT-QUOTE2.
           MOVE SPACE                         TO OUTNOT-REMAIN.
           STRING ' U('                       DELIMITED BY SIZE
                  WS-USER(WS-SUB1)            DELIMITED BY ' '
                  ') LOGON'                   DELIMITED BY SIZE
                  INTO OUTNOT-REMAIN.
           PERFORM 2000-WRITE-OUTNOT.

       1700-SEND-EXTENTS.
           ADD 1                              TO WS-WARN-CNT.
           MOVE 'SE '                         TO OUTNOT-SE.
           MOVE QUOTE                         TO OUTNOT-QUOTE1.
           MOVE SPACE                         TO OUTNOT-FILL1.
           MOVE INFILE-DSN                    TO OUTNOT-DSN.
           IF OUTNOT-DSN-42X44 = SPACE
               MOVE INFILE-TYPE               TO OUTNOT-DSN-42X44(2: ).
           MOVE SPACE                         TO OUTNOT-FILL2.
           MOVE WS-TOT-EXTENT                 TO OUTNOT-EXTENT-N.
           MOVE SPACE                         TO OUTNOT-FILL3.
           MOVE QUOTE                         TO OUTNOT-QUOTE2.
           MOVE SPACE                         TO OUTNOT-REMAIN.
           STRING ' U('                       DELIMITED BY SIZE
                  WS-USER(WS-SUB1)            DELIMITED BY ' '
                  ') LOGON'                   DELIMITED BY SIZE
                  INTO OUTNOT-REMAIN.
           PERFORM 2000-WRITE-OUTNOT.

       1800-SEND-NEW-EXT.
           ADD 1                              TO WS-WARN-CNT.
           MOVE 'SE '                         TO OUTNOT-SE.
           MOVE QUOTE                         TO OUTNOT-QUOTE1.
           MOVE SPACE                         TO OUTNOT-FILL1.
           MOVE INFILE-DSN                    TO OUTNOT-DSN.
           MOVE ' new    '                    TO OUTNOT-NEW.
           MOVE SPACE                         TO OUTNOT-FILL3.
           MOVE QUOTE                         TO OUTNOT-QUOTE2.
           MOVE SPACE                         TO OUTNOT-REMAIN.
           STRING ' U('                       DELIMITED BY SIZE
                  WS-USER(WS-SUB1)            DELIMITED BY ' '
                  ') LOGON'                   DELIMITED BY SIZE
                  INTO OUTNOT-REMAIN.
           PERFORM 2000-WRITE-OUTNOT.

       1800-SEND-LOST-EXT.
           ADD 1                              TO WS-WARN-CNT.
           MOVE 'SE '                         TO OUTNOT-SE.
           MOVE QUOTE                         TO OUTNOT-QUOTE1.
           MOVE SPACE                         TO OUTNOT-FILL1.
           MOVE INFILE-DSN                    TO OUTNOT-DSN.
           MOVE ' lost   '                    TO OUTNOT-NEW.
           MOVE SPACE                         TO OUTNOT-FILL3.
           MOVE QUOTE                         TO OUTNOT-QUOTE2.
           MOVE SPACE                         TO OUTNOT-REMAIN.
           STRING ' U('                       DELIMITED BY SIZE
                  WS-USER(WS-SUB1)            DELIMITED BY ' '
                  ') LOGON'                   DELIMITED BY SIZE
                  INTO OUTNOT-REMAIN.
           PERFORM 2000-WRITE-OUTNOT.

       1900-RESET-HEADER.
           IF WS-USER(WS-SUB2) = WS-HOLD-USER
               MOVE 'Y'                       TO WS-HEADER(WS-SUB2).

       2000-WRITE-OUTNOT.
           WRITE OUTNOT-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0585B write error on OUTNOT '
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +2000                     TO WS-RETURN-CODE.

      ************************************ END MIS0585B
