
  FTP UNKNOWN QUANTITY OF SOURCE FILES TO THE MAINFRAME

  When I worked for a local hospital we had issues figuring out how
  to FTP files to the mainframe when the quantity of source files
  was unknown.  I looked for examples in various books and then online
  but could not find a solution.

  I developed very elaborate processes by which new mainframe filenames
  were built based on whatever contents were found in the source
  filename - usually a date or a version number.  IEBGENER steps were
  also built and then submitted after the FTP job - these consolidated
  the individual mainframe files into one file for further processing.
  This could sometimes be a two-job process.

  I always thought GDG's were the answer to this issue but never
  saw an example of how to use them.

  Then I changed jobs and learned how this is done.


  1)  Define GDG with 225 potential versions.
      In this case, "PFX.INBOUND.GDGFILE" is the GDG.

  2)  Next, get a list of what files are waiting to pull
      to the mainframe.  FTP appends "FTP.LSOUTPUT" to the file name.
      See step S0030 in the example jcl below.

      These FTP input parameters create file "PFX.INBOUND.FTP.LSOUTPUT"
      containing the FTP list of files waiting to be FTP'd...

        sign-on
        password
        change directory as needed
        may need to specify "ascii"
        lcd 'PFX.INBOUND'
        ls *.dat  (DISK
        quit


        lcd 'PFX.INBOUND' is used to specify the prefix of the
        file name that FTP creates to hold the generated list of
        source filenames.

        ls *.dat  (DISK  lists all source files with the .dat
        extension.  to list all files, change to "ls *"

      Resulting list of source files:

        20010232693792.dat
        20010232693793.dat
        20010232693794.dat
        20010232693795.dat

  3)  Run this list of file names through a program to generate
      FTP "get" input parameters for each file.
      See step S0060 in the example jcl below.
      I recommend limiting the number of "GET" statements your program
      can generate to 225 - the same number as the GDG version
      definition.  If there are more than 225 source files then your
      program should skip/ignore them - they will be picked-up the
      next time the job runs. Yes - GDG's can be defined up to 255
      versions so you could go that high if necessary.

      The trick to everything is the +001 below ... I didn't know
      this was how it was done, assuming it would need to be +001 and
      then +002 and +003 etc.

      Resulting "GET" statements in file "PFX.INBOUND.FILEGET"
      generated by your program:

      get  20010232693792.dat       'PFX.INBOUND.GDGFILE(+001)'
      get  20010232693793.dat       'PFX.INBOUND.GDGFILE(+001)'
      get  20010232693794.dat       'PFX.INBOUND.GDGFILE(+001)'
      get  20010232693795.dat       'PFX.INBOUND.GDGFILE(+001)'

      The same program could also generate the delete statements,
      either in the same flow or in a separate step, but be certain
      these deletes are generated from the original list of source
      filenames held in "PFX.INBOUND.FTP.LSOUTPUT" above.  DO NOT
      "regenerate" the source filename list by running 2) above.
      Additional files could have been placed into the source directory
      and you don't want to delete these new files without having
      pulled and processed them.

      Resulting "DELETE" statements in file "PFX.INBOUND.FILEDEL"
      generated by your program:

      delete 20010232693792.dat
      delete 20010232693793.dat
      delete 20010232693794.dat
      delete 20010232693795.dat

  4)  Pull the source files up to the mainframe as in step S0070 below.

  5)  Pull the GDG versions into your process by referencing the
      GDG without any versions as in step S0080 below.

  6)  Delete the source files as in step S0110 below.


//EXAMPLE  PROC
//*-------------------------------------------------
//*
//*  pull files from source server:
//*      perform DIR for .dat files in xxx directory
//*      build list of mainframe files from source .dat files
//*      FTP data to mainframe
//*      IEBGENER all GDG versions into one file
//*  purge source .dat files from server
//*
//*-------------------------------------------------
//*  delete work files
//*-------------------------------------------------
//S0010    EXEC PGM=IEFBR14
//SYSPRINT DD  SYSOUT=*
//DD01     DD  DSN=PFX.INBOUND.FTP.LSOUTPUT,                       *del
//             DISP=(MOD,DELETE,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1))
//DD02     DD  DSN=PFX.INBOUND.FILEGET,                            *del
//             DISP=(MOD,DELETE,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1))
//DD03     DD  DSN=PFX.INBOUND.FILEDEL,                            *del
//             DISP=(MOD,DELETE,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1))
//DD04     DD  DSN=PFX.INBOUND.COMBINE,                            *del
//             DISP=(MOD,DELETE,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1))
//*
//*-------------------------------------------------
//*  define work files to avoid jcl errors further down
//*-------------------------------------------------
//S0020    EXEC PGM=IEFBR14
//SYSPRINT DD  SYSOUT=*
//DD01     DD  DSN=PFX.INBOUND.FTP.LSOUTPUT,                       *new
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(10,40)),
//             DSORG=PS,RECFM=VB,LRECL=1028,BLKSIZE=6144
//DD02     DD  DSN=PFX.INBOUND.FILEGET,                            *new
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
//DD03     DD  DSN=PFX.INBOUND.FILEDEL,                            *new
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
//DD04     DD  DSN=PFX.INBOUND.COMBINE,                            *new
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(10,40)),
//             DSORG=PS,RECFM=FB,LRECL=160,BLKSIZE=27840
//*-------------------------------------------------
//*  read directory for file names to transfer
//*  output goes to PFX.INBOUND.FTP.LSOUTPUT
//*-------------------------------------------------
//S0030    EXEC PGM=FTP,PARM='(EXIT)',REGION=6M
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
input parameters from step 2) above
//*
//*-------------------------------------------------
//*  ABEND if non-standard FTP issues
//*-------------------------------------------------
//IF01     IF (S0030.RC NE 00) THEN
//ABEND1   EXEC PGM=ABEND
//END01    ENDIF
//*-------------------------------------------------
//*  check for empty file
//*-------------------------------------------------
//S0040    EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//INDD01   DD  DSN=PFX.INBOUND.FTP.LSOUTPUT,                       *mod
//             DISP=MOD,
//             UNIT=SYSDA,SPACE=(TRK,(1,1)),
//             DSORG=PS,RECFM=VB,LRECL=1028,BLKSIZE=6144
//SYSIN    DD  *
      PRINT INFILE (INDD01) COUNT(1)
/*
//*
//*-------------------------------------------------
//*  IEFBR14 deletes of a base GDG with no versions causes a JCL error
//*  so we define one version here
//*-------------------------------------------------
//S0050    EXEC PGM=IEFBR14,REGION=5120K,
//             COND=(0,NE,S0040)
//SYSPRINT DD  SYSOUT=*
//DD01     DD  DSN=PFX.INBOUND.GDGFILE(+1),                        *new
//             DISP=(NEW,CATLG,KEEP),
//             UNIT=SYSDA,SPACE=(TRK,(1,1)),
//             DSORG=PS,RECFM=FB,LRECL=160,BLKSIZE=27840
//*
//*-------------------------------------------------
//*  build list of all .dat files to transfer into one or more
//*  mainframe file names PFX.INBOUND.GDGFILE(+1)
//*  PFX.INBOUND.GDGFILE is defined for 225 versions
//*-------------------------------------------------
//S0060    EXEC PGM= program from step 3) above
//             COND=(0,NE,S0040)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//INDD     DD  DISP=SHR,DSN=PFX.INBOUND.FTP.LSOUTPUT               *shr
//GETFL    DD  DSN=PFX.INBOUND.FILEGET,                            *mod
//             DISP=(MOD,KEEP,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
//DELFL    DD  DSN=PFX.INBOUND.FILEDEL,                            *mod
//             DISP=(MOD,KEEP,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
//*
//*-------------------------------------------------
//*  pull files from server
//*  output goes to dsn=PFX.INBOUND.GDGFILE +1 through +225
//*
//*  if FTP issues, restart from top
//*-------------------------------------------------
//S0070    EXEC PGM=FTP,PARM='(EXIT)',REGION=6M,
//             COND=(0,NE,S0040)
//OUTPUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN=sysin file #1                          *shr
//         DD  DISP=SHR,DSN=PFX.INBOUND.FILEGET                    *shr
//         DD  DISP=SHR,DSN=sysin file #3                          *shr
//*  sysin file #1
sign-on
password
possibly specify "ascii" option
change directories as needed
LOCSITE BLK=27840 FILE=SEQ LR=160 REC=FB WRAP DCBDSN='SYS1.DSCB'
LOCSITE UNIT=SYSDA TRACKS PRIMARY=200 SECONDARY=50
//*  sysin file #3
quit
//*
//*-------------------------------------------------
//*  ABEND if non-standard FTP issues
//*-------------------------------------------------
//IF02     IF (S0070.RC NE 00) THEN
//*
//ABDEL    EXEC PGM=IEFBR14,REGION=5120K
//SYSPRINT DD  SYSOUT=*
//DD01     DD  DSN=PFX.INBOUND.GDGFILE,                            *del
//             DISP=(MOD,DELETE,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1))
//*
//ABEND2   EXEC PGM=ABEND
//*
//END02    ENDIF
//*
//*-------------------------------------------------
//*  if needed, combine all GDG files into one file
//*-------------------------------------------------
//S0080    EXEC PGM=IEBGENER,COND=(0,NE,S0040)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DSN=PFX.INBOUND.GDGFILE,                  *all gdg files
//             DISP=SHR
//SYSUT2   DD  DSN=PFX.INBOUND.COMBINE,                            *mod
//             DISP=(MOD,KEEP,DELETE),
//             UNIT=SYSDA,
//             SPACE=(TRK,(100,10),RLSE),
//             RECFM=FB,LRECL=160,BLKSIZE=27840
//*
//*-------------------------------------------------
//*  check for empty file
//*-------------------------------------------------
//S0090    EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//INDD01   DD  DSN=PFX.INBOUND.COMBINE,                            *mod
//             DISP=MOD,
//             UNIT=SYSDA,SPACE=(TRK,(1,1)),
//             RECFM=FB,LRECL=160,BLKSIZE=27840
//SYSIN    DD  *
      PRINT INFILE (INDD01) COUNT(1)
//*
//*-------------------------------------------------
//*
//IF03     IF (S0090.RC EQ 00) THEN
//*
//*-------------------------------------------------
//*  make backup of combined file
//*-------------------------------------------------
//S0100    EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=PFX.INBOUND.COMBINE
//SYSUT2   DD  DSN=backup GDG(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(50,20),RLSE),
//             DSORG=PS,RECFM=FB,LRECL=160,BLKSIZE=27840
//*
//END03    ENDIF
//*
//*-------------------------------------------------
//*  delete server files
//*-------------------------------------------------
//S0110    EXEC PGM=FTP,PARM='(EXIT)',
//             REGION=6M,COND=(0,NE,S0040)
//OUTPUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN= sysin file #1
//         DD  DISP=SHR,DSN=PFX.INBOUND.FILEDEL
//         DD  DISP=SHR,DSN= sysin file #3
//*  sysin file #1
sign-on
password
possibly specify "ascii" option
change directories as needed
//*  sysin file #3
quit
//*
//*-------------------------------------------------
//*  delete all versions of GDG base
//*-------------------------------------------------
//S0120    EXEC PGM=IEFBR14,REGION=5120K,
//             COND=(0,NE,S0090)
//SYSPRINT DD  SYSOUT=*
//DD01     DD  DSN=PFX.INBOUND.GDGFILE,                            *del
//             DISP=(MOD,DELETE,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,(1,1))
//*
//*-------------------------------------------------
