
       TITLE '  MIS0550B: turn an HL7 stream into sep rcds'.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MIS0550B.
      ******************************************************************
      *@@@ C3 turn an HL7 wrapping stream into separate HL7 rcds
      ******************************************************************
      *
      *  I am interested in knowing if/where these programs
      *  are in use.     Email:  jiannon@me.com
      *
      ****************************************************************
      * Date written: 04/18/2002
      * Author      : Jim Iannone
      *               Given a file with connected wrapping HL7
      *               segments, write each HL7 segment out in
      *               a separate record.
      *
      *               Allow the user to include or exclude specific
      *               HL7 segments via PARM01.
      *
      *               Allow the user to avoid writing out the
      *               trailing carriage return.
      *
      *               Allow the user to truncate excessively long
      *               records or issue cond code 0008
      ******************************************************************
      * DATE CHANGED: 01/21/2011
      * PROGRAMMER  : JIM IANNONE
      *               Allow excluding specified strings from all rcds
      ****************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           C01 IS PAGE-TOP.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT HL7FLOW              ASSIGN TO HL7FLOW
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT HL7SEGS              ASSIGN TO HL7SEGS
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT PARM01               ASSIGN TO PARM01
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

       DATA DIVISION.
       FILE SECTION.

       FD  HL7FLOW
           RECORDING MODE F.
       01  HL7FLOW-RECORD.
           05  HL7FLOW-RCD             PIC  X(16000).

       FD  HL7SEGS
           RECORDING MODE F.
       01  HL7SEGS-RECORD.
           05  HL7SEGS-RCD             PIC  X(10000).

       FD  PARM01
           RECORDING MODE F.
       01  PARM01-RECORD.
           05  PARM01-RCD              PIC  X(80).
           05  PARM01-RCD1 REDEFINES PARM01-RCD.
               10  PARM01-DOCU         PIC  X.
               10  FILLER              PIC  X.
               10  PARM01-INCL-EXCL    PIC  X.
               10  FILLER              PIC  X.
               10  PARM01-SEG          PIC  X(05).
               10  FILLER              PIC  X(63).
               10  FILLER              PIC  X(08).
           05  PARM01-RCD2 REDEFINES PARM01-RCD.
               10  FILLER              PIC  XX.
               10  PARM01-STRING       PIC  X(20).
               10  FILLER              PIC  X.
               10  PARM01-LEN          PIC  XX.
               10  FILLER              PIC  X(47).
               10  FILLER              PIC  X(08).

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working storage MIS0550B start '.

       01  WS-WORK-FIELDS.
           05  WS-SRC                  PIC  9(05)    VALUE 16000.
           05  WS-DST                  PIC  9(05)    VALUE 10000.
           05  WS-HIGH                 PIC  9(07)    VALUE ZERO.
      *
           05  WS-STAT                 PIC  99       VALUE ZERO.
           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.
           05  WS-PARM01-MAX           PIC  9(05)    VALUE ZERO.
           05  WS-PARM02-MAX           PIC  9(05)    VALUE ZERO.
           05  WS-BEYOND-MAX           PIC  9(05)    VALUE ZERO.
           05  WS-LEN-N                PIC  99       VALUE ZERO.
           05  WS-CALL-STV0400B        PIC  X(08)    VALUE 'STV0400B'.
           05  WS-LS-DATA              PIC  X(10)    VALUE SPACE.
           05  FILLER REDEFINES WS-LS-DATA.
               10  WS-CR-SKIP          PIC  X.
               10  WS-LEN-ERR          PIC  X.
               10  WS-DELIM            PIC  X.
               10  FILLER              PIC  X(07).
           05  WS-CR                   PIC  X        VALUE X'0D'.
           05  WS-BAR                  PIC  X        VALUE X'4F'.
           05  WS-MSG.
               10  FILLER              PIC  X(30)    VALUE
                   ' <remaining data truncated... '.
               10  WS-MSG2             PIC  9(05)    VALUE ZERO.
               10  FILLER              PIC  X(15)    VALUE
                   ' max rec len>  '.
           05  WS-TRUNC                PIC  X(13)    VALUE
                                       X'4F4F4F4F4F4F4F4F4F4F4F4F0D'.
      *        ws-trunc =              ||||||||||||.
           05  WS-INCL                 PIC  X        VALUE SPACE.
           05  WS-EXCL                 PIC  X        VALUE SPACE.
           05  WS-HOLD-TRUNC           PIC  X(100)   VALUE SPACE.

       01  WS-HOLD-FIELDS.
           05  WS-HOLD-OUT             PIC  X(10000) VALUE SPACE.
           05  FILLER REDEFINES WS-HOLD-OUT.
               10  WS-HOLD-SEG         PIC  XXX.
               10  FILLER              PIC  X(9934).
               10  WS-HOLD-MSG         PIC  X(50).
               10  WS-HOLD-END         PIC  X(13).

       01  WS-COUNT-FIELDS             COMP-3.
           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-WRITE-RCD-CNT        PIC S9(07)    VALUE ZERO.
           05  WS-SHOW-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-PROGRESS             PIC S9(07)    VALUE 9999.

       01  WS-SUBSCRIPTS               COMP.
           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.
           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.
           05  WS-SUB3                 PIC S9(05)    VALUE ZERO.
           05  WS-TRUNC-POS            PIC S9(05)    VALUE ZERO.

       01  WS-SWITCHES.
           05  WS-END-HL7FLOW-SW       PIC  X        VALUE 'N'.
               88  END-OF-HL7FLOW                    VALUE 'Y'.
               88  MORE-HL7FLOW-RCDS                 VALUE 'N'.
           05  WS-INCLUDE-SW           PIC  X        VALUE 'Y'.
           05  WS-SKIP-SW              PIC  X        VALUE 'N'.
           05  WS-TRUNC-SW             PIC  X        VALUE 'N'.
           05  WS-FIRST-BAR-SW         PIC  X        VALUE 'N'.
           05  WS-PARM-SW              PIC  X        VALUE SPACE.
           05  WS-ZAP-SW               PIC  X        VALUE SPACE.

       01  WS-TABLES.
           05  WS-SEG-TABLE            PIC  X(560)   VALUE SPACE.
           05  WS-PARM01 REDEFINES WS-SEG-TABLE
                                       OCCURS 20 TIMES.
                   15  WS-I            PIC  X.
                   15  WS-SEG          PIC  X(05).
                   15  WS-STRING       PIC  X(20).
                   15  WS-LEN          PIC  XX.

       01  WS-STV0400B-FIELDS.
           05  STV0400B-DATA           PIC  X(10)    VALUE SPACE.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-1X6        PIC  X(06).
               10  STV0400B-NBR        PIC  X(04).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-1X8        PIC  X(08).
               10  FILLER              PIC  XX.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAYS       PIC  X(05).
               10  FILLER              PIC  X(05).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAY        PIC  X(09).
               10  STV0400B-DAY-NBR    PIC  X.
           05  STV0400B-DATA2          PIC  X(10)    VALUE SPACE.
           05  STV0400B-IN             PIC  X(06)    VALUE SPACE.
           05  STV0400B-OUT            PIC  X(06)    VALUE SPACE.

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  MIS0550B END  '.

       LINKAGE SECTION.

       01  LS-FIELD.
           05  LS-LENGTH               PIC S9(04)    COMP.
           05  LS-DATA                 PIC  X(10).
           05  FILLER REDEFINES LS-DATA.
               10  LS-CR-SKIP          PIC  X.
               10  LS-LEN-ERR          PIC  X.
               10  LS-DELIM            PIC  X.
               10  LS-EXTRA            PIC  X(07).

      /
       PROCEDURE DIVISION USING LS-FIELD.

       0100-PROGRAM-ENTRY.
           PERFORM 0200-OPEN-FILES.
           DISPLAY '    '.
           DISPLAY '**** MIS0550B split stream into HL7 records'.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0400-PROCESS-HL7FLOW.

           DISPLAY '    '.
           IF WS-CR-SKIP = 'Y'
               DISPLAY '**** Carriage returns excluded'.
           DISPLAY '**** Records in HL7FLOW  ' WS-READ-RCD-CNT.
           DISPLAY '**** HL7 segments out    ' WS-WRITE-RCD-CNT.
           DISPLAY '**** Highest seg length  ' WS-HIGH.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0300-CLOSE-FILES
           ELSE
               DISPLAY '**** MIS0550B cond code ' WS-RETURN-CODE
                       ' sent by program'
               MOVE WS-RETURN-CODE            TO RETURN-CODE.
           DISPLAY '**** MIS0550B EOJ encountered '.
           DISPLAY '    '.
           STOP RUN.

       0200-OPEN-FILES.
           OPEN INPUT  HL7FLOW.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0550B open error on HL7FLOW'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN INPUT  PARM01.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0550B open error on PARM01'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0201                     TO WS-RETURN-CODE.
           OPEN OUTPUT HL7SEGS.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0550B open error on HL7SEGS'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0202                     TO WS-RETURN-CODE.

       0300-CLOSE-FILES.
           CLOSE HL7SEGS.
           CLOSE PARM01.
           CLOSE HL7FLOW.

       0400-PROCESS-HL7FLOW.
           IF LS-LENGTH = ZERO
               DISPLAY '**** Parm length is zero '
               MOVE +0400                     TO WS-RETURN-CODE
           ELSE
           IF LS-LENGTH > LENGTH OF WS-LS-DATA
               DISPLAY '**** Parm length is excessive '
               MOVE +0400                     TO WS-RETURN-CODE
           ELSE
               MOVE LS-DATA(1: LS-LENGTH)     TO WS-LS-DATA.

           IF WS-DELIM NOT = SPACE
               DISPLAY '**** CR overridden by delimiter ' WS-DELIM
               MOVE WS-DELIM                  TO WS-CR.

           IF WS-RETURN-CODE = ZERO
               MOVE ZERO                      TO WS-SUB1
               MOVE ZERO                      TO WS-SUB2
               PERFORM 0500-LOAD-PARM01 THRU
                       0500-LOAD-PARM01-EXIT
               IF WS-SUB1 = ZERO
                   DISPLAY '**** No segments have been intentionally '
                           'excluded'.
           IF WS-RETURN-CODE = ZERO
               MOVE ZERO                      TO WS-SUB2
               PERFORM 0600-READ-HL7FLOW THRU
                       0600-READ-HL7FLOW-EXIT
                       UNTIL END-OF-HL7FLOW.

      *---------------------------------------
      *    load PARM01
      *---------------------------------------
       0500-LOAD-PARM01.
           READ PARM01.
           IF WS-STAT = 10
               MOVE WS-SUB1                   TO WS-PARM01-MAX
               MOVE WS-SUB1                   TO WS-BEYOND-MAX
               ADD 10                         TO WS-BEYOND-MAX
               MOVE WS-SUB2                   TO WS-PARM02-MAX
               GO TO 0500-LOAD-PARM01-EXIT
           ELSE
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0550B read error on PARM01'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0500                     TO WS-RETURN-CODE
               GO TO 0500-LOAD-PARM01-EXIT.

           IF PARM01-DOCU = '*'
               GO TO 0500-LOAD-PARM01.
           MOVE SPACE                         TO WS-PARM-SW.
           IF PARM01-LEN NUMERIC
               MOVE PARM01-LEN                TO WS-LEN-N
               IF WS-LEN-N > 20
                   DISPLAY '**** PARM01 string length > 20'
                   MOVE +0500                 TO WS-RETURN-CODE
               ELSE
               IF WS-LEN-N = ZERO
                   DISPLAY '**** PARM01 string length is zero'
                   MOVE +0500                 TO WS-RETURN-CODE
               ELSE
                   MOVE 'S'                   TO WS-PARM-SW
           ELSE
           IF PARM01-INCL-EXCL = 'I'
               MOVE 'N'                       TO WS-INCLUDE-SW
               MOVE 'I'                       TO WS-INCL
               PERFORM 0600-TEST-TYPES
               DISPLAY '**** Include segment     ' PARM01-SEG
               MOVE 'X'                       TO WS-PARM-SW
           ELSE
           IF PARM01-INCL-EXCL = 'E'
               MOVE 'Y'                       TO WS-INCLUDE-SW
               MOVE 'E'                       TO WS-EXCL
               PERFORM 0600-TEST-TYPES
               DISPLAY '**** Exclude segment     ' PARM01-SEG
               MOVE 'X'                       TO WS-PARM-SW
           ELSE
               DISPLAY '**** PARM01 include/exclude not = I or E'
               MOVE +0500                     TO WS-RETURN-CODE.
           IF WS-PARM-SW = 'X'
             IF PARM01-SEG = SPACE
                 DISPLAY '**** PARM01 segment not valued'
                 MOVE +0500                   TO WS-RETURN-CODE.

           IF WS-PARM-SW = 'X'
             IF WS-SUB1 < 20
                 ADD 1                        TO WS-SUB1
                 MOVE PARM01-INCL-EXCL        TO WS-I(WS-SUB1)
                 MOVE PARM01-SEG              TO WS-SEG(WS-SUB1).
           IF WS-PARM-SW = 'S'
             IF WS-SUB2 < 20
                 ADD 1                        TO WS-SUB2
                 MOVE PARM01-STRING           TO WS-STRING(WS-SUB2)
                 MOVE PARM01-LEN              TO WS-LEN(WS-SUB2).
           GO TO 0500-LOAD-PARM01.

       0500-LOAD-PARM01-EXIT. EXIT.

       0600-TEST-TYPES.
           IF WS-INCL = 'I'
               AND WS-EXCL = 'E'
               DISPLAY '**** Both include and exclude specified'
               MOVE +0600                     TO WS-RETURN-CODE.

       0600-READ-HL7FLOW.
           READ HL7FLOW.
           IF WS-STAT = ZERO
               ADD 1                          TO WS-READ-RCD-CNT
               PERFORM 0700-SELECT THRU
                       0700-SELECT-EXIT
           ELSE
           IF WS-STAT = 10
               MOVE 'Y'                       TO WS-END-HL7FLOW-SW
           ELSE
               DISPLAY '**** MIS0550B read error on HL7FLOW '
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0600                     TO WS-RETURN-CODE.

       0600-READ-HL7FLOW-EXIT. EXIT.

      *---------------------------------------
      *    loop through the HL7 records (which are all concatenated
      *    together in a stream) and write individual segments
      *    to a separate output record
      *---------------------------------------
       0700-SELECT.
           PERFORM 0800-PULL-UNTIL-CR
               VARYING WS-SUB1 FROM 1 BY 1
               UNTIL WS-SUB1 > WS-SRC.

       0700-SELECT-EXIT. EXIT.

       0800-PULL-UNTIL-CR.
           IF WS-TRUNC-SW = 'Y'
               PERFORM 0800-FIND-END-TRUNC
           ELSE
           IF HL7FLOW-RCD(WS-SUB1: 1) = WS-CR
               PERFORM 0800-CR-FOUND
           ELSE
               PERFORM 0800-ZAP-STRINGS
               IF WS-ZAP-SW = SPACE
                   ADD 1                      TO WS-SUB2
                   IF WS-SUB2 > WS-DST
                      PERFORM 0800-MAXED-OUT
                   ELSE
                       MOVE HL7FLOW-RCD(WS-SUB1: 1)
                                         TO WS-HOLD-OUT(WS-SUB2: 1).

      *---------------------------------------
      *    last line ... final CR is followed by a space
      *                  rather than another segment
      *---------------------------------------
           IF HL7FLOW-RCD(WS-SUB1: 1) = WS-CR
             IF HL7FLOW-RCD(WS-SUB1 + 1: 3) = SPACE
                 MOVE WS-SRC                  TO WS-SUB1.

       0800-ZAP-STRINGS.
           MOVE SPACE                         TO WS-ZAP-SW.
           PERFORM 0800-ZAP-STRING
               VARYING WS-SUB3 FROM 1 BY 1
               UNTIL WS-SUB3 > WS-PARM02-MAX.

       0800-ZAP-STRING.
           MOVE WS-LEN(WS-SUB3)               TO WS-LEN-N.
           IF HL7FLOW-RCD(WS-SUB1: WS-LEN-N)
                                 = WS-STRING(WS-SUB3)(1: WS-LEN-N)
              SUBTRACT 1 FROM WS-LEN-N
              ADD WS-LEN-N                    TO WS-SUB1
              MOVE WS-PARM02-MAX              TO WS-SUB3
              MOVE 'Y'                        TO WS-ZAP-SW.

      *---------------------------------------
      *    it has been determined that the source record is longer
      *    than our max segment length.  if truncation was requested
      *    (ws-len-err = n) then continue looping through the source
      *    record until a bar '|' is found - then pull from that
      *    point until CR is found.  Place that string at the end
      *    of the segment along with a message that data was
      *    truncated.
      *---------------------------------------
       0800-FIND-END-TRUNC.
           IF WS-FIRST-BAR-SW = 'N'
             IF HL7FLOW-RCD(WS-SUB1: 1) = WS-BAR
                 MOVE 'Y'                     TO WS-FIRST-BAR-SW.

           IF WS-FIRST-BAR-SW = 'Y'
               ADD 1                          TO WS-SUB3
               IF WS-SUB3 > 100
                   MOVE WS-DST                TO WS-MSG2
                   MOVE WS-MSG                TO WS-HOLD-MSG
                   MOVE WS-TRUNC              TO WS-HOLD-END
                   PERFORM 1100-DETERMINE-SEND
                   MOVE 'Y'                   TO WS-SKIP-SW
                   PERFORM 0800-RESET-TRUNC
               ELSE
                   MOVE HL7FLOW-RCD(WS-SUB1: 1)
                                        TO WS-HOLD-TRUNC(WS-SUB3: 1)
                   IF HL7FLOW-RCD(WS-SUB1: 1) = WS-CR
                       COMPUTE WS-TRUNC-POS = WS-DST - WS-SUB3 + 1
                       MOVE WS-HOLD-TRUNC(1: WS-SUB3)
                                TO WS-HOLD-OUT(WS-TRUNC-POS: WS-SUB3)
                       MOVE WS-DST            TO WS-MSG2
                       COMPUTE WS-TRUNC-POS = WS-TRUNC-POS - 50
                       MOVE WS-MSG
                                TO WS-HOLD-OUT(WS-TRUNC-POS: 50)
                       PERFORM 1100-DETERMINE-SEND
                       MOVE 'N'               TO WS-SKIP-SW
                       MOVE WS-DST            TO WS-HIGH
                       PERFORM 0800-RESET-TRUNC.

       0800-RESET-TRUNC.
           MOVE SPACE                         TO WS-HOLD-OUT.
           MOVE SPACE                         TO WS-HOLD-TRUNC.
           MOVE ZERO                          TO WS-SUB2.
           MOVE ZERO                          TO WS-SUB3.
           MOVE ZERO                          TO WS-TRUNC-POS.
           MOVE 'N'                           TO WS-TRUNC-SW.
           MOVE 'N'                           TO WS-FIRST-BAR-SW.

       0800-CR-FOUND.
           ADD 1                              TO WS-SUB2.
           MOVE HL7FLOW-RCD(WS-SUB1: 1) TO WS-HOLD-OUT(WS-SUB2: 1).
           IF WS-SKIP-SW = 'Y'
               MOVE SPACE                     TO HL7SEGS-RCD
               MOVE SPACE                     TO WS-HOLD-OUT
               MOVE ZERO                      TO WS-SUB2
               MOVE 'N'                       TO WS-SKIP-SW
           ELSE
           IF WS-CR-SKIP = 'Y'
               MOVE SPACE                   TO WS-HOLD-OUT(WS-SUB2: 1)
               PERFORM 0900-TRACK-HIGH
               PERFORM 1100-DETERMINE-SEND
               MOVE SPACE                     TO HL7SEGS-RCD
               MOVE SPACE                     TO WS-HOLD-OUT
               MOVE ZERO                      TO WS-SUB2
           ELSE
               PERFORM 0900-TRACK-HIGH
               PERFORM 1100-DETERMINE-SEND
               MOVE SPACE                     TO HL7SEGS-RCD
               MOVE SPACE                     TO WS-HOLD-OUT
               MOVE ZERO                      TO WS-SUB2.

      *---------------------------------------
      *    source record is longer than max segment length.
      *    if ws-len-err = y
      *        issue code 0008 and skip all data until CR found
      *    if ws-len-err = n
      *        set switch to perform truncation logic above
      *---------------------------------------
       0800-MAXED-OUT.
           IF WS-SKIP-SW = 'Y'
               MOVE SPACE                     TO WS-HOLD-OUT
               MOVE ZERO                      TO WS-SUB2
           ELSE
           IF WS-LEN-ERR = 'Y'
               DISPLAY '**** HL7 segment ' WS-HOLD-SEG
                       ' skipped '
               DISPLAY '**** Longer than ' WS-DST ' bytes '
               DISPLAY '**** Source rcd  ' WS-READ-RCD-CNT
               MOVE 'Y'                       TO WS-SKIP-SW
               MOVE SPACE                     TO WS-HOLD-OUT
               MOVE ZERO                      TO WS-SUB2
               MOVE +0008                     TO WS-RETURN-CODE
           ELSE
               COMPUTE WS-SHOW-RCD-CNT = WS-WRITE-RCD-CNT + 1
               DISPLAY '**** HL7 segment ' WS-HOLD-SEG ' truncated'
               DISPLAY '**** Longer than ' WS-DST ' bytes '
               DISPLAY '**** Output rcd  ' WS-SHOW-RCD-CNT
               MOVE 'Y'                       TO WS-TRUNC-SW.

       0900-TRACK-HIGH.
           IF WS-SUB2 > WS-HIGH
               MOVE WS-SUB2                   TO WS-HIGH.

      *---------------------------------------
      *    allow the user to exclude certain segments
      *        write all records (ws-include = y) except excluded
      *
      *    allow the user to include certain segments
      *        exclude all records (ws-include = n) except included
      *---------------------------------------
       1100-DETERMINE-SEND.
           PERFORM VARYING WS-SUB3 FROM 1 BY 1
               UNTIL WS-SUB3 > WS-PARM01-MAX
               IF WS-HOLD-SEG = WS-SEG(WS-SUB3)
                 IF WS-I(WS-SUB3) = 'I'
                     PERFORM 1200-WRITE-HL7SEGS
                     MOVE WS-BEYOND-MAX       TO WS-SUB3
                 ELSE
                     MOVE WS-BEYOND-MAX       TO WS-SUB3
                 END-IF
               END-IF
           END-PERFORM.
      *---------------------------------------
      *    if no parm entries were entered, WS-SUB3 will always
      *    be less than WS-BEYOND-MAX.
      *---------------------------------------
           IF WS-INCLUDE-SW = 'Y'
             IF WS-SUB3 < WS-BEYOND-MAX
                 PERFORM 1200-WRITE-HL7SEGS.

       1200-WRITE-HL7SEGS.
           WRITE HL7SEGS-RECORD FROM WS-HOLD-OUT.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0550B write error on HL7SEGS'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +1200                     TO WS-RETURN-CODE.

           ADD 1                              TO WS-WRITE-RCD-CNT.
           IF WS-WRITE-RCD-CNT > WS-PROGRESS
               ADD 20000                      TO WS-PROGRESS
               MOVE SPACE                     TO WS-STV0400B-FIELDS
               MOVE 'H:MM  '                  TO STV0400B-OUT
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               DISPLAY '**** Segments processed  ' WS-WRITE-RCD-CNT
                       '  ' STV0400B-DATA.


      ************************************ END MIS0550B
