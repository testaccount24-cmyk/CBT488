
       TITLE '  MIS0685B: send messages/set codes '.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MIS0685B.
      **********************************************************CX003B
      *@@@ C3 send messages/set condition codes
      ****************************************************************
      * Date written: 01/06/2000
      * Author      : Jim Iannone
      *               loop through static parm and see if dates
      *               match.  if so, send associated message via TSO,
      *               or set a condition code.
      *
      * obtain system date and adjust by offset
      * loop through parm file
      *   gather userid's
      *   calculate adjustment date from system date
      *     adjustment allows you to specify a particular date in
      *     the parm (ex:  **** 06 **  Fathers Day  3RD 7) but be
      *     notified on a different day.
      *   if cycle specified, perform cycle/duration processing
      *   if cycle not specified, perform duration processing
      *   if match, send message/set condition code
      *
      *--------------------------------------------------------------
      * STATIC PARM LAYOUT
      *--------------------------------------------------------------
      *
      * * = documentation line
      * C = combined scheduling (Siemens weekly/monthly processing)
      *     skip if day before/after the 1st
      * S = skip remaining lines when match occurs
      * T = temporary; commented out once match occurs
      *
      * USERIDs on separate line above message, separated by
      *    one space.  leave remainder of line = spaces. (12 max).
      *
      * YYYY : year or '****' for any year
      *      MM : month or '**' for any month
      *         DD : day or '**' for any day
      *
      * CMFE00 -01 : 'CMF' can be used in place of a hardcoded date to
      *              automatically derive a date.
      *              note: CMFxxx must derive a cymd date.
      *              example:  'CMFE00 -01' = second to last day of
      *                         current month.  see stv0400b for
      *                         examples.
      * QFF000 +02 : calculate beginning quarter dates
      * QFF000E+00 : calculate ending quarter dates
      *
      * DURATION :  00 = set/send on match date
      *             ## = set/send for ## days
      *
      *             Note: duration always includes match date.
      *             Duration '03' means match date and two more days,
      *             not match date + 3 days
      *
      * ADJUSTMENT:  <## = adjust match date back ## days
      *              >## = adjust match date forward ## days
      *
      * CYCLE DAYS : repeat every ### days ie: biweekly = 014 days
      *
      * SEND DAY : space = send any day
      *     mon=1..sun=7 = send, or set code, if day matches entry
      *
      *     or  '1ST 456'    = first thurs, fri, sat of the month
      *         '2ND 1  '    = second monday of the month
      *         '3RD 34 '    = third wednesday or thursday of the month
      *         '4TH 2  '    = fourth tuesday of the month
      *         '5TH 1  '    = fifth monday of the month
      *         'LST 1  '    = last monday of the month
      *
      * MESSAGE (40 bytes max, or 30 bytes max if prefix date = Y)
      *
      *     or RETURN CODE
      *        'CCM ####' set rc when dates match
      *        'CCN ####' set when dates do not match
      *        'CTM #### HHMM HHMM' set when within a time range
      *     or ABEND
      *        'ABM     ' abend when dates match
      *        'ABN     ' abend when dates do not match
      *--------------------------------------------------------------
      * UPDATED: 02/27/2001
      *          allow entry of sms schedules such as:
      *          **** ** 21 00<02+0-1+5+4+3+2+1 CDREORG SCHEDULED
      *                          --------------
      *                          Sun........Sat
      *
      *          this says: if the 21st falls on:
      *
      *          Sunday   add +0 days derive Sunday - same day
      *          Monday   add -1 days derive Sunday - prev day
      *          Tuesday  add +5 days derive Sunday - future day
      *          etc
      *--------------------------------------------------------------
      * DATE CHANGED: 08/17/2007
      * PROGRAMMER  : JIM IANNONE
      *               generate abend on request
      *****************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SPECIAL-NAMES.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT OUTNOT               ASSIGN TO OUTNOT
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT PARM01               ASSIGN TO PARM01
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OFFSET               ASSIGN TO OFFSET
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

       DATA DIVISION.
       FILE SECTION.

       FD  OUTNOT
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  OUTNOT-RECORD.
           05  OUTNOT-SE               PIC  XXX.
           05  OUTNOT-QUOTE1           PIC  X.
           05  OUTNOT-FILL1            PIC  X.
           05  OUTNOT-MSG              PIC  X(40).
           05  OUTNOT-FILL2            PIC  X.
           05  OUTNOT-QUOTE2           PIC  X.
           05  OUTNOT-REMAIN           PIC  X(33).

       FD  PARM01
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  PARM01-RECORD.
           05  PARM01-FLAG             PIC  X.
           05  PARM01-USERIDS          PIC  X(71).
           05  FILLER REDEFINES PARM01-USERIDS.
               10  PARM01-DATA         PIC  X(10).
               10  FILLER REDEFINES PARM01-DATA.
                   15  PARM01-CY       PIC  X(04).
                   15  FILLER          PIC  X.
                   15  PARM01-M        PIC  XX.
                   15  FILLER          PIC  X.
                   15  PARM01-D        PIC  XX.
               10  FILLER REDEFINES PARM01-DATA.
                   15  PARM01-CMF      PIC  XXX.
                   15  FILLER          PIC  X(07).
               10  FILLER              PIC  X.
               10  PARM01-DURATION     PIC  XX.
               10  PARM01-ADJ-FLAG     PIC  X.
               10  PARM01-ADJUST       PIC  XX.
               10  FILLER              PIC  X.
               10  PARM01-CYCLE        PIC  XXX.
               10  FILLER              PIC  X.
               10  PARM01-SEL-DAYS     PIC  X(07).
               10  FILLER              PIC  X.
               10  PARM01-PREFIX       PIC  X.
               10  FILLER              PIC  X.
               10  PARM01-MESSAGE      PIC  X(40).
               10  FILLER REDEFINES PARM01-MESSAGE.
                   15  PARM01-CCC      PIC  X(04).
                   15  PARM01-RC       PIC  X(04).
                   15  FILLER          PIC  X.
                   15  PARM01-HM-ST    PIC  X(04).
                   15  FILLER          PIC  X.
                   15  PARM01-HM-EN    PIC  X(04).
                   15  FILLER          PIC  X(22).
           05  FILLER REDEFINES PARM01-USERIDS.
               10  FILLER              PIC  X(16).
               10  PARM01-SMS-DAYS     PIC  X(14).
               10  FILLER              PIC  X(41).
           05  FILLER                  PIC  X(08).

       FD OFFSET
           RECORDING MODE F.
       01  OFFSET-RECORD.
           05  OFFSET-DOCU             PIC  X.
           05  OFFSET-AMOUNT.
               10  OFFSET-PAST-FUT     PIC  X.
               10  OFFSET-OFFSET       PIC  X(05).
           05  FILLER                  PIC  X(10).
           05  OFFSET-BATCH-SW         PIC  X.
           05  FILLER                  PIC  X(62).

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working storage MIS0685B start '.

       01  WS-WORK-FIELDS.
           05  WS-STAT                 PIC  99       VALUE ZERO.
           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.
           05  WS-SET-CODE             PIC S9(04)    VALUE ZERO COMP.
           05  WS-NBR-DAYS             PIC  9(08)    VALUE ZERO.
           05  WS-TOTAL-DAYS           PIC  9(08)    VALUE ZERO.
           05  WS-REMAIN-DAYS          PIC  9(05)    VALUE ZERO.
           05  WS-HOLD-RC              PIC  9(04)    VALUE ZERO.
           05  WS-HOLD-POS             PIC  9(04)    VALUE ZERO.
           05  WS-HOLD-CYCLE           PIC  9(05)    VALUE ZERO.
           05  WS-HOLD-DURATION        PIC  99       VALUE ZERO.
           05  WS-PRM                  PIC  9(04)    VALUE ZERO.
           05  WS-ABEND1               PIC  9(04)    VALUE 1.
           05  WS-ABEND2               PIC  9(04)    VALUE 1.
           05  WS-ABEND3               PIC  9(04)    VALUE ZERO.
           05  WS-HM-ST                PIC  9(04)    VALUE ZERO.
           05  WS-HM-EN                PIC  9(04)    VALUE ZERO.
           05  WS-DAY-N                PIC  9        VALUE ZERO.
           05  WS-HOLD-MESSAGE         PIC  X(40)    VALUE SPACE.
           05  WS-DAY                  PIC  X        VALUE SPACE.
           05  WS-CALL-STV0400B        PIC  X(08)    VALUE 'STV0400B'.
           05  WS-LS-DATA              PIC  X(10).
           05  FILLER REDEFINES WS-LS-DATA.
               10  WS-LS-OFFSET-SW     PIC  X.
               10  WS-LS-CYMD          PIC  X(08).
               10  FILLER              PIC  X.
           05  WS-OCCUR                PIC  X(07)    VALUE SPACE.
           05  FILLER REDEFINES WS-OCCUR.
               10  WS-OCCUR-PREFIX     PIC  9.
               10  WS-OCCUR-VALUE      PIC  XXX.
               10  WS-OCCUR-SUFFIX     PIC  XXX.
               10  FILLER REDEFINES WS-OCCUR-SUFFIX.
                   15  WS-OCCUR-SUF-1  PIC  X.
                   15  FILLER          PIC  XX.
           05  WS-LAST                 PIC  X(07)    VALUE SPACE.
           05  FILLER REDEFINES WS-LAST.
               10  WS-LAST-PREFIX      PIC  X.
               10  WS-LAST-VALUE       PIC  XXX.
               10  WS-LAST-SUFFIX      PIC  XXX.
               10  FILLER REDEFINES WS-LAST-SUFFIX.
                   15  WS-LAST-SUF-1   PIC  X.
                   15  FILLER          PIC  XX.
           05  WS-1-HM                 PIC  9(04)    VALUE ZERO.
           05  WS-1-CYMD               PIC  X(08)    VALUE SPACE.
           05  FILLER REDEFINES WS-1-CYMD.
               10  WS-1-CYMD-CY        PIC  X(04).
               10  WS-1-CYMD-CY-N REDEFINES WS-1-CYMD-CY
                                       PIC  9(04).
               10  WS-1-CYMD-M         PIC  XX.
               10  WS-1-CYMD-M-N REDEFINES WS-1-CYMD-M
                                       PIC  99.
               10  WS-1-CYMD-D         PIC  XX.
               10  WS-1-CYMD-D-N REDEFINES WS-1-CYMD-D
                                       PIC  99.
           05  WS-2-CYMD               PIC  X(08)    VALUE SPACE.
           05  FILLER REDEFINES WS-2-CYMD.
               10  WS-2-CYMD-CY        PIC  X(04).
               10  FILLER REDEFINES WS-2-CYMD-CY.
                   15  WS-2-CYMD-C     PIC  XX.
                   15  WS-2-CYMD-Y     PIC  XX.
               10  WS-2-CYMD-M         PIC  XX.
               10  WS-2-CYMD-D         PIC  XX.
           05  WS-3-CYMD               PIC  X(08)    VALUE SPACE.
           05  WS-4-CYMD               PIC  X(08)    VALUE SPACE.
           05  FILLER REDEFINES WS-4-CYMD.
               10  WS-4-CYMD-CY        PIC  X(04).
               10  FILLER REDEFINES WS-4-CYMD-CY.
                   15  WS-4-CYMD-C     PIC  XX.
                   15  WS-4-CYMD-Y     PIC  XX.
               10  WS-4-CYMD-M         PIC  XX.
               10  WS-4-CYMD-D         PIC  XX.
           05  WS-B-CYMD               PIC  X(08)    VALUE SPACE.
           05  WS-A-CYMD               PIC  X(08)    VALUE SPACE.
           05  WS-UNSTR1               PIC  X(10)    VALUE SPACE.
           05  WS-UNSTR2               PIC  X(10)    VALUE SPACE.
           05  WS-OFFSET               PIC  X(06)    VALUE SPACE.
           05  WS-SMS-DAYS             PIC  X(14)    VALUE SPACE.
           05  WS-SMS-DAY REDEFINES WS-SMS-DAYS
                                       OCCURS 7 TIMES.
               10  WS-SMS-DAY-1        PIC  X.
               10  WS-SMS-DAY-2        PIC  X.
           05  WS-USER-FIELDS.
               10  WS-USER-1           PIC  X(08)    VALUE SPACE.
               10  WS-USER-2           PIC  X(08)    VALUE SPACE.
               10  WS-USER-3           PIC  X(08)    VALUE SPACE.
               10  WS-USER-4           PIC  X(08)    VALUE SPACE.
               10  WS-USER-5           PIC  X(08)    VALUE SPACE.
               10  WS-USER-6           PIC  X(08)    VALUE SPACE.
               10  WS-USER-7           PIC  X(08)    VALUE SPACE.
               10  WS-USER-8           PIC  X(08)    VALUE SPACE.
               10  WS-USER-9           PIC  X(08)    VALUE SPACE.
               10  WS-USER-10          PIC  X(08)    VALUE SPACE.
               10  WS-USER-11          PIC  X(08)    VALUE SPACE.
               10  WS-USER-12          PIC  X(08)    VALUE SPACE.
           05  FILLER REDEFINES WS-USER-FIELDS.
               10  WS-USER             PIC  X(08)
                                       OCCURS 12 TIMES.

       01  WS-COUNT-FIELDS             COMP-3.
           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.
           05  WS-MSG-CNT              PIC S9(07)    VALUE ZERO.

       01  WS-SWITCHES.
           05  WS-END-PARM01-SW        PIC  X        VALUE 'N'.
               88  END-OF-PARM01                     VALUE 'Y'.
               88  MORE-PARM01-RCDS                  VALUE 'N'.
           05  WS-SEND-MSG-SW          PIC  X        VALUE SPACE.
           05  WS-DAY-SW               PIC  X        VALUE SPACE.
           05  WS-OFFSET-SW            PIC  X        VALUE SPACE.
           05  WS-SMS-SW               PIC  X        VALUE SPACE.
           05  WS-COMBINE-SKIP-SW      PIC  X        VALUE SPACE.

       01  WS-SUBSCRIPTS               COMP.
           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.
           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.

       01  WS-STV0400B-FIELDS.
           05  STV0400B-DATA           PIC  X(10)   VALUE SPACE.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-1X6        PIC  X(06).
               10  STV0400B-NBR        PIC  X(04).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-1X8        PIC  X(08).
               10  FILLER              PIC  XX.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAYS       PIC  X(05).
               10  FILLER              PIC  X(05).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAY        PIC  X(09).
               10  STV0400B-DAY-NBR    PIC  X.
           05  STV0400B-DATA2          PIC  X(10)   VALUE SPACE.
           05  FILLER REDEFINES STV0400B-DATA2.
               10  STV0400B-1X8-2      PIC  X(08).
               10  FILLER              PIC  XX.
           05  STV0400B-IN             PIC  X(06)   VALUE SPACE.
           05  STV0400B-OUT            PIC  X(06)   VALUE SPACE.

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  MIS0685B END  '.

       LINKAGE SECTION.

       01  PARM-FIELD.
           05  LS-LENGTH               PIC S9(04)    COMP.
           05  LS-DATA                 PIC  X(10).
           05  FILLER REDEFINES LS-DATA.
               10  LS-OFFSET-SW        PIC  X.
               10  LS-CYMD             PIC  X(08).
               10  FILLER              PIC  X.

      /

       PROCEDURE DIVISION USING PARM-FIELD.

       0100-PROGRAM-ENTRY.
           DISPLAY '                         '.
           DISPLAY '**** MIS0685B set condition codes'.
           PERFORM 0200-OPEN-FILES.

           PERFORM 0300-GET-LINKAGE.

           MOVE '-00000'                      TO WS-OFFSET.
           MOVE SPACE                         TO WS-OFFSET-SW.
           IF WS-RETURN-CODE = ZERO
             IF WS-LS-OFFSET-SW = 'Y'
                 PERFORM 0400-LOAD-OFFSET THRU
                         0400-LOAD-OFFSET-EXIT.
           IF WS-RETURN-CODE = ZERO
               PERFORM 0400-PROCESS-PARM01.

           IF WS-OFFSET NOT = '-00000'
             IF WS-OFFSET-SW = 'Y'
                 DISPLAY '---> Warning - dates offset by '
                          WS-OFFSET ' days '.
           DISPLAY '**** Records in PARM01   ' WS-READ-RCD-CNT.
           DISPLAY '**** Messages/codes      ' WS-MSG-CNT.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0300-CLOSE-FILES
               IF WS-SET-CODE > ZERO
                   MOVE WS-SET-CODE           TO RETURN-CODE
                   DISPLAY '**** MIS0685B cond code ' WS-SET-CODE
                           ' set by request'
               ELSE
                   CONTINUE
           ELSE
               DISPLAY '**** MIS0685B cond code ' WS-RETURN-CODE
                       ' sent by program'
               MOVE WS-RETURN-CODE            TO RETURN-CODE.

           DISPLAY '**** MIS0685B EOJ encountered '.
           DISPLAY '                         '.
           STOP RUN.

       0200-OPEN-FILES.
           OPEN I-O    PARM01.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0685B open error on PARM01'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN INPUT  OFFSET.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0685B open error on OFFSET'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTNOT.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0685B open error on OUTNOT'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.

       0300-CLOSE-FILES.
           CLOSE OUTNOT.
           CLOSE OFFSET.
           CLOSE PARM01.

       0300-GET-LINKAGE.
           IF LS-LENGTH = ZERO
               DISPLAY '**** Parm length is zero '
               MOVE +0300                     TO WS-RETURN-CODE
           ELSE
           IF LS-LENGTH > LENGTH OF WS-LS-DATA
               DISPLAY '**** Parm length is excessive '
               MOVE +0300                     TO WS-RETURN-CODE
           ELSE
               MOVE LS-DATA(1: LS-LENGTH)     TO WS-LS-DATA.
           IF LS-LENGTH > ZERO
             IF LS-LENGTH < 10
                 MOVE SPACE          TO WS-LS-DATA(LS-LENGTH + 1: ).

      *---------------------------------------
      *    load OFFSET
      *---------------------------------------
       0400-LOAD-OFFSET.
           READ OFFSET.
           IF WS-STAT = 10
               GO TO 0400-LOAD-OFFSET-EXIT
           ELSE
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0685B read error on OFFSET'
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0400                     TO WS-RETURN-CODE
               GO TO 0400-LOAD-OFFSET-EXIT.

           IF OFFSET-DOCU = '*'
               GO TO 0400-LOAD-OFFSET.
           IF OFFSET-OFFSET NUMERIC
               MOVE OFFSET-AMOUNT             TO WS-OFFSET
           ELSE
               DISPLAY '**** OFFSET amount not numeric '
               MOVE +0401                     TO WS-RETURN-CODE
               GO TO 0400-LOAD-OFFSET-EXIT.

       0400-LOAD-OFFSET-EXIT. EXIT.

       0400-PROCESS-PARM01.
      *---------------------------------------
      *    ws-1-cymd = specified or generated input parm-file date
      *                altered as each parm rcd is processed
      *    ws-2-cymd = current date (including any offset)
      *    ws-3-cymd = work field
      *                altered as each parm rcd is processed
      *    ws-4-cymd = ws-2-cymd with adjustment
      *                altered as each parm rcd is processed
      *---------------------------------------
      *  program logic is re-driven for each parm01 line...
      *  after last parm01 entry, the program is finished.
      *+--------------------------------------
           IF WS-LS-CYMD(1: 3) = 'CMD' OR 'CMF'
               MOVE SPACE                     TO WS-STV0400B-FIELDS
               MOVE WS-LS-CYMD                TO STV0400B-OUT
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               IF STV0400B-1X6 = 'ERROR'
                   DISPLAY '**** MIS0685B parm CMD or CMF invalid '
                   MOVE +0100                 TO WS-RETURN-CODE
               ELSE
                   MOVE STV0400B-1X8          TO WS-2-CYMD
                   MOVE 'Y'                   TO WS-OFFSET-SW
                   DISPLAY '**** CYMD date specified ' WS-2-CYMD
           ELSE
           IF WS-LS-CYMD(3: 1) = '/'
               AND WS-LS-CYMD(6: 1) = '/'
               IF WS-LS-CYMD = '01/01/01'
                   CONTINUE
               ELSE
                   MOVE SPACE                 TO WS-STV0400B-FIELDS
                   MOVE WS-LS-CYMD            TO STV0400B-1X8
                   MOVE 'M/D/Y '              TO STV0400B-IN
                   MOVE 'CYMD  '              TO STV0400B-OUT
                   CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
                   IF STV0400B-1X6 = 'ERROR'
                       DISPLAY '**** MIS0685B date passed is invalid '
                       MOVE +0100             TO WS-RETURN-CODE
                   ELSE
                       MOVE STV0400B-1X8      TO WS-2-CYMD
                       MOVE 'Y'               TO WS-OFFSET-SW
                       DISPLAY '**** CYMD date specified ' WS-2-CYMD
           ELSE
           IF WS-LS-CYMD NUMERIC
             IF WS-LS-CYMD NOT = '00000000'
                 MOVE SPACE                   TO WS-STV0400B-FIELDS
                 MOVE WS-LS-CYMD              TO STV0400B-1X8
                 MOVE 'CYMD  '                TO STV0400B-IN
                 MOVE 'CYMD  '                TO STV0400B-OUT
                 CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
                 IF STV0400B-1X6 = 'ERROR'
                     DISPLAY '**** MIS0685B parm CYMD not valid'
                     MOVE +0100               TO WS-RETURN-CODE
                 ELSE
                     MOVE STV0400B-1X8        TO WS-2-CYMD
                     DISPLAY '**** CYMD date specified ' WS-2-CYMD.

      *---------------------------------------
      *    get current date and time
      *+--------------------------------------
           IF WS-2-CYMD NOT NUMERIC
               MOVE SPACE                     TO WS-STV0400B-FIELDS
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               MOVE STV0400B-1X8              TO WS-2-CYMD
               MOVE 'Y'                       TO WS-OFFSET-SW.

           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE 'HMM   '                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           MOVE STV0400B-DATA(1: 4)           TO WS-1-HM.

      *---------------------------------------
      *    set ws-2-cymd to either the system date
      *    or the offset date
      *+--------------------------------------
           IF WS-OFFSET-SW = 'Y'
               MOVE SPACE                     TO WS-STV0400B-FIELDS
               MOVE WS-2-CYMD                 TO STV0400B-1X8
               MOVE 'CYMD  '                  TO STV0400B-IN
               MOVE WS-OFFSET                 TO STV0400B-OUT
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               MOVE STV0400B-1X8              TO WS-2-CYMD.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0600-READ-PARM01
                   UNTIL END-OF-PARM01.

       0600-READ-PARM01.
           READ PARM01.
           IF WS-STAT = ZERO
               ADD 1                          TO WS-READ-RCD-CNT
               PERFORM 0700-SELECT THRU
                       0700-SELECT-EXIT
           ELSE
           IF WS-STAT = 10
               MOVE 'Y'                       TO WS-END-PARM01-SW
           ELSE
               DISPLAY '**** MIS0685B read error on PARM01 '
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +0600                     TO WS-RETURN-CODE.
           IF WS-RETURN-CODE > ZERO
               MOVE 'Y'                       TO WS-END-PARM01-SW.

      *---------------------------------------
      *    edit date.
      *    date may be derived by STV0400B if PARM01-DATA is valued.
      *    example: 'CMFE00 -01' says 'end of month date for current
      *              month minus one day'.  This would match to the
      *              second to last day of the month.
      *    example: 'QFF000 +01' says 'beginning of current quarter
      *              plus one day'
      *+--------------------------------------
       0700-SELECT.
           IF PARM01-FLAG = '*'
               GO TO 0700-SELECT-EXIT.

           MOVE SPACE                         TO WS-COMBINE-SKIP-SW.
           ADD 1                              TO WS-PRM.
           MOVE WS-2-CYMD                     TO WS-4-CYMD.

      *---------------------------------------
      *  adjust 'current date' forward or backward
      *---------------------------------------
           IF PARM01-CY NUMERIC
               OR PARM01-CY = '****'
               OR PARM01-CMF = 'CMF' OR 'QFF'
               CONTINUE
           ELSE
               PERFORM 0700-EDIT-USERIDS
               GO TO 0700-SELECT-EXIT.

           IF PARM01-ADJUST NUMERIC
             IF PARM01-ADJUST = '00'
                 CONTINUE
             ELSE
             IF PARM01-ADJ-FLAG = '>' OR '<'
                 PERFORM 0700-CALC-ADJUST
             ELSE
                 DISPLAY '**** < or > required for adjustment '
           ELSE
               DISPLAY '**** Adjustment days must be numeric'
               MOVE +0700                     TO WS-RETURN-CODE.

           MOVE SPACE                         TO WS-SMS-SW.
           IF PARM01-SMS-DAYS(1: 1) = '+' OR '-'
               MOVE 'Y'                       TO WS-SMS-SW
               MOVE PARM01-SMS-DAYS           TO WS-SMS-DAYS
               MOVE SPACE                     TO PARM01-SMS-DAYS
               MOVE '000'                     TO PARM01-CYCLE.

           IF PARM01-DATA(1: 3) = 'CMF' OR 'QFF'
               PERFORM 0800-CALC-DATE
               GO TO 0700-SKIP-CYMD-EDIT.

       0700-EDIT-DATES.
           IF PARM01-CY = '****'
               MOVE WS-4-CYMD-CY              TO WS-1-CYMD-CY
           ELSE
           IF PARM01-CY NUMERIC
               MOVE PARM01-CY                 TO WS-1-CYMD-CY
           ELSE
               DISPLAY '**** Parm year must be numeric or asterisks'
               MOVE +0700                     TO WS-RETURN-CODE.
           IF PARM01-M = '**'
               MOVE WS-4-CYMD-M               TO WS-1-CYMD-M
           ELSE
           IF PARM01-M NUMERIC
               MOVE PARM01-M                  TO WS-1-CYMD-M
           ELSE
               DISPLAY '**** Parm month must be numeric or asterisks'
               MOVE +0700                     TO WS-RETURN-CODE.
           IF PARM01-D = '**'
               MOVE WS-4-CYMD-D               TO WS-1-CYMD-D
           ELSE
           IF PARM01-D NUMERIC
               MOVE PARM01-D                  TO WS-1-CYMD-D
           ELSE
               DISPLAY '**** Parm day must be numeric or asterisks'
               MOVE +0700                     TO WS-RETURN-CODE.

      *---------------------------------------
      *    from above logic, WS-1-CYMD has the potential to
      *    hold an invalid date, such as 20120931.  if parm date
      *    is '2012 09 **' and WS-4-CYMD is 20121231 then '31'
      *    may get moved into WS-1-CYMD-D.
      *---------------------------------------
           PERFORM 0700-DECREMENT-UNTIL-VALID.

       0700-SKIP-CYMD-EDIT.
           IF WS-RETURN-CODE NOT = ZERO
               GO TO 0700-SELECT-EXIT.

           IF PARM01-CYCLE NUMERIC
               MOVE PARM01-CYCLE              TO WS-HOLD-CYCLE
           ELSE
               DISPLAY '**** Cycle days must be numeric'
               MOVE +0700                     TO WS-RETURN-CODE.

           IF PARM01-DURATION NUMERIC
               MOVE PARM01-DURATION           TO WS-HOLD-DURATION
           ELSE
               DISPLAY '**** Duration days must be numeric'
               MOVE +0700                     TO WS-RETURN-CODE.

           IF PARM01-MESSAGE = SPACE
               DISPLAY '**** Parm message required'
               MOVE +0700                     TO WS-RETURN-CODE.

           IF WS-RETURN-CODE NOT = ZERO
               GO TO 0700-SELECT-EXIT.

           IF WS-HOLD-DURATION = ZERO
               MOVE 1                         TO WS-HOLD-DURATION.

      *---------------------------------------
      *  determine current day (including offset)
      *---------------------------------------
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-4-CYMD                     TO STV0400B-1X8.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE 'DAY   '                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           MOVE STV0400B-DAY-NBR              TO WS-DAY.

      *---------------------------------------
      *  if sms scheduling specified (+0-1+5+4+3+2+1)
      *  then redetermine the match date.
      *---------------------------------------
           IF WS-SMS-SW = 'Y'
               PERFORM 0900-CALC-SMS-DATE THRU
                       0900-CALC-SMS-EXIT.

           IF PARM01-CCC = 'CTM '
               PERFORM 0700-LOAD-TIMES
               IF PARM01-HM-ST NOT NUMERIC
                   DISPLAY '**** CTM start time not numeric '
                   MOVE +0700                 TO WS-RETURN-CODE
               ELSE
               IF PARM01-HM-EN NOT NUMERIC
                   DISPLAY '**** CTM end time not numeric '
                   MOVE +0700                 TO WS-RETURN-CODE
               ELSE
                   MOVE PARM01-HM-ST          TO WS-HM-ST
                   MOVE PARM01-HM-EN          TO WS-HM-EN
                   IF WS-HM-ST > 2359
                       DISPLAY '**** CTM start time not valid '
                       MOVE +0700             TO WS-RETURN-CODE
                   ELSE
                   IF WS-HM-EN > 2359
                       DISPLAY '**** CTM end time not valid '
                       MOVE +0700             TO WS-RETURN-CODE
                   ELSE
                   IF WS-HM-ST > WS-HM-EN
                       DISPLAY '**** CTM start time > end time '
                       MOVE +0700             TO WS-RETURN-CODE.

           IF PARM01-CCC = 'CCM ' OR 'CCN ' OR 'CTM '
             IF PARM01-RC NUMERIC
                 MOVE PARM01-RC               TO WS-HOLD-RC
                 IF WS-HOLD-RC > 4095
                     DISPLAY '**** Requested cond code > 4095 '
                     MOVE +0700               TO WS-RETURN-CODE
                 ELSE
                     CONTINUE
             ELSE
                 DISPLAY '**** Requested cond code not numeric'
                 MOVE +0700                   TO WS-RETURN-CODE.

           IF WS-RETURN-CODE NOT = ZERO
               GO TO 0700-SELECT-EXIT.

      *---------------------------------------
      *    determine if days 1-7 have been specified
      *    or an st/nd/rd/th entry, such as '3RD 4  ' meaning
      *    third thursday of the month.
      *+--------------------------------------
           MOVE 'N'                           TO WS-SEND-MSG-SW.
           MOVE 'N'                           TO WS-DAY-SW.
           IF PARM01-SEL-DAYS(1: 4) = '1ST ' OR '2ND ' OR '3RD '
                                   OR '4TH ' OR '5TH '
               PERFORM 1900-TEST-OCCUR
           ELSE
           IF PARM01-SEL-DAYS(1: 4) = 'LST '
               PERFORM 1900-TEST-LAST.
           IF PARM01-SEL-DAYS = SPACE
               MOVE 'Y'                       TO WS-DAY-SW
           ELSE
               PERFORM 1800-TEST-DAYS
                   VARYING WS-SUB1 FROM 1 BY 1
                   UNTIL WS-SUB1 > 7.
           IF WS-DAY-SW = 'N'
               GO TO 0700-CONTINUE.

      *---------------------------------------
      *    if cycle days specified
      *        determine nbr days between specified and current date
      *        divide by cycle
      *        if remainder zero, dates match
      *
      *        if duration specified
      *            subtract 1 from current date and retest
      *            until duration days tested
      *---------------------------------------
           IF WS-HOLD-CYCLE > ZERO
               MOVE WS-4-CYMD                 TO WS-3-CYMD
               PERFORM 1200-NBR-DAYS
                   VARYING WS-SUB1 FROM 1 BY 1
                   UNTIL WS-SUB1 > WS-HOLD-DURATION
               GO TO 0700-CONTINUE.

      *---------------------------------------
      *    if cycle days not specified
      *      if duration specified
      *        determine nbr days between specified and current date
      *        if nbr days not > duration days, dates match
      *---------------------------------------
           MOVE WS-4-CYMD                     TO WS-3-CYMD.
           PERFORM 1400-DURATION-DATE.

       0700-CONTINUE.
           IF PARM01-CCC = 'CCM ' OR 'CCN ' OR 'CTM '
                        OR 'ABM ' OR 'ABN '
               PERFORM 1600-SET-CODE THRU
                       1600-SET-CODE-EXIT
           ELSE
           IF WS-SEND-MSG-SW = 'Y'
               PERFORM 1500-SEND-MESSAGE
                   VARYING WS-SUB1 FROM 1 BY 1
                   UNTIL WS-USER(WS-SUB1) = SPACE
                   OR WS-SUB1 > 12.

      *---------------------------------------
      *    if PARM01-FLAG = 'T' and date criteria match,
      *    comment out line by changing 'T' to '*'.
      *---------------------------------------
           IF WS-SEND-MSG-SW = 'Y'
             IF PARM01-FLAG = 'T'
                 DISPLAY '**** T parm: match occurred - commenting out'
                 MOVE '*'                     TO PARM01-FLAG
                 PERFORM 2000-REWRITE-PARM01.

      *---------------------------------------
      *    if PARM01-FLAG = 'S' and date criteria match, SKIP
      *    processing the remaining parm records.  This allows for
      *    more complicated logic in the parm.
      *---------------------------------------
           IF WS-SEND-MSG-SW = 'Y'
             IF PARM01-FLAG = 'S'
                 DISPLAY '**** S parm - skipping remaining parm rcds'
                 MOVE 'Y'                     TO WS-END-PARM01-SW.

       0700-SELECT-EXIT. EXIT.

       0700-LOAD-TIMES.
           IF PARM01-HM-ST(1: 2) = '**'
               MOVE WS-1-HM(1: 2)             TO PARM01-HM-ST(1: 2).
           IF PARM01-HM-EN(1: 2) = '**'
               MOVE WS-1-HM(1: 2)             TO PARM01-HM-EN(1: 2).

       0700-DECREMENT-UNTIL-VALID.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-1-CYMD                     TO STV0400B-1X8.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE 'CYMD  '                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           IF STV0400B-1X6 = 'ERROR'
             IF WS-1-CYMD-D-N > 28
                 SUBTRACT 1 FROM WS-1-CYMD-D-N
                 GO TO 0700-DECREMENT-UNTIL-VALID.

       0700-EDIT-USERIDS.
           IF PARM01-USERIDS = SPACE
               DISPLAY '**** Userids not specified'
               MOVE +0700                     TO WS-RETURN-CODE
           ELSE
               MOVE SPACE                     TO WS-USER-FIELDS
               UNSTRING PARM01-USERIDS DELIMITED BY ' '
                   INTO WS-USER-1 WS-USER-2  WS-USER-3  WS-USER-4
                        WS-USER-5 WS-USER-6  WS-USER-7  WS-USER-8
                        WS-USER-9 WS-USER-10 WS-USER-11 WS-USER-12.

      *---------------------------------------
      *    if (<) specified then re-adjust current date forward
      *    ## days.  include duration if specified.
      *    ex:  **** 12 25 and ' 02<02 000' specified:
      *         matches occur on 12/23 12/24
      *
      *         in other words, on the 23rd the current date is
      *         adjusted forward 2 days (to the 25th) then compared
      *         with the specified match date and duration.
      *
      *    if (>) specified then re-adjust current date back
      *    ## days.  include duration if specified.
      *    ex:  **** 12 25 and '00>02 000' specified:
      *         match occurs on 12/27
      *---------------------------------------
       0700-CALC-ADJUST.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-4-CYMD                     TO STV0400B-DATA.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE '-00000'                      TO STV0400B-OUT.
           IF PARM01-ADJ-FLAG = '<'
               MOVE '+'                       TO STV0400B-OUT(1: 1).
           MOVE PARM01-ADJUST                 TO STV0400B-OUT(5: 2).
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           IF STV0400B-1X6 = 'ERROR'
               DISPLAY '**** Error calculating adjustment date '
               DISPLAY '**** ' WS-2-CYMD '  ADJ: ' PARM01-ADJUST
               MOVE +0700                     TO WS-RETURN-CODE
           ELSE
               MOVE STV0400B-1X8              TO WS-4-CYMD.

      *---------------------------------------
      *    derive date from parm01-data
      *+--------------------------------------
       0800-CALC-DATE.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-4-CYMD                     TO STV0400B-1X8.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE PARM01-DATA                   TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           IF STV0400B-1X6 = 'ERROR'
               DISPLAY '**** Error calculating conversion date '
               DISPLAY '**** ' PARM01-DATA
               MOVE +0800                     TO WS-RETURN-CODE
           ELSE
           IF PARM01-DATA(9: 2) NUMERIC
               AND PARM01-DATA(8: 1) = '+' OR '-'
               MOVE 'CYMD  '                  TO STV0400B-IN
               MOVE PARM01-DATA(8: 1)         TO STV0400B-OUT(1: 1)
               MOVE '000'                     TO STV0400B-OUT(2: 3)
               MOVE PARM01-DATA(9: 2)         TO STV0400B-OUT(5: 2)
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               IF STV0400B-1X6 = 'ERROR'
                   DISPLAY '**** Error altering conversion date '
                   DISPLAY '**** ' PARM01-DATA
                   MOVE +0800                 TO WS-RETURN-CODE
               ELSE
               IF PARM01-CMF = 'QFF'
                   AND PARM01-DATA(7: 1) = 'E'
                   MOVE STV0400B-1X8-2        TO WS-1-CYMD
               ELSE
                   MOVE STV0400B-1X8          TO WS-1-CYMD
           ELSE
           IF PARM01-CMF = 'QFF'
               AND PARM01-DATA(7: 1) = 'E'
               MOVE STV0400B-1X8-2            TO WS-1-CYMD
           ELSE
               MOVE STV0400B-1X8              TO WS-1-CYMD.

      *---------------------------------------
      *  determine parm01 specified day
      *---------------------------------------
       0900-CALC-SMS-DATE.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-1-CYMD                     TO STV0400B-1X8.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE 'DAY   '                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           IF STV0400B-DAY-NBR NOT NUMERIC
               DISPLAY '**** STV0400B sms day calc error'
               MOVE +0900                     TO WS-RETURN-CODE
               GO TO 0900-CALC-SMS-EXIT
           ELSE
               MOVE STV0400B-DAY-NBR          TO WS-DAY-N.
      *---------------------------------------
      *    convert day range (mon=1...sun=7) to
      *    sms day range (sun=1...sat=7) to
      *+--------------------------------------
           ADD 1                              TO WS-DAY-N.
           IF WS-DAY-N > 7
               MOVE 1                         TO WS-DAY-N.
           IF WS-SMS-DAY-1(WS-DAY-N) = '+' OR '-'
               CONTINUE
           ELSE
               DISPLAY '**** SMS day offset must be + or -'
               MOVE +0901                     TO WS-RETURN-CODE
               GO TO 0900-CALC-SMS-EXIT.
           IF WS-SMS-DAY-2(WS-DAY-N) NOT NUMERIC
               DISPLAY '**** SMS day offset must be numeric'
               MOVE +0902                     TO WS-RETURN-CODE
               GO TO 0900-CALC-SMS-EXIT
           ELSE
           IF WS-SMS-DAY-2(WS-DAY-N) > '7'
               DISPLAY '**** SMS day offset must be 0 - 7'
               MOVE +0903                     TO WS-RETURN-CODE
               GO TO 0900-CALC-SMS-EXIT.

           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-1-CYMD                     TO STV0400B-DATA.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE '-00000'                      TO STV0400B-OUT.
           MOVE WS-SMS-DAY-1(WS-DAY-N)        TO STV0400B-OUT(1:1).
           MOVE WS-SMS-DAY-2(WS-DAY-N)        TO STV0400B-OUT(6:1).
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           IF STV0400B-1X6 = 'ERROR'
               DISPLAY '**** Error calculating number days'
               DISPLAY '**** ' WS-1-CYMD '  ' WS-SMS-DAYS
               MOVE +0004                     TO WS-RETURN-CODE
           ELSE
               MOVE STV0400B-1X8              TO WS-1-CYMD.

       0900-CALC-SMS-EXIT. EXIT.

      *---------------------------------------
      *    date specified with a repeating schedule.
      *    take duration days into account.
      *+--------------------------------------
       1200-NBR-DAYS.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-1-CYMD                     TO STV0400B-DATA.
           MOVE WS-3-CYMD                     TO STV0400B-DATA2.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE 'DAYS  '                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           IF STV0400B-1X6 = 'ERROR'
               DISPLAY '**** Error calculating number days'
               DISPLAY '**** ' WS-1-CYMD '  ' WS-3-CYMD
               MOVE +0004                     TO WS-RETURN-CODE
               MOVE WS-HOLD-DURATION          TO WS-SUB1
           ELSE
               MOVE ZERO                      TO WS-TOTAL-DAYS
                                                 WS-REMAIN-DAYS
               MOVE STV0400B-DAYS             TO WS-NBR-DAYS
               DIVIDE WS-NBR-DAYS BY WS-HOLD-CYCLE GIVING
                      WS-TOTAL-DAYS REMAINDER WS-REMAIN-DAYS
               IF WS-REMAIN-DAYS = ZERO
                   MOVE 'Y'                   TO WS-SEND-MSG-SW
                   MOVE WS-HOLD-DURATION      TO WS-SUB1
               ELSE
                   PERFORM 1300-DECREMENT-DATE.

       1300-DECREMENT-DATE.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE WS-3-CYMD                     TO STV0400B-DATA.
           MOVE 'CYMD  '                      TO STV0400B-IN.
           MOVE '-00001'                      TO STV0400B-OUT.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           IF STV0400B-1X6 = 'ERROR'
               DISPLAY '**** Error decrementing date'
               MOVE +1300                     TO WS-RETURN-CODE
               MOVE WS-HOLD-DURATION          TO WS-SUB1
           ELSE
               MOVE STV0400B-1X8              TO WS-3-CYMD.

      *---------------------------------------
      *    date specified without a repeating schedule.
      *    take duration days into account.
      *---------------------------------------
       1400-DURATION-DATE.
           IF WS-3-CYMD NOT < WS-1-CYMD
               MOVE SPACE                     TO WS-STV0400B-FIELDS
               MOVE WS-1-CYMD                 TO STV0400B-DATA
               MOVE WS-3-CYMD                 TO STV0400B-DATA2
               MOVE 'CYMD  '                  TO STV0400B-IN
               MOVE 'DAYS  '                  TO STV0400B-OUT
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               IF STV0400B-1X6 = 'ERROR'
                   DISPLAY '**** Error calculating duration days'
                   DISPLAY '**** ' WS-1-CYMD '  ' WS-3-CYMD
                   MOVE +0004                 TO WS-RETURN-CODE
               ELSE
                   MOVE STV0400B-DAYS         TO WS-NBR-DAYS
                   ADD 1                      TO WS-NBR-DAYS
                   IF WS-NBR-DAYS NOT > WS-HOLD-DURATION
                       MOVE 'Y'               TO WS-SEND-MSG-SW.

       1500-SEND-MESSAGE.
           MOVE 'SE '                         TO OUTNOT-SE.
           MOVE QUOTE                         TO OUTNOT-QUOTE1.
           MOVE SPACE                         TO OUTNOT-FILL1.
           MOVE SPACE                         TO OUTNOT-MSG.
           MOVE PARM01-MESSAGE                TO WS-HOLD-MESSAGE.
           PERFORM 1500-ADD-DATE-TO-MSG.
           IF PARM01-PREFIX = 'Y'
               STRING WS-2-CYMD-M '-' WS-2-CYMD-D '-'
                      WS-2-CYMD-Y ' ' WS-HOLD-MESSAGE
                      DELIMITED BY SIZE INTO OUTNOT-MSG
           ELSE
               MOVE WS-HOLD-MESSAGE           TO OUTNOT-MSG.
           MOVE SPACE                         TO OUTNOT-FILL2.
           MOVE QUOTE                         TO OUTNOT-QUOTE2.
           MOVE SPACE                         TO OUTNOT-REMAIN.
           STRING ' U('                       DELIMITED BY SIZE
                  WS-USER(WS-SUB1)            DELIMITED BY ' '
                  ') LOGON'                   DELIMITED BY SIZE
                  INTO OUTNOT-REMAIN.
           PERFORM 2000-WRITE-OUTNOT.

      *    #+00000#M/D/CY#
       1500-ADD-DATE-TO-MSG.
           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           MOVE ZERO                          TO WS-HOLD-POS.
           PERFORM VARYING WS-SUB2 FROM 1 BY 1
               UNTIL WS-SUB2 > 26
               IF WS-HOLD-MESSAGE(WS-SUB2: 1) = '#'
                   AND WS-HOLD-MESSAGE(WS-SUB2 + 7: 1) = '#'
                   MOVE WS-SUB2               TO WS-HOLD-POS
                   MOVE 26                    TO WS-SUB2
               END-IF
           END-PERFORM.
           IF WS-HOLD-POS NOT = ZERO
               MOVE WS-4-CYMD                 TO STV0400B-1X8
               MOVE 'CYMD  '                  TO STV0400B-IN
               MOVE WS-HOLD-MESSAGE(WS-HOLD-POS + 1: 6)
                                              TO STV0400B-OUT
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               MOVE 'CYMD  '                  TO STV0400B-IN
               MOVE WS-HOLD-MESSAGE(WS-HOLD-POS + 8: 6)
                                              TO STV0400B-OUT
               UNSTRING STV0400B-OUT DELIMITED BY '#'
                   INTO WS-UNSTR1 WS-UNSTR2
               MOVE WS-UNSTR1                 TO STV0400B-OUT
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               MOVE STV0400B-DATA TO WS-HOLD-MESSAGE(WS-HOLD-POS: 15).

       1600-SET-CODE.
           PERFORM 1700-CHECK-COMBINE.
           IF WS-COMBINE-SKIP-SW = 'Y'
               DISPLAY WS-PRM ' skipping: combine logic invoked'
               GO TO 1600-SET-CODE-EXIT
           ELSE
           IF PARM01-CCC = 'CTM '
               PERFORM 1700-CHECK-TIME-RANGE
               IF WS-SEND-MSG-SW = 'Y'
                   DISPLAY WS-PRM ' CTM = set code if date/time match'
                   PERFORM 1700-DISPLAY-DATE
               ELSE
                   DISPLAY WS-PRM ' CTM = skip code if no match'
                   PERFORM 1700-DISPLAY-DATE
                   GO TO 1600-SET-CODE-EXIT
           ELSE
           IF PARM01-CCC = 'CCM '
             IF WS-SEND-MSG-SW = 'Y'
                 DISPLAY WS-PRM ' CCM = set code if date match'
                 PERFORM 1700-DISPLAY-DATE
             ELSE
                 DISPLAY WS-PRM ' CCM = skip code if no match'
                 PERFORM 1700-DISPLAY-DATE
                 GO TO 1600-SET-CODE-EXIT
           ELSE
           IF PARM01-CCC = 'ABM '
             IF WS-SEND-MSG-SW = 'Y'
                 DISPLAY WS-PRM ' ABM = abend if date match'
                 PERFORM 1700-DISPLAY-DATE
             ELSE
                 DISPLAY WS-PRM ' ABM = skip abend if no match'
                 PERFORM 1700-DISPLAY-DATE
                 GO TO 1600-SET-CODE-EXIT
           ELSE
           IF PARM01-CCC = 'ABN '
             IF WS-SEND-MSG-SW = 'Y'
                 DISPLAY WS-PRM ' ABN = skip abend if date match'
                 PERFORM 1700-DISPLAY-DATE
             ELSE
                 DISPLAY WS-PRM ' ABN = abend if no match'
                 PERFORM 1700-DISPLAY-DATE
                 GO TO 1600-SET-CODE-EXIT
           ELSE
           IF WS-SEND-MSG-SW = 'Y'
               DISPLAY WS-PRM ' CCN = skip code if date match '
               PERFORM 1700-DISPLAY-DATE
               GO TO 1600-SET-CODE-EXIT
           ELSE
               DISPLAY WS-PRM ' CCN = set code if no match '
               PERFORM 1700-DISPLAY-DATE.

           IF WS-SEND-MSG-SW = 'Y'
             IF WS-HOLD-CYCLE > ZERO
                 DISPLAY WS-PRM ' cycle of ' WS-HOLD-CYCLE
                         ' occurring ' WS-TOTAL-DAYS ' times'.

           IF PARM01-CCC = 'ABM ' OR 'ABN '
               PERFORM 1600-ABEND
           ELSE
               MOVE WS-HOLD-RC                TO WS-SET-CODE.

       1600-SET-CODE-EXIT. EXIT.

      *---------------------------------------
      *    Will cause message  "IGYOP3124-W   This statement may
      *    cause a program exception at execution"  to generate
      *    during program compile - ignore
      *---------------------------------------
       1600-ABEND.
           COMPUTE WS-ABEND1 = WS-ABEND2 / WS-ABEND3.

       1700-CHECK-TIME-RANGE.
           IF WS-1-HM < WS-HM-ST
               OR WS-1-HM > WS-HM-EN
               MOVE 'N'                       TO WS-SEND-MSG-SW.

       1700-DISPLAY-DATE.
           IF PARM01-ADJUST = '00'
             IF PARM01-CCC = 'CTM '
                 DISPLAY WS-PRM ' ' PARM01-CCC '        Curr: '
                 WS-2-CYMD ' ' WS-1-HM '  Req: ' WS-1-CYMD
                 ' ' WS-HM-ST '-' WS-HM-EN
             ELSE
                 DISPLAY WS-PRM ' ' PARM01-CCC '        Curr: '
                 WS-2-CYMD '  Req: ' WS-1-CYMD
           ELSE
           IF PARM01-CCC = 'CTM '
               DISPLAY WS-PRM ' ' PARM01-CCC '        Curr: '
               WS-4-CYMD ' ' WS-1-HM '  Req: ' WS-1-CYMD
               ' ' WS-HM-ST '-' WS-HM-EN
           ELSE
               DISPLAY WS-PRM ' ' PARM01-CCC '         Adj: '
               WS-4-CYMD '  Req: ' WS-1-CYMD.

      *---------------------------------------
      *    determine date before and after current date and
      *    skip logic for this record if either date is the 1st
      *---------------------------------------
       1700-CHECK-COMBINE.
           IF WS-SEND-MSG-SW = 'Y'
             IF PARM01-FLAG = 'C'
                 MOVE SPACE                   TO WS-STV0400B-FIELDS
                 MOVE WS-4-CYMD               TO STV0400B-1X8
                 MOVE 'CYMD  '                TO STV0400B-IN
                 MOVE '-00001'                TO STV0400B-OUT
                 CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
                 MOVE STV0400B-1X8            TO WS-B-CYMD
                 DISPLAY WS-PRM ' combine: before ' WS-B-CYMD
                 MOVE 'CYMD  '                TO STV0400B-IN
                 MOVE '+00002'                TO STV0400B-OUT
                 CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
                 MOVE STV0400B-1X8            TO WS-A-CYMD
                 DISPLAY WS-PRM ' combine: after  ' WS-A-CYMD
                 IF WS-B-CYMD(7: 2) = '01'
                     OR WS-A-CYMD(7: 2) = '01'
                     MOVE 'Y'                 TO WS-COMBINE-SKIP-SW.

       1800-TEST-DAYS.
           IF PARM01-SEL-DAYS(WS-SUB1: 1) = WS-DAY
               MOVE 'Y'                       TO WS-DAY-SW.

       1900-TEST-OCCUR.
           MOVE PARM01-SEL-DAYS               TO WS-OCCUR.
           IF WS-OCCUR-SUF-1 NUMERIC
               COMPUTE WS-1-CYMD-D-N = WS-OCCUR-PREFIX * 7 - 6
               MOVE 7                         TO WS-HOLD-DURATION
               MOVE WS-OCCUR-SUFFIX           TO PARM01-SEL-DAYS
               MOVE ZERO                      TO WS-HOLD-CYCLE
           ELSE
               DISPLAY '**** ST/ND/RD/TH specified with no day entry '
               MOVE +1900                     TO WS-RETURN-CODE.

       1900-TEST-LAST.
           MOVE PARM01-SEL-DAYS               TO WS-LAST.
           IF WS-LAST-SUF-1 NUMERIC
               MOVE WS-LAST-SUFFIX            TO PARM01-SEL-DAYS
               MOVE 7                         TO WS-HOLD-DURATION
               MOVE ZERO                      TO WS-HOLD-CYCLE
               MOVE SPACE                     TO WS-STV0400B-FIELDS
               MOVE WS-1-CYMD                 TO STV0400B-DATA
               MOVE 'CYMD  '                  TO STV0400B-IN
               MOVE 'CMDE00'                  TO STV0400B-OUT
               CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS
               IF STV0400B-1X6 = 'ERROR'
                   DISPLAY '**** Error calculating last date'
                   DISPLAY '**** ' WS-1-CYMD
                   MOVE +1900                 TO WS-RETURN-CODE
               ELSE
                   MOVE STV0400B-1X8(7: 2)    TO WS-1-CYMD-D
                   SUBTRACT 6 FROM WS-1-CYMD-D-N
           ELSE
               DISPLAY '**** LST specified with no day entry '
               MOVE +1900                     TO WS-RETURN-CODE.

       2000-WRITE-OUTNOT.
           WRITE OUTNOT-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0685B write error on OUTNOT '
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +2000                     TO WS-RETURN-CODE.
           ADD 1                              TO WS-MSG-CNT.

       2000-REWRITE-PARM01.
           REWRITE PARM01-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0685B rewrite error on PARM01 '
               DISPLAY '**** File stat = ' WS-STAT
               MOVE +2000                     TO WS-RETURN-CODE.

      ************************************ END MIS0685B
