
       TITLE '  STV0530B: convert number to alpha equivalent '.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    STV0530B.
      ******************************************************************
      *@@@ c3 convert number to alpha equivalent
      ******************************************************************
      *
      *  I am interested in knowing if/where these programs
      *  are in use.     EMAIL:  JIANNON@ME.COM
      *
      ****************************************************************
      * Date written: 04/08/2009
      * Author      : Jim Iannone
      *
      *               Given a number, generate an alphabetic
      *               equivalent.  Allow numbers from 1 - 321,272,406
      *
      *               For example:
      *               1         = 'A     '   LS-LEN = 1
      *               5         = 'E     '   LS-LEN = 1
      *               26        = 'Z     '   LS-LEN = 1
      *               27        = 'AA    '   LS-LEN = 2
      *               17576     = 'YYZ   '   LS-LEN = 3
      *               17577     = 'YZA   '   LS-LEN = 3
      *               321272406 = 'ZZZZZZ'   LS-LEN = 6
      *
      *               return '******' if number is not within range
      *
      *        Note:  This program can also be used just to condense
      *               a number into a right justified numeric number:
      *
      *               Example: convert '     3 4 ' to '000000034'
      *
      *               If using STV0530B for this purpose then
      *               value STV0530B-SKIP-ALPHA to 'Y' to bypass
      *               the alpha logic for improved performance
      *
      *
      *    01  WS-STV0530B-FIELDS.
      *        05  STV0530B-NUMBER         PIC  X(09)    VALUE SPACE.
      *        05  STV0530B-SKIP-ALPHA     PIC  X        VALUE SPACE.
      *        05  STV0530B-ALPHA          PIC  X(06)    VALUE SPACE.
      *        05  STV0530B-LEN            PIC  9        VALUE ZERO.
      *        05  STV0530B-FILLER         PIC  XXX      VALUE SPACE.
      *
      ******************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           C01 IS PAGE-TOP.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

       DATA DIVISION.
       FILE SECTION.

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working storage STV0530B start '.

       01  WS-WORK-FIELDS.
           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.
           05  WS-HOLD-NBR             PIC  X(09)    VALUE SPACE.
           05  WS-NBR                  PIC  9(09)    VALUE ZERO.
           05  WS-QUOT                 PIC  9(09)    VALUE ZERO.
           05  WS-REMAIN               PIC  999      VALUE ZERO.
           05  WS-LEN                  PIC  9        VALUE ZERO.
           05  WS-ALPHA                PIC  X(26)    VALUE
                                       'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
           05  WS-HLD-ALPHA            PIC  X(06)    VALUE SPACE.
           05  WS-NEW-ALPHA            PIC  X(06)    VALUE SPACE.

       01  WS-SUBSCRIPTS               COMP.
           05  WS-SUB1                 PIC S9(04)    VALUE ZERO.
           05  WS-SUB2                 PIC S9(04)    VALUE ZERO.
           05  WS-SUB3                 PIC S9(04)    VALUE ZERO.

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  STV0530B END  '.

       LINKAGE SECTION.

       01  LS-FIELD.
           05  LS-DATA                 PIC  X(20).
           05  FILLER REDEFINES LS-DATA.
               10  LS-NUMBER           PIC  X(09).
               10  LS-SKIP-ALPHA       PIC  X.
               10  LS-ALPHA            PIC  X(06).
               10  LS-LEN              PIC  9.
               10  LS-EXTRA            PIC  XXX.

      /

       PROCEDURE DIVISION USING LS-FIELD.

       0100-PROGRAM-ENTRY.
           IF LS-NUMBER NUMERIC
               MOVE LS-NUMBER                 TO WS-HOLD-NBR
           ELSE
               PERFORM 0200-RIGHT-JUSTIFY-NUMBER.
           IF WS-HOLD-NBR NUMERIC
             IF LS-SKIP-ALPHA = 'Y'
                 MOVE WS-HOLD-NBR             TO LS-NUMBER
             ELSE
                 MOVE WS-HOLD-NBR             TO WS-NBR
                 IF WS-NBR > ZERO
                   IF WS-NBR < 321272407
                       MOVE 6                 TO WS-SUB3
                       PERFORM 0400-CONVERT-NUMBER
                       PERFORM 0300-LEFT-JUSTIFY-ALPHA
                       MOVE WS-HOLD-NBR       TO LS-NUMBER
                       MOVE WS-NEW-ALPHA      TO LS-ALPHA
                       MOVE WS-LEN            TO LS-LEN
                   ELSE
                       MOVE '******'          TO LS-ALPHA
                 ELSE
                     MOVE '******'            TO LS-ALPHA
           ELSE
               MOVE '******'                  TO LS-ALPHA.

           GOBACK.

       0200-RIGHT-JUSTIFY-NUMBER.
           MOVE 9                             TO WS-SUB2.
           PERFORM VARYING WS-SUB1 FROM 9 BY -1
               UNTIL WS-SUB1 < 1
               IF LS-NUMBER(WS-SUB1: 1) NUMERIC
                   MOVE LS-NUMBER(WS-SUB1: 1)
                                           TO WS-HOLD-NBR(WS-SUB2: 1)
                   SUBTRACT 1 FROM WS-SUB2
               END-IF
           END-PERFORM.
           INSPECT WS-HOLD-NBR REPLACING ALL SPACE BY ZERO.

       0300-LEFT-JUSTIFY-ALPHA.
           MOVE 1                             TO WS-SUB2.
           PERFORM VARYING WS-SUB1 FROM 1 BY 1
               UNTIL WS-SUB1 > 6
               IF WS-HLD-ALPHA(WS-SUB1: 1) = SPACE
                   CONTINUE
               ELSE
                   MOVE WS-HLD-ALPHA(WS-SUB1: 1)
                                           TO WS-NEW-ALPHA(WS-SUB2: 1)
                   MOVE WS-SUB2               TO WS-LEN
                   ADD 1                      TO WS-SUB2
               END-IF
           END-PERFORM.

       0400-CONVERT-NUMBER.
           DIVIDE 26 INTO WS-NBR GIVING WS-QUOT REMAINDER WS-REMAIN.
           IF WS-REMAIN = ZERO
             IF WS-QUOT > ZERO
                 SUBTRACT 1 FROM WS-QUOT
                 MOVE 26                      TO WS-REMAIN.
           IF WS-SUB3 > ZERO
               MOVE WS-ALPHA(WS-REMAIN: 1) TO WS-HLD-ALPHA(WS-SUB3: 1)
           ELSE
               DISPLAY 'Subscript error in STV0530B call '
               DISPLAY 'Subscript underflow: ws-sub3 = ' ws-sub3.
           IF WS-SUB3 > ZERO
               SUBTRACT 1 FROM WS-SUB3.
      *    DISPLAY 'WS-NBR ' WS-NBR ' QUOTIENT ' WS-QUOT
      *            ' REMAIN ' WS-REMAIN.
           IF WS-QUOT > ZERO
               MOVE WS-QUOT                   TO WS-NBR
               MOVE ZERO                      TO WS-QUOT
               MOVE ZERO                      TO WS-REMAIN
               GO TO 0400-CONVERT-NUMBER.

      ************************************ END STV0530B
