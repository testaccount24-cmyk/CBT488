
       TITLE '  MIS0540B: determine if a dataset matches a mask'.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MIS0540B.
      ******************************************************************
      *@@@ II given a dataset mask, determine if a match
      ******************************************************************
      *
      *  I am interested in knowing if/where these programs
      *  are in use.     Email:  jiannon@me.com
      *
      ******************************************************************
      * Date written: 09/05/97
      * Author      : Jim Iannone
      *
      *               GIVEN A DATASET NAME AND A DATASET MASK,
      *                 DETERMINE IF THE DATASET MATCHES THE MASK.
      *                 RETURN 'YES', 'NO ', OR A 3 DIGIT ERROR NUMBER.
      *
      *               A DATASET MASK IS AS FOLLOWS:
      *                 %   = ANY CHARACTER IN A POSITION, CHAR REQ
      *                 ?   = SAME AS %
      *                 *   = 0 OR MORE CHARACTERS
      *                 .*  = A SINGLE QUALIFIER
      *                 .** = 0 OR MORE QUALIFIERS
      *
      *               THE RULES HERE ARE THE SAME AS THE DFSMS-RMM
      *                 RULES FOR GENERIC SEARCHES
      *
      *               RULES:
      *               - IF '*' IS ADJACENT TO ANOTHER '*', THEY MUST
      *                 BE THE ONLY ENTRIES FOR THAT QUALIFIER
      *               - UP TO 22 QUALIFIERS IN A MASK OR DATASET NAME
      *                 ARE ALLOWED
      *               - IF THE DATASET NAME IS INVALID, AND
      *                 PARM-EDIT-NAMES-SW = 'Y' OR 'D',
      *                 AN ERROR IS RETURNED
      *               - IF THE MASK IS INVALID, AND
      *                 PARM-EDIT-NAMES-SW = 'Y' OR 'M',
      *                 AN ERROR IS RETURNED
      *
      *----------------------------------------------
      *   EX: MASK:   BACD.SVM%%%.*
      *       DSN:    BACD.SVMS01
      *       RESULT: NO MATCH - TRAILING QUALIFIER REQUIRED
      *----------------------------------------------
      *   EX: MASK:   BACD.SVM%%%.*
      *       DSN:    BACD.SVM001.G0045V00
      *       RESULT: MATCH
      *----------------------------------------------
      *   EX: MASK:   ACTP.APSSSD.%%9601.BKUP.*
      *       DSN:    ACTP.APSSSD.Q9601.BKUP.SAVE
      *       RESULT: NO MATCH - 1 CHARACTER IN 3RD QUALIFER
      *----------------------------------------------
      *   EX: MASK:   **.*S%S*.*
      *       DSN:    BACD.SMS001.G0034V00
      *       RESULT: MATCH
      ******************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

       DATA DIVISION.
       FILE SECTION.

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' Working storage MIS0540B start '.

       01  WS-WORK-FIELDS.
           05  WS-O-FOUND-SW           PIC  X        VALUE SPACE.
           05  WS-OO-FOUND-SW          PIC  X        VALUE SPACE.
           05  WS-O-MATCH-SW           PIC  X        VALUE SPACE.
           05  WS-OO-MATCH-SW          PIC  X        VALUE SPACE.
           05  WS-O-LAST-SW            PIC  X        VALUE SPACE.
           05  WS-OO-LAST-SW           PIC  X        VALUE SPACE.
           05  WS-ERROR-SW             PIC  XXX      VALUE SPACE.
           05  WS-QUALM                PIC  X(09)    VALUE SPACE.
           05  WS-QUALD                PIC  X(09)    VALUE SPACE.
           05  WS-HOLD-DSN             PIC  X(44)    VALUE SPACE.
           05  WS-HOLD-MASK            PIC  X(44)    VALUE SPACE.
           05  WS-TEST-CHAR            PIC  X        VALUE SPACE.
               88  VALID-D-1           VALUE 'A' THRU 'Z' '#' '@' '$'.
               88  VALID-D-2-8         VALUE 'A' THRU 'Z' '0' THRU '9'
                                             '#' '@' '$' '-'.
               88  VALID-M             VALUE 'A' THRU 'Z' '0' THRU '9'
                                             '#' '@' '$' '-' '%' '?'
                                             '*'.

       01  WS-SUBSCRIPTS               COMP.
           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.
           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.
           05  WS-M1                   PIC S9(05)    VALUE ZERO.
           05  WS-MM1                  PIC S9(05)    VALUE ZERO.
           05  WS-D1                   PIC S9(05)    VALUE ZERO.
           05  WS-DD1                  PIC S9(05)    VALUE ZERO.
           05  WS-HOLD-M-1             PIC S9(05)    VALUE ZERO.
           05  WS-HOLD-MM-1            PIC S9(05)    VALUE ZERO.
           05  WS-HOLD-D-1             PIC S9(05)    VALUE ZERO.
           05  WS-HOLD-DD-1            PIC S9(05)    VALUE ZERO.
           05  WS-TALLY                PIC S9(05)    VALUE ZERO.

       01  WS-TABLES.
           05  WS-MASK-TABLE                         VALUE SPACE.
               10  WS-MASK             PIC  X(09)
                                       OCCURS 23 TIMES.
           05  WS-DSN-TABLE                          VALUE SPACE.
               10  WS-DSN              PIC  X(09)
                                       OCCURS 23 TIMES.

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  MIS0540B END  '.

       LINKAGE SECTION.

       01  PARM-FIELD.
           05  PARM-MASK               PIC  X(44).
           05  PARM-DSN                PIC  X(44).
           05  PARM-DISPLAY-SW         PIC  X.
           05  PARM-EDIT-NAMES-SW      PIC  X.
           05  PARM-MATCH-SW           PIC  XXX.

      /
       PROCEDURE DIVISION USING PARM-FIELD.

       0100-PROGRAM-ENTRY.

           MOVE PARM-DSN                      TO WS-HOLD-DSN.
           MOVE PARM-MASK                     TO WS-HOLD-MASK.

           PERFORM VARYING WS-SUB1 FROM 1 BY 1
               UNTIL WS-SUB1 > 23
               MOVE SPACE                     TO WS-MASK(WS-SUB1)
               MOVE SPACE                     TO WS-DSN(WS-SUB1)
           END-PERFORM.
           MOVE SPACE                         TO WS-OO-MATCH-SW
                                                 WS-OO-FOUND-SW
                                                 WS-OO-LAST-SW.
           MOVE ZERO                          TO WS-HOLD-MM-1 WS-SUB1
                                                 WS-HOLD-DD-1 WS-SUB2
                                                 WS-MM1 WS-DD1.

           UNSTRING WS-HOLD-MASK DELIMITED BY '.'
               INTO WS-MASK(1)  WS-MASK(2)  WS-MASK(3)  WS-MASK(4)
                    WS-MASK(5)  WS-MASK(6)  WS-MASK(7)  WS-MASK(8)
                    WS-MASK(9)  WS-MASK(10) WS-MASK(11) WS-MASK(12)
                    WS-MASK(13) WS-MASK(14) WS-MASK(15) WS-MASK(16)
                    WS-MASK(17) WS-MASK(18) WS-MASK(19) WS-MASK(20)
                    WS-MASK(21) WS-MASK(22)
               ON OVERFLOW
                   GO TO 2000-OVERFLOW.
           UNSTRING WS-HOLD-DSN DELIMITED BY '.'
               INTO WS-DSN(1)   WS-DSN(2)   WS-DSN(3)   WS-DSN(4)
                    WS-DSN(5)   WS-DSN(6)   WS-DSN(7)   WS-DSN(8)
                    WS-DSN(9)   WS-DSN(10)  WS-DSN(11)  WS-DSN(12)
                    WS-DSN(13)  WS-DSN(14)  WS-DSN(15)  WS-DSN(16)
                    WS-DSN(17)  WS-DSN(18)  WS-DSN(19)  WS-DSN(20)
                    WS-DSN(21)  WS-DSN(22)
               ON OVERFLOW
                   GO TO 2000-OVERFLOW.

      ****************************************
      *    determine if all characters in the dataset name are valid
      ****************************************
           MOVE SPACE                         TO WS-ERROR-SW.
           IF PARM-EDIT-NAMES-SW = 'Y' OR 'D'
               PERFORM 0200-VALIDATE-DSN
                   VARYING WS-SUB1 FROM 1 BY 1
                   UNTIL WS-SUB1 > 22 OR WS-DSN(WS-SUB1) = SPACE
                   AFTER WS-SUB2 FROM 1 BY 1
                   UNTIL WS-SUB2 > 8.
           IF WS-SUB1 > 40
               OR WS-SUB2 > 40
               MOVE '100'                     TO WS-ERROR-SW
               GO TO 2000-MOVE-ERR-SWITCH.

      ****************************************
      *    if '**' is used in a qualifier, it must be the only
      *    entry in the qualifier.
      *    determine if all characters in the mask are valid.
      *+**************************************
           IF PARM-EDIT-NAMES-SW = 'Y' OR 'M'
               PERFORM 0300-VALIDATE-MASK THRU
                       0300-VALIDATE-MASK-EXIT
                       VARYING WS-SUB1 FROM 1 BY 1
                       UNTIL WS-SUB1 > 22 OR WS-MASK(WS-SUB1) = SPACE.
           IF WS-ERROR-SW NOT = SPACE
               GO TO 2000-MOVE-ERR-SWITCH.

      ****************************************
      *    loop through the qualifiers, left to right, until
      *    spaces are found
      *+**************************************
           MOVE 1                             TO WS-MM1 WS-DD1.
           PERFORM 0400-TEST-ALL-QUAL THRU
                   0400-TEST-ALL-QUAL-EXIT.

      ****************************************
      *    final determination as to whether the dataset name
      *    matches the mask
      *+**************************************
           IF WS-ERROR-SW NOT = SPACE
               GO TO 2000-MOVE-ERR-SWITCH
           ELSE
           IF WS-OO-MATCH-SW = 'Y'
               GO TO 2000-MOVE-YES-SWITCH
           ELSE
           IF WS-OO-MATCH-SW = SPACE
             IF WS-O-MATCH-SW = 'Y'
                 GO TO 2000-MOVE-YES-SWITCH.

           GO TO 2000-MOVE-NO-SWITCH.

       0200-VALIDATE-DSN.
           MOVE WS-DSN(WS-SUB1)(WS-SUB2: 1)   TO WS-TEST-CHAR.
           IF WS-TEST-CHAR = SPACE
               MOVE 8                         TO WS-SUB2
           ELSE
           IF WS-SUB2 = 1
             IF VALID-D-1
                 CONTINUE
             ELSE
                 MOVE 50                      TO WS-SUB1 WS-SUB2
           ELSE
           IF VALID-D-2-8
               CONTINUE
           ELSE
               MOVE 50                        TO WS-SUB1 WS-SUB2.

       0300-VALIDATE-MASK.
           MOVE ZERO                          TO WS-TALLY.
           INSPECT WS-MASK(WS-SUB1) TALLYING WS-TALLY FOR ALL '*'.
           IF WS-TALLY > 1
               PERFORM VARYING WS-SUB2 FROM 1 BY 1
                   UNTIL WS-SUB2 > 7
                   IF WS-MASK(WS-SUB1)(WS-SUB2: 2) = '**'
                     IF WS-MASK(WS-SUB1) = '**      '
                         MOVE 7               TO WS-SUB2
                     ELSE
                         MOVE '104'           TO WS-ERROR-SW
                         MOVE 7               TO WS-SUB2
                     END-IF
                   END-IF
               END-PERFORM
           END-IF.
           PERFORM VARYING WS-SUB2 FROM 1 BY 1
               UNTIL WS-SUB2 > 8
               MOVE WS-MASK(WS-SUB1)(WS-SUB2: 1) TO WS-TEST-CHAR
               IF WS-TEST-CHAR = SPACE
                   MOVE 8                     TO WS-SUB2
               ELSE
               IF NOT VALID-M
                   MOVE '106'                 TO WS-ERROR-SW
               END-IF
               END-IF
           END-PERFORM.

       0300-VALIDATE-MASK-EXIT. EXIT.

      ****************************************
      *    if WS-MASK = space: determine results of the
      *    qualifier test
      *+**************************************
       0400-TEST-ALL-QUAL.
           IF WS-MASK(WS-MM1) = SPACE
               OR WS-MM1 > 22
               IF WS-DSN(WS-DD1) = SPACE
                   GO TO 0400-TEST-ALL-QUAL-EXIT
               ELSE
               IF WS-OO-FOUND-SW = 'Y'
                 IF WS-OO-LAST-SW = SPACE
                     MOVE WS-HOLD-MM-1        TO WS-MM1
                     MOVE WS-HOLD-DD-1        TO WS-DD1
                     ADD 1                    TO WS-HOLD-DD-1
                     MOVE 'N'                 TO WS-OO-MATCH-SW
                     GO TO 0400-TEST-ALL-QUAL
                 ELSE
                     GO TO 0400-TEST-ALL-QUAL-EXIT
               ELSE
                   MOVE 'N'                   TO WS-OO-MATCH-SW
                   GO TO 0400-TEST-ALL-QUAL-EXIT.

      ****************************************
      *    if WS-MASK = **: hold next qualifer position in memory
      *    until determination of equality can be made
      *+**************************************
           IF WS-MASK(WS-MM1) = '**'
               MOVE 'Y'                       TO WS-OO-LAST-SW
               MOVE 'Y'                       TO WS-OO-FOUND-SW
               MOVE 'Y'                       TO WS-OO-MATCH-SW
               ADD 1                          TO WS-MM1
               MOVE WS-MM1                    TO WS-HOLD-MM-1
               MOVE WS-DD1                    TO WS-HOLD-DD-1
               ADD 1                          TO WS-HOLD-DD-1
               GO TO 0400-TEST-ALL-QUAL.

           IF WS-MASK(WS-MM1) = '*'
             IF WS-DSN(WS-DD1) = SPACE
                 MOVE 'N'                     TO WS-OO-MATCH-SW
                 GO TO 0400-TEST-ALL-QUAL-EXIT
             ELSE
                 ADD 1                        TO WS-MM1
                 ADD 1                        TO WS-DD1
                 MOVE 'Y'                     TO WS-OO-MATCH-SW
                 GO TO 0400-TEST-ALL-QUAL.

           IF WS-MASK(WS-MM1) = WS-DSN(WS-DD1)
               ADD 1                          TO WS-MM1
               ADD 1                          TO WS-DD1
               MOVE 'Y'                       TO WS-OO-MATCH-SW
               MOVE SPACE                     TO WS-OO-LAST-SW
               GO TO 0400-TEST-ALL-QUAL.

      ****************************************
      *    qualifier contents must be tested for equality
      *+**************************************
           MOVE 1                             TO WS-M1 WS-D1.
           MOVE SPACE                         TO WS-O-FOUND-SW
                                                 WS-O-LAST-SW
                                                 WS-O-MATCH-SW.
           MOVE ZERO                          TO WS-HOLD-D-1
                                                 WS-HOLD-M-1.

           MOVE WS-MASK(WS-MM1)               TO WS-QUALM.
           MOVE WS-DSN(WS-DD1)                TO WS-QUALD.
           PERFORM 0500-TEST-QUAL THRU
                   0500-TEST-QUAL-EXIT.

           IF WS-O-MATCH-SW = 'Y'
               ADD 1                          TO WS-MM1
               ADD 1                          TO WS-DD1
               MOVE 'Y'                       TO WS-OO-MATCH-SW
               MOVE SPACE                     TO WS-OO-LAST-SW
               GO TO 0400-TEST-ALL-QUAL.

      ****************************************
      *    determine results of individual qualifier test
      *+**************************************
           IF WS-OO-FOUND-SW = 'Y'
             IF WS-OO-MATCH-SW = 'Y'
                 MOVE WS-HOLD-MM-1            TO WS-MM1
                 MOVE WS-HOLD-DD-1            TO WS-DD1
                 ADD 1                        TO WS-HOLD-DD-1
                 MOVE 'N'                     TO WS-OO-MATCH-SW
                 GO TO 0400-TEST-ALL-QUAL
             ELSE
                 ADD 1                        TO WS-DD1
                 IF WS-DSN(WS-DD1) = SPACE
                     GO TO 0400-TEST-ALL-QUAL-EXIT
                 ELSE
                     GO TO 0400-TEST-ALL-QUAL
           ELSE
               MOVE 'N'                       TO WS-OO-MATCH-SW.

       0400-TEST-ALL-QUAL-EXIT. EXIT.

      ****************************************
      *    logic for each qualifer test (below) is similar to
      *    the logic for all qualifier tests (above)
      *+**************************************
       0500-TEST-QUAL.
           IF WS-QUALM(WS-M1: 1) = SPACE
               OR WS-M1 > 8
               IF WS-QUALD(WS-D1: 1) = SPACE
                   GO TO 0500-TEST-QUAL-EXIT
               ELSE
               IF WS-O-FOUND-SW = 'Y'
                 IF WS-O-LAST-SW = SPACE
                     MOVE WS-HOLD-M-1         TO WS-M1
                     MOVE WS-HOLD-D-1         TO WS-D1
                     ADD 1                    TO WS-HOLD-D-1
                     MOVE 'N'                 TO WS-O-MATCH-SW
                     GO TO 0500-TEST-QUAL
                 ELSE
                     GO TO 0500-TEST-QUAL-EXIT
               ELSE
                   MOVE 'N'                   TO WS-O-MATCH-SW
                   GO TO 0500-TEST-QUAL-EXIT.

           IF WS-QUALM(WS-M1: 1) = '*'
               MOVE 'Y'                       TO WS-O-LAST-SW
               MOVE 'Y'                       TO WS-O-FOUND-SW
               MOVE 'Y'                       TO WS-O-MATCH-SW
               ADD 1                          TO WS-M1
               MOVE WS-M1                     TO WS-HOLD-M-1
               MOVE WS-D1                     TO WS-HOLD-D-1
               ADD 1                          TO WS-HOLD-D-1
               GO TO 0500-TEST-QUAL.

           IF WS-QUALM(WS-M1: 1) = '%' OR '?'
             IF WS-QUALD(WS-D1: 1) = SPACE
                 MOVE 'N'                     TO WS-O-MATCH-SW
                 GO TO 0500-TEST-QUAL-EXIT
             ELSE
                 ADD 1                        TO WS-M1
                 ADD 1                        TO WS-D1
                 MOVE 'Y'                     TO WS-O-MATCH-SW
                 GO TO 0500-TEST-QUAL.

           IF WS-QUALM(WS-M1: 1) = WS-QUALD(WS-D1: 1)
               ADD 1                          TO WS-M1
               ADD 1                          TO WS-D1
               MOVE 'Y'                       TO WS-O-MATCH-SW
               MOVE SPACE                     TO WS-O-LAST-SW
               GO TO 0500-TEST-QUAL
           ELSE
           IF WS-O-FOUND-SW = 'Y'
             IF WS-O-MATCH-SW = 'Y'
                 MOVE WS-HOLD-M-1             TO WS-M1
                 MOVE WS-HOLD-D-1             TO WS-D1
                 ADD 1                        TO WS-HOLD-D-1
                 MOVE 'N'                     TO WS-O-MATCH-SW
                 GO TO 0500-TEST-QUAL
             ELSE
                 ADD 1                        TO WS-D1
                 IF WS-QUALD(WS-D1: 1) = SPACE
                     GO TO 0500-TEST-QUAL-EXIT
                 ELSE
                     GO TO 0500-TEST-QUAL
           ELSE
               MOVE 'N'                       TO WS-O-MATCH-SW.

       0500-TEST-QUAL-EXIT. EXIT.

       2000-OVERFLOW.
           MOVE '108'                         TO PARM-MATCH-SW.
           GO TO 3000-FINISH.

       2000-MOVE-ERR-SWITCH.
           MOVE WS-ERROR-SW                   TO PARM-MATCH-SW.
           GO TO 3000-FINISH.

       2000-MOVE-YES-SWITCH.
           MOVE 'YES'                         TO PARM-MATCH-SW.
           GO TO 3000-FINISH.

       2000-MOVE-NO-SWITCH.
           MOVE 'NO '                         TO PARM-MATCH-SW.
           GO TO 3000-FINISH.

       3000-FINISH.
           IF PARM-DISPLAY-SW = '2'
               DISPLAY PARM-MASK
               DISPLAY PARM-DSN
               DISPLAY PARM-MATCH-SW.

           GOBACK.

      ************************************ END MIS0540B
