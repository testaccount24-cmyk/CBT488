*
*
*   JCLNEAT input parms
*
*
*   Position 3 - all parm items:
*
*                C=flags to pass to program: comment processing
*                    options, master overrides, etc
*                I=JCL arrangement items: where to search for and
*                    place various JCL statements so they line-up
*                S=Specify which records are processed by this
*                    program - records outside the range are unchanged
*                W=if converting comments to lowercase, specify
*                    words to convert back to uppercase so
*                    comments look professional
*
*----------------------------------------------
*
*   Process flags
*
*   Upper/lower case comment logic:
*   ------------
*   after dot     = capitalize first word after '. ' or ': '
*   case          = L  convert comments to lower case
*                   U  convert comments to upper case
*   cap first     = F  capitalize first word of first line in group
*                   A  capitalize first word for all lines in group
*   file name uc  = convert commented file names to upper case
*
*   Comment formatting:
*   ------------
*   line type     = R  change comment lines to asterisks pos 4 - 71
*                   D  change comment lines to dashes pos 4 - 52
*   move comment  = move most comments to specified position ####
*                      default value is 0006
*   zap star      = blank trailing asterisks
*   zap last c    = blank out comment position 73 - 80
*
*   JCL alteration options:
*   ------------
*   zap last j    = blank out JCL position 73 - 80
*   flag disp     = add 'new' etc at pos 0069 based on file disposition
*                      location can be overridden (0060 - 0078)
*   flag pfx      = prefix above comment with asterisk
*   swap disp     = swap DSN= and DISP=SHR so DISP=SHR is in front
*   reset steps   = reset proc and job numbering for each proc/job
*   renum proc    = renumber proc EXEC steps in JCL.  specify step
*                     name prefix in option3, one to four characters
*   renum pincr   = step increment ####   ex: 0010
*   renum pdigit  = step increment physical length ####
*                             ex:  0001 = step1    0002 = step01
*                                  0003 = step001  0004 = step0001
*   renum prog    = specify a different prefix to use for steps
*                     invoking this program.  enter up to 10
*                     "renum prog" programs with prefix in option3.
*   renum job     = renumber job EXEC steps in JCL.  specify job
*                     name prefix in option3, one to four characters
*   renum jincr   = job step increment ####   ex: 0010
*   renum jdigit  = job step increment physical length ####
*                             ex:  0001 = J1       0002 = J01
*                                  0003 = J001     0004 = J0001
*
*   Master overrides, so you don't have to comment-out each setting
*   ------------
*   no comment    = skip most comment alterations (except step renums)
*   no lineup     = skip most JCL alterations (except step renums)
*   no renum      = skip renumbering both proc and job steps
*
*
*   process flags                option1  option2
*   |                            |        | option3
*   |                            |        | |
* - ------------                 -------- - ------
* C no lineup
* C no comment
* C no renum
* - ------------ --- --- --- --- -------- - ------
  C case                         L                  L U
* C after dot
* C cap first                    F                  A F
  C line type                    D                  D R
  C file name uc
  C move comment                 0006
  C zap star
* C zap last c
* C zap last j
  C flag disp                    0069
  C flag pfx
  C swap disp
  C reset steps
* C renum proc                              S
  C renum pincr                  0010
  C renum pdigit                 0004
  C renum prog                   TPBDRIVE   TP
  C renum prog                   IEFBR14    B4
  C renum prog                   IEBGENER   G
* C renum job                               J
  C renum jincr                  0010
  C renum jdigit                 0004
* - ------------ --- --- --- --- -------- - ------
*
*
*----------------------------------------------
*
*   JCL arrangement options
*
*   enter up to 200 items
*
*  bar helps show if spaces precede JCL word
*  |
*  |             search length of JCL item 001-020
*  |             |
*  |             |   position to place JCL item
*  |             |   |
*  |find in JCL  |   |   start search column
*  ||            |   |   |   end search column
*  ||            |   |   |   |
*  ||            |   |   |   |   IF=alter IF with "IF01"
*  ||            |   |   |   |   ENDIF=alter ENDIF with "END01'
*  ||            |   |   |   |   |
*  ||            |   |   |   |   |        X=skip considering as JCL
*  ||            |   |   |   |   |        |  to allow regular comments
*  ||            |   |   |   |   |        |  to remain lower-case
* - ----+----+-- --- --- --- --- -------- -
  I| '           002 015 003 016          X
  I| (           002 015 003 016          X
  I| JOB         005 011 004 016          X
  I| DD          004 011 004 020
  I| IF          004 011 003 020 IF       X
  I| ENDIF       006 011 003 016 ENDIF
  I| AMP=        005 015 004 022
  I| DCB=        005 015 004 022
  I| DSN=        005 015 004 022
  I| EXEC        005 011 004 016
  I| PROC        005 011 004 022          X
  I| PEND        005 011 004 022
  I| PGM=        005 016 004 022
  I| VOL=        005 016 004 022
  I| COND=       006 015 004 022
  I| DEST=       006 015 004 022
  I| DISP=       006 015 004 022
  I| DUMMY       006 015 004 022
  I| PARM=       006 015 004 022
  I| TIME=       006 015 004 022
  I| UNIT=       006 015 004 022
  I| CLASS=      007 015 004 022
  I| DSORG=      007 015 004 022
  I| LABEL=      007 015 004 022
  I| LRECL=      007 015 004 022
  I| RECFM=      007 015 004 022
  I| SPACE=      007 015 004 022
  I| REGION=     008 015 004 022
  I| SYSOUT=     008 015 004 022
  I| TYPRUN=     008 015 004 022
  I| VOLUME=     008 015 004 022
  I| RESTART=    009 015 004 022
  I| MSGCLASS=   010 015 004 022
  I| MSGLEVEL=   010 015 004 022
* - ----+----+-- --- --- --- --- -------- -
*
*
*----------------------------------------------
*
*   If 'comment lc' specified,
*     convert these words within JCL comments to uppercase
*
*   enter up to 200 items
*
*  bar helps show if spaces precede JCL word
*  |
*  |   search length F=first character uppercase
*  |               | N=whole word if contains any numeric ex: EXED234
*  |JCL word       | W=whole word (and connected words) uppercase
*  ||              | |
* - ----+----+-- --- -
  W| dd          003 W
  W| ex          003 N
  W|dcb          003 W
  W|jit          003 W
  W|gxs          003 W
  W|xlt          003 W
  W| agr         004 W
  W| fgp         004 W
  W| ftp         004 W
  W| gdg         004 W
  W| gl          004 W
  W| gm          004 W
  W| jcl         004 W
  W| oe          004 W
  W|pgm=         004 W
  W|vol=         004 W
  W| 'n'         005 W
  W| 'y'         005 W
  W| a/r         005 W
  W| aiag        005 W
  W| ca7         005 W
  W| edi         005 W
  W| g/l         005 W
  W| hubg        005 W
  W| sar         005 W
  W| tmmc        005 W
  W|disp=        005 W
  W|dsorg        005 W
  W|lrecl        005 W
  W|recfm        005 W
  W|parm=        005 W
  W|unit=        005 W
  W| edima       006 F
  W| enmis       006 W
  W| geisd       006 W
  W| glble       006 W
  W| ifps.       006 W
  W| openc       006 W
  W| tislv       006 W
  W| vsam        006 W
  W| chrys       006 F
  W| ford        006 F
  W| honda       006 F
  W| note:       006 F
  W|label=       006 W
  W|space=       006 W
  W| inalfa      007 F
  W| magna       007 F
  W| mitsub      007 F
  W| navist      007 F
  W| vanfax      007 F
  W|blksize      007 W
  W|iefbr14      007 W
  W|volume=      007 W
  W| nissan      008 F
  W| subaru      008 F
  W|iebgener     008 W
* - ----+----+-- --- -
*
*
*   Specify which records are processed by this program
*
*   start = start including at this record
*   end = stop including at this record
*   |
*   |     zero value causes parm to be ignored
*   |     |
* - ----- ---------
  S start 000000000
  S end   000000000
* - ----- ---------
