
  Recent update documentation


  2024-03-29
    Alter ACF2 rule alteration process to allow 'undo' logic

  2023-07-05
    Add ACF2 rule alteration process

  2020-01-30
    Change MIS0425B to call STV0400B dynamic rather than static
    Add logic to XLT04650 to only alter strings within lrecl 32700
      records if wrapped in EDI separator or EOR characters
    Add member S0400A for testing the 80/20 year window in STV0400B

  2020-01-01
    Add member FTPGDG - example of FTPing files to mainframe
    Add member XLT04660 - discard print pages when totals are zero
    Add member X04660D to further document XLT04660
    Add member X04660 and X04660P for running XLT04660
    Alter MIS0590B to format SMTP "Date:" lines
    Alter PARM0060 to specify 'From' and 'to' and 'reply-to' SMTP lines
    Alter DOCCSV to allow for variable working field lengths

  2019-11-19
    Merged member $UTILITY into $DOC and removed $UTILITY
    Add members S0400B and STV0400T for testing STV0400B
    Add member CHNGEXMP to show additional CHNGFILE examples
    Add member M0425B - JCL for testing MIS0425B
    Add member STV0530B - convert number to alpha equivalent
    Add members S0530B and STV0530T for testing STV0530B
    Add member STV0150B - center a 79 byte message (below)
    Add member STV0270B - center a 40 byte message (below)
    Remove STV1270B since a duplicate of STV0270B
    Remove STV1280B since a duplicate of STV0280B
    Rename "TST" jobs and other members to match program name
    Alter all programs to generate lower-case display statements

    Altered the wait-on-event program MIS0655B:
      a target wait-until time is entered as HH:MM -
      if the delay is set high, like three minutes, then once the
      specifed time arrives there still could be a delay of up to
      three minutes before the program continues.  this was changed
      to reset the delay to fall on the specified time exactly.
      Reworked program to make logic more streamlined.

    Added logic to JCLNEAT:
      add ability to attempt to keep file names within comments
      in uppercase when comments are being converted to lowercase.

    CHNGFILE:
      expand logic for #CNV# - allow converting numbers such as
      '   1 ' to '00001' internally and as output in files.

    PULLFILE:
      convert messages to lowercase. adjust IF indenting.
      improvements to PULLDOCU documentation.

    STV0400B:
      get current date and time using function rather than ACCEPT.
      add 'H:M:SP' time format and rename time formats:
        'HMSS  ' to 'HMP   '
        'H:M SS' to 'H:M P '
        'H:MSS ' to 'H:MP  '
      handle changes to STV0320B - allow for 8 digit time converions.

    STV0320B:
      expand time length to 8 digits to allow including seconds when
        converting military and standard times

    STV0150B:
      center a 79 byte field.  generally used when generating reports
      and you want the contents of a field to appear centered on the
      report.  Can also pass "XX" and have the program return
      "YOUR INSTITUTION NAME" centered in the field, or pass "XXL"
      to have the same string returned in lower-case, etc.
      Alter the programs to pass whetever your institution uses...

      Example:  05  WS-CALL-STV0270B      PIC  X(08)  VALUE 'STV0270B'.
                05  HDG-TITLE             PIC  X(40).
                MOVE 'USA'                TO HDG-TITLE.
                CALL WS-CALL-STV0270B USING HDG-TITLE.
                HDG-TITLE is now:
                             '        UNITED STATES OF AMERICA        '

                MOVE 'USL'                TO HDG-TITLE.
                CALL WS-CALL-STV0270B USING HDG-TITLE.
                HDG-TITLE is now:
                             '        United States of America        '

    STV0270B:
      center a 40 byte field.  see STV0150B.


  2019-10-23
    Found an issue in COBNEAT where Cobol comments were not
      being converted to lower-case when over on the far right.
    Added the ability to indicate which records were changed by COBNEAT.

    Added logic to JCLNEAT to convert file names within comments
      to upper-case.
    Added logic to JCLNEAT to convert words containing numbers
      to upper-case while leaving non-numerics unchanged:
      For example string " ex" with "W" conversion code:
        "EXTRAPOLATE" "EXEDI540"  "EXAMINE" "EXGEN120"
      For example string " ex" with "N" conversion code:
        "extrapolate" "EXEDI540"  "examine" "EXGEN120"

  2019-10-10
    So I wrote another program to solidify the whole JCL cleanup
      process.  The new program - JCLSPLT - allows users to
      split long JCL lines prior to re-formatting with JCLNEAT.
      This will allow users to generate space on the right for
      documentation, and reduce the clutter of excessively long
      JCL lines.  I had to write a new program, rather than
      update JCLNEAT, because JCLNEAT alters items in-place - it
      only does rewrites on records rather than writing records
      to a separate file, which allows adding additional records
      (the result of the split process).

  2019-10-03
    COBNEAT has been changed to better handle locating PERFORM
      statements when embedded within IF statements.
    Added logic to format SORT statements.
    Added reserved words to reserved word table in COBNEAT1.
    Addressed issue when splitting "ELSE IF" statements into two
      separate lines.
    Added ability to properly place lines following "ELSE IF" statements
      when not splitting into two separate lines.
    Display statements have been revised.
    New capability to limit which records within a Cobol program
      are altered by the program.
    New capability to limit which changes are displayed, to reduce
      SYSOUT file sizes when altering large programs.
    Updated documentation related to these changes.

  2019-09-20
    Found an issue with COBNEAT where, under rare circumstances,
      it might move Cobol paragraph names to unwanted locations.
    Added additional test display statements.
    Added a parameter to allow users to specify the initial
      "Cobol paragraph name prefix length" when renumbering Cobol
      paragraph names.
    Added a display message if attempting to renumber a Cobol
      paragraph and it expands the length beyond 30.
    For field names ending in position 72, fixed an issue where the
      character in position 72 was being left behind when moving
      fields to the left.
    Further documentation was added to COBNOTE.

  2019
    Further updates to file 488 and 489

  2000
    Initial submission to CBT

